Found whitespace at line 10 and col 1
Found new line at line 10 and col 2
Found keyword 'exit' at line 11 and col 1
[Line 11, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 11 and col 5
[Line 11, Col 5] Token(SEPARATOR): (
Found number = 4096 at line 11 and col 6
[Line 11, Col 6] Token(INT): 4096
Found whitespace at line 11 and col 12
Found new line at line 11 and col 13
Found CLOSED_PARENTHESIS ) at line 12 and col 1
[Line 12, Col 1] Token(SEPARATOR): )
Found Semicolon at line 12 and col 2
[Line 12, Col 2] Token(SEPARAexit
[?2004lexit
Script done.
[?2004h]0;acp-pradhyuman@b3170: /mnt/d/Desktop/immense/OS/compiler_0[01;32macp-pradhyuman@b3170[00m:[01;34m/mnt/d/Desktop/immense/OS/compiler_0[00m$ exit
[?2004lexit

Script done on 2025-07-24 20:08:15+05:30 [COMMAND_EXIT_CODE="0"]
TIFIER): x
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 1
[Line 2, Col 10] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): +=
[Line 3, Col 6] Token(INT): 5
[Line 3, Col 7] Token(SEPARATOR): ;
[Line 4, Col 1] Token(KEYWORD): int
[Line 4, Col 5] Token(IDENTIFIER): y
[Line 4, Col 7] Token(OPERATOR): =
[Line 4, Col 9] Token(IDENTIFIER): x
[Line 4, Col 11] Token(OPERATOR): <<
[Line 4, Col 14] Token(INT): 1
[Line 4, Col 15] Token(SEPARATOR): ;
[Line 5, Col 1] Token(KEYWORD): int
[Line 5, Col 5] Token(IDENTIFIER): z
[Line 5, Col 7] Token(OPERATOR): =
[Line 5, Col 9] Token(INT): 1
[Line 5, Col 10] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): if
[Line 6, Col 4] Token(SEPARATOR): (
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
[Line 6, Col 13] Token(INT): 1
[Line 6, Col 14] Token(SEPARATOR): )
[Line 6, Col 16] Token(OPERATOR): -
[Line 6, Col 18] Token(INT): 6
[Line 6, Col 20] Token(OPERATOR): ==
[Line 6, Col 23] Token(IDENTIFIER): z
[Line 6, Col 24] Token(SEPARATOR): )
[Line 6, Col 26] Token(SEPARATOR): {
[Line 7, Col 5] Token(IDENTIFIER): abc
[Line 7, Col 9] Token(OPERATOR): <<=
[Line 7, Col 13] Token(INT): 1
[Line 7, Col 14] Token(SEPARATOR): ;
[Line 8, Col 5] Token(KEYWORD): exit
[Line 8, Col 9] Token(SEPARATOR): (
[Line 8, Col 10] Token(IDENTIFIER): abc
[Line 8, Col 13] Token(SEPARATOR): )
[Line 8, Col 14] Token(SEPARATOR): ;
[Line 9, Col 1] Token(SEPARATOR): }
[Line 11, Col 1] Token(KEYWORD): exit
[Line 11, Col 5] Token(SEPARATOR): (
[Line 11, Col 6] Token(INT): 4096
[Line 12, Col 1] Token(SEPARATOR): )
[Line 12, Col 2] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x4a96250, current now = 0x4a96250
DEBUG LINK: linked stmt=0x4a963d0, current now = 0x4a963d0
DEBUG LINK: linked stmt=0x4a96680, current now = 0x4a96680
DEBUG LINK: linked stmt=0x4a96a60, current now = 0x4a96a60
DEBUG LINK: linked stmt=0x4a96be0, current now = 0x4a96be0
After parse_expression - condition: Node type 0, int_val=1
Condition parsed. Current token: )
Then block parsed. Current token: exit
DEBUG IF_SUBTREE: if_node=0x4a97e30, cond=0x4a97640, then_block=0x4a978d0, then_block->right=(nil)
DEBUG LINK: linked stmt=0x4a97e30, current now = 0x4a97e30
DEBUG LINK: linked stmt=0x4a97ef0, current now = 0x4a97ef0

--- Syntax Tree ---
PROGRAM
  VAR_DECL: abc
    LITERAL_INT: 12
  VAR_DECL: x
    LITERAL_INT: 1
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 12
  VAR_DECL: z
    LITERAL_INT: 1
  IF_STATEMENT
    CONDITION:
      LITERAL_INT: 1
      BLOCK {
        ASSIGNMENT: =
          IDENTIFIER: abc
        EXIT_CALL
          LITERAL_INT: 24
      } // END BLOCK
  EXIT_CALL
    LITERAL_INT: 4096
Compilation successful. Output: generated

Exiting
==2156==
==2156== HEAP SUMMARY:
==2156==     in use at exit: 165 bytes in 6 blocks
==2156==   total heap usage: 134 allocs, 128 frees, 7,476 bytes allocated
==2156==
==2156== 82 (40 direct, 42 indirect) bytes in 1 blocks are definitely lost in loss record 5 of 6
==2156==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2156==    by 0x10B18B: createNode (parser.c:170)
==2156==    by 0x10C8F1: parse_assignment_statement (parser.c:678)
==2156==    by 0x10DAB7: parse_statement (parser.c:1013)
==2156==    by 0x10DE3F: parse (parser.c:1099)
==2156==    by 0x1095A6: main (main.c:43)
==2156==
==2156== 83 (40 direct, 43 indirect) bytes in 1 blocks are definitely lost in loss record 6 of 6
==2156==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2156==    by 0x10B18B: createNode (parser.c:170)
==2156==    by 0x10C8F1: parse_assignment_statement (parser.c:678)
==2156==    by 0x10DAB7: parse_statement (parser.c:1013)
==2156==    by 0x10DCEF: parse_block (parser.c:1062)
==2156==    by 0x10D5D7: parse_if_statement (parser.c:953)
==2156==    by 0x10D7FB: parse_statement (parser.c:993)
==2156==    by 0x10DE3F: parse (parser.c:1099)
==2156==    by 0x1095A6: main (main.c:43)
==2156==
==2156== LEAK SUMMARY:
==2156==    definitely lost: 80 bytes in 2 blocks
==2156==    indirectly lost: 85 bytes in 4 blocks
==2156==      possibly lost: 0 bytes in 0 blocks
==2156==    still reachable: 0 bytes in 0 blocks
==2156==         suppressed: 0 bytes in 0 blocks
==2156==
==2156== For lists of detected and suppressed errors, rerun with: -s
==2156== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ valgrind --leak-check=full ./build/main test5.tc
==2226== Memcheck, a memory error detector
==2226== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2226== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2226== Command: ./build/main test5.tc
==2226==
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = x at line 1 and col 5
[Line 1, Col 5] Token(IDENTIFIER): x
Found Semicolon at line 1 and col 6
[Line 1, Col 6] Token(SEPARATOR): ;
Found new line at line 1 and col 7
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = a at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): a
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 11 at line 2 and col 9
[Line 2, Col 9] Token(INT): 11
Found Semicolon at line 2 and col 11
[Line 2, Col 11] Token(SEPARATOR): ;
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): =
Found whitespace at line 3 and col 4
Found number = 4 at line 3 and col 5
[Line 3, Col 5] Token(INT): 4
Found Semicolon at line 3 and col 6
[Line 3, Col 6] Token(SEPARATOR): ;
Found new line at line 3 and col 7
Found character = x at line 4 and col 1
[Line 4, Col 1] Token(IDENTIFIER): x
Found whitespace at line 4 and col 2
[Line 4, Col 3] Token(OPERATOR): *=
Found whitespace at line 4 and col 5
Found number = 2 at line 4 and col 6
[Line 4, Col 6] Token(INT): 2
[Line 4, Col 7] Token(OPERATOR): +
Found character = a at line 4 and col 8
[Line 4, Col 8] Token(IDENTIFIER): a
Found Semicolon at line 4 and col 9
[Line 4, Col 9] Token(SEPARATOR): ;
Found whitespace at line 4 and col 10
Found whitespace at line 4 and col 11
Found whitespace at line 4 and col 12
Found new line at line 4 and col 13
Found character = x at line 5 and col 1
[Line 5, Col 1] Token(IDENTIFIER): x
Found whitespace at line 5 and col 2
[Line 5, Col 3] Token(OPERATOR): +=
Found whitespace at line 5 and col 5
Found character = a at line 5 and col 6
[Line 5, Col 6] Token(IDENTIFIER): a
Found whitespace at line 5 and col 7
[Line 5, Col 8] Token(OPERATOR): +
Found whitespace at line 5 and col 9
Found character = a at line 5 and col 10
[Line 5, Col 10] Token(IDENTIFIER): a
[Line 5, Col 11] Token(OPERATOR): *
Found number = 2 at line 5 and col 12
[Line 5, Col 12] Token(INT): 2
Found Semicolon at line 5 and col 13
[Line 5, Col 13] Token(SEPARATOR): ;
Found new line at line 5 and col 14
Found keyword 'exit' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = x at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): x
Found CLOSED_PARENTHESIS ) at line 6 and col 7
[Line 6, Col 7] Token(SEPARATOR): )
Found Semicolon at line 6 and col 8
[Line 6, Col 8] Token(SEPARATOR): ;
Found new line at line 6 and col 9
Found character = a at line 7 and col 1
[Line 7, Col 1] Token(IDENTIFIER): a
Found whitespace at line 7 and col 2
[Line 7, Col 3] Token(OPERATOR): =
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
[Line 7, Col 5] Token(IDENTIFIER): a
[Line 7, Col 6] Token(OPERATOR): +
Found number = 1 at line 7 and col 7
[Line 7, Col 7] Token(INT): 1
Found Semicolon at line 7 and col 8
[Line 7, Col 8] Token(SEPARATOR): ;
Found new line at line 7 and col 9
Found character = x at line 8 and col 1
[Line 8, Col 1] Token(IDENTIFIER): x
Found whitespace at line 8 and col 2
[Line 8, Col 3] Token(OPERATOR): =
Found whitespace at line 8 and col 4
Found character = a at line 8 and col 5
[Line 8, Col 5] Token(IDENTIFIER): a
[Line 8, Col 6] Token(OPERATOR): +
Found character = a at line 8 and col 7
[Line 8, Col 7] Token(IDENTIFIER): a
[Line 8, Col 8] Token(OPERATOR): *
Found number = 5 at line 8 and col 9
[Line 8, Col 9] Token(INT): 5
Found Semicolon at line 8 and col 10
[Line 8, Col 10] Token(SEPARATOR): ;
Found new line at line 8 and col 11
Found keyword 'int' at line 9 and col 1
[Line 9, Col 1] Token(KEYWORD): int
Found whitespace at line 9 and col 4
Found character = y at line 9 and col 5
[Line 9, Col 5] Token(IDENTIFIER): y
Found whitespace at line 9 and col 6
[Line 9, Col 7] Token(OPERATOR): =
Found whitespace at line 9 and col 8
Found character = x at line 9 and col 9
[Line 9, Col 9] Token(IDENTIFIER): x
Found whitespace at line 9 and col 10
[Line 9, Col 11] Token(OPERATOR): +
Found whitespace at line 9 and col 12
Found number = 2 at line 9 and col 13
[Line 9, Col 13] Token(INT): 2
Found whitespace at line 9 and col 14
[Line 9, Col 15] Token(OPERATOR): *
Found whitespace at line 9 and col 16
Found number = 3 at line 9 and col 17
[Line 9, Col 17] Token(INT): 3
[Line 9, Col 18] Token(OPERATOR): *
Found character = x at line 9 and col 19
[Line 9, Col 19] Token(IDENTIFIER): x
Found Semicolon at line 9 and col 20
[Line 9, Col 20] Token(SEPARATOR): ;
Found new line at line 9 and col 21
Found character = y at line 10 and col 1
[Line 10, Col 1] Token(IDENTIFIER): y
Found whitespace at line 10 and col 2
[Line 10, Col 3] Token(OPERATOR): =
Found whitespace at line 10 and col 4
Found character = y at line 10 and col 5
[Line 10, Col 5] Token(IDENTIFIER): y
[Line 10, Col 6] Token(OPERATOR): +
Found character = a at line 10 and col 7
[Line 10, Col 7] Token(IDENTIFIER): a
Found Semicolon at line 10 and col 8
[Line 10, Col 8] Token(SEPARATOR): ;
Found new line at line 10 and col 9
Found character = y at line 11 and col 1
[Line 11, Col 1] Token(IDENTIFIER): y
Found whitespace at line 11 and col 2
[Line 11, Col 3] Token(OPERATOR): =
Found whitespace at line 11 and col 4
Found character = y at line 11 and col 5
[Line 11, Col 5] Token(IDENTIFIER): y
[Line 11, Col 6] Token(OPERATOR): *
Found character = a at line 11 and col 7
[Line 11, Col 7] Token(IDENTIFIER): a
Found Semicolon at line 11 and col 8
[Line 11, Col 8] Token(SEPARATOR): ;
Found new line at line 11 and col 9
Found keyword 'exit' at line 12 and col 1
[Line 12, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 12 and col 5
[Line 12, Col 5] Token(SEPARATOR): (
Found character = y at line 12 and col 6
[Line 12, Col 6] Token(IDENTIFIER): y
Found CLOSED_PARENTHESIS ) at line 12 and col 7
[Line 12, Col 7] Token(SEPARATOR): )
Found Semicolon at line 12 and col 8
[Line 12, Col 8] Token(SEPARATOR): ;
Found new line at line 12 and col 9
Found keyword 'exit' at line 13 and col 1
[Line 13, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 13 and col 5
[Line 13, Col 5] Token(SEPARATOR): (
Found character = x at line 13 and col 6
[Line 13, Col 6] Token(IDENTIFIER): x
Found CLOSED_PARENTHESIS ) at line 13 and col 7
[Line 13, Col 7] Token(SEPARATOR): )
Found Semicolon at line 13 and col 8
[Line 13, Col 8] Token(SEPARATOR): ;
Found new line at line 13 and col 9
Found keyword 'exit' at line 14 and col 1
[Line 14, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 14 and col 5
[Line 14, Col 5] Token(SEPARATOR): (
Found character = a at line 14 and col 6
[Line 14, Col 6] Token(IDENTIFIER): a
[Line 14, Col 7] Token(OPERATOR): +
Found number = 2 at line 14 and col 8
[Line 14, Col 8] Token(INT): 2
[Line 14, Col 9] Token(OPERATOR): *
Found number = 3 at line 14 and col 10
[Line 14, Col 10] Token(INT): 3
[Line 14, Col 11] Token(OPERATOR): -
Found character = a at line 14 and col 12
[Line 14, Col 12] Token(IDENTIFIER): a
[Line 14, Col 13] Token(OPERATOR): /
Found number = 4 at line 14 and col 14
[Line 14, Col 14] Token(INT): 4
Found CLOSED_PARENTHESIS ) at line 14 and col 15
[Line 14, Col 15] Token(SEPARATOR): )
Found Semicolon at line 14 and col 16
[Line 14, Col 16] Token(SEPARATOR): ;
Found new line at line 14 and col 17
Found keyword 'exit' at line 15 and col 1
[Line 15, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 15 and col 5
[Line 15, Col 5] Token(SEPARATOR): (
Found number = 123456789 at line 15 and col 6
[Line 15, Col 6] Token(INT): 123456789
Found CLOSED_PARENTHESIS ) at line 15 and col 15
[Line 15, Col 15] Token(SEPARATOR): )
Found Semicolon at line 15 and col 16
[Line 15, Col 16] Token(SEPARATOR): ;
Found new line at line 15 and col 17
Found keyword 'exit' at line 16 and col 1
[Line 16, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 16 and col 5
[Line 16, Col 5] Token(SEPARATOR): (
Found number = 16 at line 16 and col 6
[Line 16, Col 6] Token(INT): 16
Found CLOSED_PARENTHESIS ) at line 16 and col 10
[Line 16, Col 10] Token(SEPARATOR): )
Found Semicolon at line 16 and col 11
[Line 16, Col 11] Token(SEPARATOR): ;
Found new line at line 16 and col 12
Found keyword 'exit' at line 17 and col 1
[Line 17, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 17 and col 5
[Line 17, Col 5] Token(SEPARATOR): (
Found number = 4 at line 17 and col 6
[Line 17, Col 6] Token(INT): 4
Found CLOSED_PARENTHESIS ) at line 17 and col 11
[Line 17, Col 11] Token(SEPARATOR): )
Found Semicolon at line 17 and col 12
[Line 17, Col 12] Token(SEPARATOR): ;
Found new line at line 17 and col 13
Found keyword 'exit' at line 18 and col 1
[Line 18, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 18 and col 5
[Line 18, Col 5] Token(SEPARATOR): (
Found number = 64 at line 18 and col 6
[Line 18, Col 6] Token(INT): 64
Found CLOSED_PARENTHESIS ) at line 18 and col 10
[Line 18, Col 10] Token(SEPARATOR): )
Found Semicolon at line 18 and col 11
[Line 18, Col 11] Token(SEPARATOR): ;
Found new line at line 18 and col 12
Found keyword 'exit' at line 19 and col 1
[Line 19, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 19 and col 5
[Line 19, Col 5] Token(SEPARATOR): (
Found number = 100 at line 19 and col 6
[Line 19, Col 6] Token(INT): 100
Found CLOSED_PARENTHESIS ) at line 19 and col 9
[Line 19, Col 9] Token(SEPARATOR): )
Found Semicolon at line 19 and col 10
[Line 19, Col 10] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): x
[Line 1, Col 6] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): a
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 11
[Line 2, Col 11] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): =
[Line 3, Col 5] Token(INT): 4
[Line 3, Col 6] Token(SEPARATOR): ;
[Line 4, Col 1] Token(IDENTIFIER): x
[Line 4, Col 3] Token(OPERATOR): *=
[Line 4, Col 6] Token(INT): 2
[Line 4, Col 7] Token(OPERATOR): +
[Line 4, Col 8] Token(IDENTIFIER): a
[Line 4, Col 9] Token(SEPARATOR): ;
[Line 5, Col 1] Token(IDENTIFIER): x
[Line 5, Col 3] Token(OPERATOR): +=
[Line 5, Col 6] Token(IDENTIFIER): a
[Line 5, Col 8] Token(OPERATOR): +
[Line 5, Col 10] Token(IDENTIFIER): a
[Line 5, Col 11] Token(OPERATOR): *
[Line 5, Col 12] Token(INT): 2
[Line 5, Col 13] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): exit
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): x
[Line 6, Col 7] Token(SEPARATOR): )
[Line 6, Col 8] Token(SEPARATOR): ;
[Line 7, Col 1] Token(IDENTIFIER): a
[Line 7, Col 3] Token(OPERATOR): =
[Line 7, Col 5] Token(IDENTIFIER): a
[Line 7, Col 6] Token(OPERATOR): +
[Line 7, Col 7] Token(INT): 1
[Line 7, Col 8] Token(SEPARATOR): ;
[Line 8, Col 1] Token(IDENTIFIER): x
[Line 8, Col 3] Token(OPERATOR): =
[Line 8, Col 5] Token(IDENTIFIER): a
[Line 8, Col 6] Token(OPERATOR): +
[Line 8, Col 7] Token(IDENTIFIER): a
[Line 8, Col 8] Token(OPERATOR): *
[Line 8, Col 9] Token(INT): 5
[Line 8, Col 10] Token(SEPARATOR): ;
[Line 9, Col 1] Token(KEYWORD): int
[Line 9, Col 5] Token(IDENTIFIER): y
[Line 9, Col 7] Token(OPERATOR): =
[Line 9, Col 9] Token(IDENTIFIER): x
[Line 9, Col 11] Token(OPERATOR): +
[Line 9, Col 13] Token(INT): 2
[Line 9, Col 15] Token(OPERATOR): *
[Line 9, Col 17] Token(INT): 3
[Line 9, Col 18] Token(OPERATOR): *
[Line 9, Col 19] Token(IDENTIFIER): x
[Line 9, Col 20] Token(SEPARATOR): ;
[Line 10, Col 1] Token(IDENTIFIER): y
[Line 10, Col 3] Token(OPERATOR): =
[Line 10, Col 5] Token(IDENTIFIER): y
[Line 10, Col 6] Token(OPERATOR): +
[Line 10, Col 7] Token(IDENTIFIER): a
[Line 10, Col 8] Token(SEPARATOR): ;
[Line 11, Col 1] Token(IDENTIFIER): y
[Line 11, Col 3] Token(OPERATOR): =
[Line 11, Col 5] Token(IDENTIFIER): y
[Line 11, Col 6] Token(OPERATOR): *
[Line 11, Col 7] Token(IDENTIFIER): a
[Line 11, Col 8] Token(SEPARATOR): ;
[Line 12, Col 1] Token(KEYWORD): exit
[Line 12, Col 5] Token(SEPARATOR): (
[Line 12, Col 6] Token(IDENTIFIER): y
[Line 12, Col 7] Token(SEPARATOR): )
[Line 12, Col 8] Token(SEPARATOR): ;
[Line 13, Col 1] Token(KEYWORD): exit
[Line 13, Col 5] Token(SEPARATOR): (
[Line 13, Col 6] Token(IDENTIFIER): x
[Line 13, Col 7] Token(SEPARATOR): )
[Line 13, Col 8] Token(SEPARATOR): ;
[Line 14, Col 1] Token(KEYWORD): exit
[Line 14, Col 5] Token(SEPARATOR): (
[Line 14, Col 6] Token(IDENTIFIER): a
[Line 14, Col 7] Token(OPERATOR): +
[Line 14, Col 8] Token(INT): 2
[Line 14, Col 9] Token(OPERATOR): *
[Line 14, Col 10] Token(INT): 3
[Line 14, Col 11] Token(OPERATOR): -
[Line 14, Col 12] Token(IDENTIFIER): a
[Line 14, Col 13] Token(OPERATOR): /
[Line 14, Col 14] Token(INT): 4
[Line 14, Col 15] Token(SEPARATOR): )
[Line 14, Col 16] Token(SEPARATOR): ;
[Line 15, Col 1] Token(KEYWORD): exit
[Line 15, Col 5] Token(SEPARATOR): (
[Line 15, Col 6] Token(INT): 123456789
[Line 15, Col 15] Token(SEPARATOR): )
[Line 15, Col 16] Token(SEPARATOR): ;
[Line 16, Col 1] Token(KEYWORD): exit
[Line 16, Col 5] Token(SEPARATOR): (
[Line 16, Col 6] Token(INT): 16
[Line 16, Col 10] Token(SEPARATOR): )
[Line 16, Col 11] Token(SEPARATOR): ;
[Line 17, Col 1] Token(KEYWORD): exit
[Line 17, Col 5] Token(SEPARATOR): (
[Line 17, Col 6] Token(INT): 4
[Line 17, Col 11] Token(SEPARATOR): )
[Line 17, Col 12] Token(SEPARATOR): ;
[Line 18, Col 1] Token(KEYWORD): exit
[Line 18, Col 5] Token(SEPARATOR): (
[Line 18, Col 6] Token(INT): 64
[Line 18, Col 10] Token(SEPARATOR): )
[Line 18, Col 11] Token(SEPARATOR): ;
[Line 19, Col 1] Token(KEYWORD): exit
[Line 19, Col 5] Token(SEPARATOR): (
[Line 19, Col 6] Token(INT): 100
[Line 19, Col 9] Token(SEPARATOR): )
[Line 19, Col 10] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x4a97eb0, current now = 0x4a97eb0
DEBUG LINK: linked stmt=0x4a98030, current now = 0x4a98030
DEBUG LINK: linked stmt=0x4a98220, current now = 0x4a98220
DEBUG LINK: linked stmt=0x4a98730, current now = 0x4a98730
DEBUG LINK: linked stmt=0x4a98ea0, current now = 0x4a98ea0
DEBUG LINK: linked stmt=0x4a98f60, current now = 0x4a98f60
DEBUG LINK: linked stmt=0x4a994e0, current now = 0x4a994e0
DEBUG LINK: linked stmt=0x4a99b90, current now = 0x4a99b90
DEBUG LINK: linked stmt=0x4a9a370, current now = 0x4a9a370
DEBUG LINK: linked stmt=0x4a9a880, current now = 0x4a9a880
DEBUG LINK: linked stmt=0x4a9ad90, current now = 0x4a9ad90
DEBUG LINK: linked stmt=0x4a9ae50, current now = 0x4a9ae50
DEBUG LINK: linked stmt=0x4a9b040, current now = 0x4a9b040
DEBUG LINK: linked stmt=0x4a9b230, current now = 0x4a9b230
DEBUG LINK: linked stmt=0x4a9bb60, current now = 0x4a9bb60
DEBUG LINK: linked stmt=0x4a9bc90, current now = 0x4a9bc90
DEBUG LINK: linked stmt=0x4a9bdc0, current now = 0x4a9bdc0
DEBUG LINK: linked stmt=0x4a9bef0, current now = 0x4a9bef0
DEBUG LINK: linked stmt=0x4a9c020, current now = 0x4a9c020

--- Syntax Tree ---
PROGRAM
  VAR_DECL: x
  VAR_DECL: a
    LITERAL_INT: 11
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: x
  EXIT_CALL
    LITERAL_INT: 85
  ASSIGNMENT: =
    IDENTIFIER: a
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 504
  ASSIGNMENT: =
    IDENTIFIER: y
  ASSIGNMENT: =
    IDENTIFIER: y
  EXIT_CALL
    LITERAL_INT: 6192
  EXIT_CALL
    LITERAL_INT: 72
  EXIT_CALL
    LITERAL_INT: 15
  EXIT_CALL
    LITERAL_INT: 123456789
  EXIT_CALL
    LITERAL_INT: 16
  EXIT_CALL
    LITERAL_INT: 4
  EXIT_CALL
    LITERAL_INT: 64
  EXIT_CALL
    LITERAL_INT: 100
Compilation successful. Output: generated

Exiting
==2226==
==2226== HEAP SUMMARY:
==2226==     in use at exit: 364 bytes in 11 blocks
==2226==   total heap usage: 284 allocs, 273 frees, 12,852 bytes allocated
==2226==
==2226== 40 bytes in 1 blocks are definitely lost in loss record 2 of 5
==2226==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2226==    by 0x10B18B: createNode (parser.c:170)
==2226==    by 0x10B389: createNodeFromToken (parser.c:251)
==2226==    by 0x10BA5B: parse_primary (parser.c:408)
==2226==    by 0x10BC73: parse_expression (parser.c:456)
==2226==    by 0x10C7A4: parse_assignment_statement (parser.c:657)
==2226==    by 0x10DAB7: parse_statement (parser.c:1013)
==2226==    by 0x10DE3F: parse (parser.c:1099)
==2226==    by 0x1095A6: main (main.c:43)
==2226==
==2226== 160 bytes in 4 blocks are definitely lost in loss record 4 of 5
==2226==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2226==    by 0x10B18B: createNode (parser.c:170)
==2226==    by 0x10BD8E: parse_expression (parser.c:482)
==2226==    by 0x10C7A4: parse_assignment_statement (parser.c:657)
==2226==    by 0x10DAB7: parse_statement (parser.c:1013)
==2226==    by 0x10DE3F: parse (parser.c:1099)
==2226==    by 0x1095A6: main (main.c:43)
==2226==
==2226== 164 (80 direct, 84 indirect) bytes in 2 blocks are definitely lost in loss record 5 of 5
==2226==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2226==    by 0x10B18B: createNode (parser.c:170)
==2226==    by 0x10C8F1: parse_assignment_statement (parser.c:678)
==2226==    by 0x10DAB7: parse_statement (parser.c:1013)
==2226==    by 0x10DE3F: parse (parser.c:1099)
==2226==    by 0x1095A6: main (main.c:43)
==2226==
==2226== LEAK SUMMARY:
==2226==    definitely lost: 280 bytes in 7 blocks
==2226==    indirectly lost: 84 bytes in 4 blocks
==2226==      possibly lost: 0 bytes in 0 blocks
==2226==    still reachable: 0 bytes in 0 blocks
==2226==         suppressed: 0 bytes in 0 blocks
==2226==
==2226== For lists of detected and suppressed errors, rerun with: -s
==2226== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ valgrind --leak-check=full ./build/main test5.tc
==2232== Memcheck, a memory error detector
==2232== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2232== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2232== Command: ./build/main test5.tc
==2232==
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = x at line 1 and col 5
[Line 1, Col 5] Token(IDENTIFIER): x
Found Semicolon at line 1 and col 6
[Line 1, Col 6] Token(SEPARATOR): ;
Found new line at line 1 and col 7
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = a at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): a
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 11 at line 2 and col 9
[Line 2, Col 9] Token(INT): 11
Found Semicolon at line 2 and col 11
[Line 2, Col 11] Token(SEPARATOR): ;
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): =
Found whitespace at line 3 and col 4
Found number = 4 at line 3 and col 5
[Line 3, Col 5] Token(INT): 4
Found Semicolon at line 3 and col 6
[Line 3, Col 6] Token(SEPARATOR): ;
Found new line at line 3 and col 7
Found character = x at line 4 and col 1
[Line 4, Col 1] Token(IDENTIFIER): x
Found whitespace at line 4 and col 2
[Line 4, Col 3] Token(OPERATOR): *=
Found whitespace at line 4 and col 5
Found number = 2 at line 4 and col 6
[Line 4, Col 6] Token(INT): 2
[Line 4, Col 7] Token(OPERATOR): +
Found character = a at line 4 and col 8
[Line 4, Col 8] Token(IDENTIFIER): a
Found Semicolon at line 4 and col 9
[Line 4, Col 9] Token(SEPARATOR): ;
Found whitespace at line 4 and col 10
Found whitespace at line 4 and col 11
Found whitespace at line 4 and col 12
Found new line at line 4 and col 13
Found character = x at line 5 and col 1
[Line 5, Col 1] Token(IDENTIFIER): x
Found whitespace at line 5 and col 2
[Line 5, Col 3] Token(OPERATOR): +=
Found whitespace at line 5 and col 5
Found character = a at line 5 and col 6
[Line 5, Col 6] Token(IDENTIFIER): a
Found whitespace at line 5 and col 7
[Line 5, Col 8] Token(OPERATOR): +
Found whitespace at line 5 and col 9
Found character = a at line 5 and col 10
[Line 5, Col 10] Token(IDENTIFIER): a
[Line 5, Col 11] Token(OPERATOR): *
Found number = 2 at line 5 and col 12
[Line 5, Col 12] Token(INT): 2
Found Semicolon at line 5 and col 13
[Line 5, Col 13] Token(SEPARATOR): ;
Found new line at line 5 and col 14
Found keyword 'exit' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = x at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): x
Found CLOSED_PARENTHESIS ) at line 6 and col 7
[Line 6, Col 7] Token(SEPARATOR): )
Found Semicolon at line 6 and col 8
[Line 6, Col 8] Token(SEPARATOR): ;
Found new line at line 6 and col 9
Found character = a at line 7 and col 1
[Line 7, Col 1] Token(IDENTIFIER): a
Found whitespace at line 7 and col 2
[Line 7, Col 3] Token(OPERATOR): =
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
[Line 7, Col 5] Token(IDENTIFIER): a
[Line 7, Col 6] Token(OPERATOR): +
Found number = 1 at line 7 and col 7
[Line 7, Col 7] Token(INT): 1
Found Semicolon at line 7 and col 8
[Line 7, Col 8] Token(SEPARATOR): ;
Found new line at line 7 and col 9
Found character = x at line 8 and col 1
[Line 8, Col 1] Token(IDENTIFIER): x
Found whitespace at line 8 and col 2
[Line 8, Col 3] Token(OPERATOR): =
Found whitespace at line 8 and col 4
Found character = a at line 8 and col 5
[Line 8, Col 5] Token(IDENTIFIER): a
[Line 8, Col 6] Token(OPERATOR): +
Found character = a at line 8 and col 7
[Line 8, Col 7] Token(IDENTIFIER): a
[Line 8, Col 8] Token(OPERATOR): *
Found number = 5 at line 8 and col 9
[Line 8, Col 9] Token(INT): 5
Found Semicolon at line 8 and col 10
[Line 8, Col 10] Token(SEPARATOR): ;
Found new line at line 8 and col 11
Found keyword 'int' at line 9 and col 1
[Line 9, Col 1] Token(KEYWORD): int
Found whitespace at line 9 and col 4
Found character = y at line 9 and col 5
[Line 9, Col 5] Token(IDENTIFIER): y
Found whitespace at line 9 and col 6
[Line 9, Col 7] Token(OPERATOR): =
Found whitespace at line 9 and col 8
Found character = x at line 9 and col 9
[Line 9, Col 9] Token(IDENTIFIER): x
Found whitespace at line 9 and col 10
[Line 9, Col 11] Token(OPERATOR): +
Found whitespace at line 9 and col 12
Found number = 2 at line 9 and col 13
[Line 9, Col 13] Token(INT): 2
Found whitespace at line 9 and col 14
[Line 9, Col 15] Token(OPERATOR): *
Found whitespace at line 9 and col 16
Found number = 3 at line 9 and col 17
[Line 9, Col 17] Token(INT): 3
[Line 9, Col 18] Token(OPERATOR): *
Found character = x at line 9 and col 19
[Line 9, Col 19] Token(IDENTIFIER): x
Found Semicolon at line 9 and col 20
[Line 9, Col 20] Token(SEPARATOR): ;
Found new line at line 9 and col 21
Found character = y at line 10 and col 1
[Line 10, Col 1] Token(IDENTIFIER): y
Found whitespace at line 10 and col 2
[Line 10, Col 3] Token(OPERATOR): =
Found whitespace at line 10 and col 4
Found character = y at line 10 and col 5
[Line 10, Col 5] Token(IDENTIFIER): y
[Line 10, Col 6] Token(OPERATOR): +
Found character = a at line 10 and col 7
[Line 10, Col 7] Token(IDENTIFIER): a
Found Semicolon at line 10 and col 8
[Line 10, Col 8] Token(SEPARATOR): ;
Found new line at line 10 and col 9
Found character = y at line 11 and col 1
[Line 11, Col 1] Token(IDENTIFIER): y
Found whitespace at line 11 and col 2
[Line 11, Col 3] Token(OPERATOR): =
Found whitespace at line 11 and col 4
Found character = y at line 11 and col 5
[Line 11, Col 5] Token(IDENTIFIER): y
[Line 11, Col 6] Token(OPERATOR): *
Found character = a at line 11 and col 7
[Line 11, Col 7] Token(IDENTIFIER): a
Found Semicolon at line 11 and col 8
[Line 11, Col 8] Token(SEPARATOR): ;
Found new line at line 11 and col 9
Found keyword 'exit' at line 12 and col 1
[Line 12, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 12 and col 5
[Line 12, Col 5] Token(SEPARATOR): (
Found character = y at line 12 and col 6
[Line 12, Col 6] Token(IDENTIFIER): y
Found CLOSED_PARENTHESIS ) at line 12 and col 7
[Line 12, Col 7] Token(SEPARATOR): )
Found Semicolon at line 12 and col 8
[Line 12, Col 8] Token(SEPARATOR): ;
Found new line at line 12 and col 9
Found keyword 'exit' at line 13 and col 1
[Line 13, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 13 and col 5
[Line 13, Col 5] Token(SEPARATOR): (
Found character = x at line 13 and col 6
[Line 13, Col 6] Token(IDENTIFIER): x
Found CLOSED_PARENTHESIS ) at line 13 and col 7
[Line 13, Col 7] Token(SEPARATOR): )
Found Semicolon at line 13 and col 8
[Line 13, Col 8] Token(SEPARATOR): ;
Found new line at line 13 and col 9
Found keyword 'exit' at line 14 and col 1
[Line 14, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 14 and col 5
[Line 14, Col 5] Token(SEPARATOR): (
Found character = a at line 14 and col 6
[Line 14, Col 6] Token(IDENTIFIER): a
[Line 14, Col 7] Token(OPERATOR): +
Found number = 2 at line 14 and col 8
[Line 14, Col 8] Token(INT): 2
[Line 14, Col 9] Token(OPERATOR): *
Found number = 3 at line 14 and col 10
[Line 14, Col 10] Token(INT): 3
[Line 14, Col 11] Token(OPERATOR): -
Found character = a at line 14 and col 12
[Line 14, Col 12] Token(IDENTIFIER): a
[Line 14, Col 13] Token(OPERATOR): /
Found number = 4 at line 14 and col 14
[Line 14, Col 14] Token(INT): 4
Found CLOSED_PARENTHESIS ) at line 14 and col 15
[Line 14, Col 15] Token(SEPARATOR): )
Found Semicolon at line 14 and col 16
[Line 14, Col 16] Token(SEPARATOR): ;
Found new line at line 14 and col 17
Found keyword 'exit' at line 15 and col 1
[Line 15, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 15 and col 5
[Line 15, Col 5] Token(SEPARATOR): (
Found number = 123456789 at line 15 and col 6
[Line 15, Col 6] Token(INT): 123456789
Found CLOSED_PARENTHESIS ) at line 15 and col 15
[Line 15, Col 15] Token(SEPARATOR): )
Found Semicolon at line 15 and col 16
[Line 15, Col 16] Token(SEPARATOR): ;
Found new line at line 15 and col 17
Found keyword 'exit' at line 16 and col 1
[Line 16, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 16 and col 5
[Line 16, Col 5] Token(SEPARATOR): (
Found number = 16 at line 16 and col 6
[Line 16, Col 6] Token(INT): 16
Found CLOSED_PARENTHESIS ) at line 16 and col 10
[Line 16, Col 10] Token(SEPARATOR): )
Found Semicolon at line 16 and col 11
[Line 16, Col 11] Token(SEPARATOR): ;
Found new line at line 16 and col 12
Found keyword 'exit' at line 17 and col 1
[Line 17, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 17 and col 5
[Line 17, Col 5] Token(SEPARATOR): (
Found number = 4 at line 17 and col 6
[Line 17, Col 6] Token(INT): 4
Found CLOSED_PARENTHESIS ) at line 17 and col 11
[Line 17, Col 11] Token(SEPARATOR): )
Found Semicolon at line 17 and col 12
[Line 17, Col 12] Token(SEPARATOR): ;
Found new line at line 17 and col 13
Found keyword 'exit' at line 18 and col 1
[Line 18, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 18 and col 5
[Line 18, Col 5] Token(SEPARATOR): (
Found number = 64 at line 18 and col 6
[Line 18, Col 6] Token(INT): 64
Found CLOSED_PARENTHESIS ) at line 18 and col 10
[Line 18, Col 10] Token(SEPARATOR): )
Found Semicolon at line 18 and col 11
[Line 18, Col 11] Token(SEPARATOR): ;
Found new line at line 18 and col 12
Found keyword 'exit' at line 19 and col 1
[Line 19, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 19 and col 5
[Line 19, Col 5] Token(SEPARATOR): (
Found number = 100 at line 19 and col 6
[Line 19, Col 6] Token(INT): 100
Found CLOSED_PARENTHESIS ) at line 19 and col 9
[Line 19, Col 9] Token(SEPARATOR): )
Found Semicolon at line 19 and col 10
[Line 19, Col 10] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): x
[Line 1, Col 6] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): a
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 11
[Line 2, Col 11] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): =
[Line 3, Col 5] Token(INT): 4
[Line 3, Col 6] Token(SEPARATOR): ;
[Line 4, Col 1] Token(IDENTIFIER): x
[Line 4, Col 3] Token(OPERATOR): *=
[Line 4, Col 6] Token(INT): 2
[Line 4, Col 7] Token(OPERATOR): +
[Line 4, Col 8] Token(IDENTIFIER): a
[Line 4, Col 9] Token(SEPARATOR): ;
[Line 5, Col 1] Token(IDENTIFIER): x
[Line 5, Col 3] Token(OPERATOR): +=
[Line 5, Col 6] Token(IDENTIFIER): a
[Line 5, Col 8] Token(OPERATOR): +
[Line 5, Col 10] Token(IDENTIFIER): a
[Line 5, Col 11] Token(OPERATOR): *
[Line 5, Col 12] Token(INT): 2
[Line 5, Col 13] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): exit
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): x
[Line 6, Col 7] Token(SEPARATOR): )
[Line 6, Col 8] Token(SEPARATOR): ;
[Line 7, Col 1] Token(IDENTIFIER): a
[Line 7, Col 3] Token(OPERATOR): =
[Line 7, Col 5] Token(IDENTIFIER): a
[Line 7, Col 6] Token(OPERATOR): +
[Line 7, Col 7] Token(INT): 1
[Line 7, Col 8] Token(SEPARATOR): ;
[Line 8, Col 1] Token(IDENTIFIER): x
[Line 8, Col 3] Token(OPERATOR): =
[Line 8, Col 5] Token(IDENTIFIER): a
[Line 8, Col 6] Token(OPERATOR): +
[Line 8, Col 7] Token(IDENTIFIER): a
[Line 8, Col 8] Token(OPERATOR): *
[Line 8, Col 9] Token(INT): 5
[Line 8, Col 10] Token(SEPARATOR): ;
[Line 9, Col 1] Token(KEYWORD): int
[Line 9, Col 5] Token(IDENTIFIER): y
[Line 9, Col 7] Token(OPERATOR): =
[Line 9, Col 9] Token(IDENTIFIER): x
[Line 9, Col 11] Token(OPERATOR): +
[Line 9, Col 13] Token(INT): 2
[Line 9, Col 15] Token(OPERATOR): *
[Line 9, Col 17] Token(INT): 3
[Line 9, Col 18] Token(OPERATOR): *
[Line 9, Col 19] Token(IDENTIFIER): x
[Line 9, Col 20] Token(SEPARATOR): ;
[Line 10, Col 1] Token(IDENTIFIER): y
[Line 10, Col 3] Token(OPERATOR): =
[Line 10, Col 5] Token(IDENTIFIER): y
[Line 10, Col 6] Token(OPERATOR): +
[Line 10, Col 7] Token(IDENTIFIER): a
[Line 10, Col 8] Token(SEPARATOR): ;
[Line 11, Col 1] Token(IDENTIFIER): y
[Line 11, Col 3] Token(OPERATOR): =
[Line 11, Col 5] Token(IDENTIFIER): y
[Line 11, Col 6] Token(OPERATOR): *
[Line 11, Col 7] Token(IDENTIFIER): a
[Line 11, Col 8] Token(SEPARATOR): ;
[Line 12, Col 1] Token(KEYWORD): exit
[Line 12, Col 5] Token(SEPARATOR): (
[Line 12, Col 6] Token(IDENTIFIER): y
[Line 12, Col 7] Token(SEPARATOR): )
[Line 12, Col 8] Token(SEPARATOR): ;
[Line 13, Col 1] Token(KEYWORD): exit
[Line 13, Col 5] Token(SEPARATOR): (
[Line 13, Col 6] Token(IDENTIFIER): x
[Line 13, Col 7] Token(SEPARATOR): )
[Line 13, Col 8] Token(SEPARATOR): ;
[Line 14, Col 1] Token(KEYWORD): exit
[Line 14, Col 5] Token(SEPARATOR): (
[Line 14, Col 6] Token(IDENTIFIER): a
[Line 14, Col 7] Token(OPERATOR): +
[Line 14, Col 8] Token(INT): 2
[Line 14, Col 9] Token(OPERATOR): *
[Line 14, Col 10] Token(INT): 3
[Line 14, Col 11] Token(OPERATOR): -
[Line 14, Col 12] Token(IDENTIFIER): a
[Line 14, Col 13] Token(OPERATOR): /
[Line 14, Col 14] Token(INT): 4
[Line 14, Col 15] Token(SEPARATOR): )
[Line 14, Col 16] Token(SEPARATOR): ;
[Line 15, Col 1] Token(KEYWORD): exit
[Line 15, Col 5] Token(SEPARATOR): (
[Line 15, Col 6] Token(INT): 123456789
[Line 15, Col 15] Token(SEPARATOR): )
[Line 15, Col 16] Token(SEPARATOR): ;
[Line 16, Col 1] Token(KEYWORD): exit
[Line 16, Col 5] Token(SEPARATOR): (
[Line 16, Col 6] Token(INT): 16
[Line 16, Col 10] Token(SEPARATOR): )
[Line 16, Col 11] Token(SEPARATOR): ;
[Line 17, Col 1] Token(KEYWORD): exit
[Line 17, Col 5] Token(SEPARATOR): (
[Line 17, Col 6] Token(INT): 4
[Line 17, Col 11] Token(SEPARATOR): )
[Line 17, Col 12] Token(SEPARATOR): ;
[Line 18, Col 1] Token(KEYWORD): exit
[Line 18, Col 5] Token(SEPARATOR): (
[Line 18, Col 6] Token(INT): 64
[Line 18, Col 10] Token(SEPARATOR): )
[Line 18, Col 11] Token(SEPARATOR): ;
[Line 19, Col 1] Token(KEYWORD): exit
[Line 19, Col 5] Token(SEPARATOR): (
[Line 19, Col 6] Token(INT): 100
[Line 19, Col 9] Token(SEPARATOR): )
[Line 19, Col 10] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x4a97eb0, current now = 0x4a97eb0
DEBUG LINK: linked stmt=0x4a98030, current now = 0x4a98030
DEBUG LINK: linked stmt=0x4a98220, current now = 0x4a98220
DEBUG LINK: linked stmt=0x4a98730, current now = 0x4a98730
DEBUG LINK: linked stmt=0x4a98ea0, current now = 0x4a98ea0
DEBUG LINK: linked stmt=0x4a98f60, current now = 0x4a98f60
DEBUG LINK: linked stmt=0x4a994e0, current now = 0x4a994e0
DEBUG LINK: linked stmt=0x4a99b90, current now = 0x4a99b90
DEBUG LINK: linked stmt=0x4a9a370, current now = 0x4a9a370
DEBUG LINK: linked stmt=0x4a9a880, current now = 0x4a9a880
DEBUG LINK: linked stmt=0x4a9ad90, current now = 0x4a9ad90
DEBUG LINK: linked stmt=0x4a9ae50, current now = 0x4a9ae50
DEBUG LINK: linked stmt=0x4a9b040, current now = 0x4a9b040
DEBUG LINK: linked stmt=0x4a9b230, current now = 0x4a9b230
DEBUG LINK: linked stmt=0x4a9bb60, current now = 0x4a9bb60
DEBUG LINK: linked stmt=0x4a9bc90, current now = 0x4a9bc90
DEBUG LINK: linked stmt=0x4a9bdc0, current now = 0x4a9bdc0
DEBUG LINK: linked stmt=0x4a9bef0, current now = 0x4a9bef0
DEBUG LINK: linked stmt=0x4a9c020, current now = 0x4a9c020

--- Syntax Tree ---
PROGRAM
  VAR_DECL: x
  VAR_DECL: a
    LITERAL_INT: 11
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: x
  EXIT_CALL
    LITERAL_INT: 85
  ASSIGNMENT: =
    IDENTIFIER: a
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 504
  ASSIGNMENT: =
    IDENTIFIER: y
  ASSIGNMENT: =
    IDENTIFIER: y
  EXIT_CALL
    LITERAL_INT: 6192
  EXIT_CALL
    LITERAL_INT: 72
  EXIT_CALL
    LITERAL_INT: 15
  EXIT_CALL
    LITERAL_INT: 123456789
  EXIT_CALL
    LITERAL_INT: 16
  EXIT_CALL
    LITERAL_INT: 4
  EXIT_CALL
    LITERAL_INT: 64
  EXIT_CALL
    LITERAL_INT: 100
Compilation successful. Output: generated

Exiting
==2232==
==2232== HEAP SUMMARY:
==2232==     in use at exit: 364 bytes in 11 blocks
==2232==   total heap usage: 284 allocs, 273 frees, 12,852 bytes allocated
==2232==
==2232== 40 bytes in 1 blocks are definitely lost in loss record 2 of 5
==2232==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2232==    by 0x10B18B: createNode (parser.c:170)
==2232==    by 0x10B389: createNodeFromToken (parser.c:251)
==2232==    by 0x10BA5B: parse_primary (parser.c:408)
==2232==    by 0x10BC73: parse_expression (parser.c:456)
==2232==    by 0x10C7A4: parse_assignment_statement (parser.c:657)
==2232==    by 0x10DAB7: parse_statement (parser.c:1013)
==2232==    by 0x10DE3F: parse (parser.c:1099)
==2232==    by 0x1095A6: main (main.c:43)
==2232==
==2232== 160 bytes in 4 blocks are definitely lost in loss record 4 of 5
==2232==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2232==    by 0x10B18B: createNode (parser.c:170)
==2232==    by 0x10BD8E: parse_expression (parser.c:482)
==2232==    by 0x10C7A4: parse_assignment_statement (parser.c:657)
==2232==    by 0x10DAB7: parse_statement (parser.c:1013)
==2232==    by 0x10DE3F: parse (parser.c:1099)
==2232==    by 0x1095A6: main (main.c:43)
==2232==
==2232== 164 (80 direct, 84 indirect) bytes in 2 blocks are definitely lost in loss record 5 of 5
==2232==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2232==    by 0x10B18B: createNode (parser.c:170)
==2232==    by 0x10C8F1: parse_assignment_statement (parser.c:678)
==2232==    by 0x10DAB7: parse_statement (parser.c:1013)
==2232==    by 0x10DE3F: parse (parser.c:1099)
==2232==    by 0x1095A6: main (main.c:43)
==2232==
==2232== LEAK SUMMARY:
==2232==    definitely lost: 280 bytes in 7 blocks
==2232==    indirectly lost: 84 bytes in 4 blocks
==2232==      possibly lost: 0 bytes in 0 blocks
==2232==    still reachable: 0 bytes in 0 blocks
==2232==         suppressed: 0 bytes in 0 blocks
==2232==
==2232== For lists of detected and suppressed errors, rerun with: -s
==2232== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ valgrind --leak-check=full ./build/main test5.tc
==2237== Memcheck, a memory error detector
==2237== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2237== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2237== Command: ./build/main test5.tc
==2237==
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = x at line 1 and col 5
[Line 1, Col 5] Token(IDENTIFIER): x
Found Semicolon at line 1 and col 6
[Line 1, Col 6] Token(SEPARATOR): ;
Found new line at line 1 and col 7
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = a at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): a
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 11 at line 2 and col 9
[Line 2, Col 9] Token(INT): 11
Found Semicolon at line 2 and col 11
[Line 2, Col 11] Token(SEPARATOR): ;
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): =
Found whitespace at line 3 and col 4
Found number = 4 at line 3 and col 5
[Line 3, Col 5] Token(INT): 4
Found Semicolon at line 3 and col 6
[Line 3, Col 6] Token(SEPARATOR): ;
Found new line at line 3 and col 7
Found character = x at line 4 and col 1
[Line 4, Col 1] Token(IDENTIFIER): x
Found whitespace at line 4 and col 2
[Line 4, Col 3] Token(OPERATOR): *=
Found whitespace at line 4 and col 5
Found number = 2 at line 4 and col 6
[Line 4, Col 6] Token(INT): 2
[Line 4, Col 7] Token(OPERATOR): +
Found character = a at line 4 and col 8
[Line 4, Col 8] Token(IDENTIFIER): a
Found Semicolon at line 4 and col 9
[Line 4, Col 9] Token(SEPARATOR): ;
Found whitespace at line 4 and col 10
Found whitespace at line 4 and col 11
Found whitespace at line 4 and col 12
Found new line at line 4 and col 13
Found character = x at line 5 and col 1
[Line 5, Col 1] Token(IDENTIFIER): x
Found whitespace at line 5 and col 2
[Line 5, Col 3] Token(OPERATOR): +=
Found whitespace at line 5 and col 5
Found character = a at line 5 and col 6
[Line 5, Col 6] Token(IDENTIFIER): a
Found whitespace at line 5 and col 7
[Line 5, Col 8] Token(OPERATOR): +
Found whitespace at line 5 and col 9
Found character = a at line 5 and col 10
[Line 5, Col 10] Token(IDENTIFIER): a
[Line 5, Col 11] Token(OPERATOR): *
Found number = 2 at line 5 and col 12
[Line 5, Col 12] Token(INT): 2
Found Semicolon at line 5 and col 13
[Line 5, Col 13] Token(SEPARATOR): ;
Found new line at line 5 and col 14
Found keyword 'exit' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = x at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): x
Found CLOSED_PARENTHESIS ) at line 6 and col 7
[Line 6, Col 7] Token(SEPARATOR): )
Found Semicolon at line 6 and col 8
[Line 6, Col 8] Token(SEPARATOR): ;
Found new line at line 6 and col 9
Found character = a at line 7 and col 1
[Line 7, Col 1] Token(IDENTIFIER): a
Found whitespace at line 7 and col 2
[Line 7, Col 3] Token(OPERATOR): =
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
[Line 7, Col 5] Token(IDENTIFIER): a
[Line 7, Col 6] Token(OPERATOR): +
Found number = 1 at line 7 and col 7
[Line 7, Col 7] Token(INT): 1
Found Semicolon at line 7 and col 8
[Line 7, Col 8] Token(SEPARATOR): ;
Found new line at line 7 and col 9
Found character = x at line 8 and col 1
[Line 8, Col 1] Token(IDENTIFIER): x
Found whitespace at line 8 and col 2
[Line 8, Col 3] Token(OPERATOR): =
Found whitespace at line 8 and col 4
Found character = a at line 8 and col 5
[Line 8, Col 5] Token(IDENTIFIER): a
[Line 8, Col 6] Token(OPERATOR): +
Found character = a at line 8 and col 7
[Line 8, Col 7] Token(IDENTIFIER): a
[Line 8, Col 8] Token(OPERATOR): *
Found number = 5 at line 8 and col 9
[Line 8, Col 9] Token(INT): 5
Found Semicolon at line 8 and col 10
[Line 8, Col 10] Token(SEPARATOR): ;
Found new line at line 8 and col 11
Found keyword 'int' at line 9 and col 1
[Line 9, Col 1] Token(KEYWORD): int
Found whitespace at line 9 and col 4
Found character = y at line 9 and col 5
[Line 9, Col 5] Token(IDENTIFIER): y
Found whitespace at line 9 and col 6
[Line 9, Col 7] Token(OPERATOR): =
Found whitespace at line 9 and col 8
Found character = x at line 9 and col 9
[Line 9, Col 9] Token(IDENTIFIER): x
Found whitespace at line 9 and col 10
[Line 9, Col 11] Token(OPERATOR): +
Found whitespace at line 9 and col 12
Found number = 2 at line 9 and col 13
[Line 9, Col 13] Token(INT): 2
Found whitespace at line 9 and col 14
[Line 9, Col 15] Token(OPERATOR): *
Found whitespace at line 9 and col 16
Found number = 3 at line 9 and col 17
[Line 9, Col 17] Token(INT): 3
[Line 9, Col 18] Token(OPERATOR): *
Found character = x at line 9 and col 19
[Line 9, Col 19] Token(IDENTIFIER): x
Found Semicolon at line 9 and col 20
[Line 9, Col 20] Token(SEPARATOR): ;
Found new line at line 9 and col 21
Found character = y at line 10 and col 1
[Line 10, Col 1] Token(IDENTIFIER): y
Found whitespace at line 10 and col 2
[Line 10, Col 3] Token(OPERATOR): =
Found whitespace at line 10 and col 4
Found character = y at line 10 and col 5
[Line 10, Col 5] Token(IDENTIFIER): y
[Line 10, Col 6] Token(OPERATOR): +
Found character = a at line 10 and col 7
[Line 10, Col 7] Token(IDENTIFIER): a
Found Semicolon at line 10 and col 8
[Line 10, Col 8] Token(SEPARATOR): ;
Found new line at line 10 and col 9
Found character = y at line 11 and col 1
[Line 11, Col 1] Token(IDENTIFIER): y
Found whitespace at line 11 and col 2
[Line 11, Col 3] Token(OPERATOR): =
Found whitespace at line 11 and col 4
Found character = y at line 11 and col 5
[Line 11, Col 5] Token(IDENTIFIER): y
[Line 11, Col 6] Token(OPERATOR): *
Found character = a at line 11 and col 7
[Line 11, Col 7] Token(IDENTIFIER): a
Found Semicolon at line 11 and col 8
[Line 11, Col 8] Token(SEPARATOR): ;
Found new line at line 11 and col 9
Found keyword 'exit' at line 12 and col 1
[Line 12, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 12 and col 5
[Line 12, Col 5] Token(SEPARATOR): (
Found character = y at line 12 and col 6
[Line 12, Col 6] Token(IDENTIFIER): y
Found CLOSED_PARENTHESIS ) at line 12 and col 7
[Line 12, Col 7] Token(SEPARATOR): )
Found Semicolon at line 12 and col 8
[Line 12, Col 8] Token(SEPARATOR): ;
Found new line at line 12 and col 9
Found keyword 'exit' at line 13 and col 1
[Line 13, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 13 and col 5
[Line 13, Col 5] Token(SEPARATOR): (
Found character = x at line 13 and col 6
[Line 13, Col 6] Token(IDENTIFIER): x
Found CLOSED_PARENTHESIS ) at line 13 and col 7
[Line 13, Col 7] Token(SEPARATOR): )
Found Semicolon at line 13 and col 8
[Line 13, Col 8] Token(SEPARATOR): ;
Found new line at line 13 and col 9
Found keyword 'exit' at line 14 and col 1
[Line 14, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 14 and col 5
[Line 14, Col 5] Token(SEPARATOR): (
Found character = a at line 14 and col 6
[Line 14, Col 6] Token(IDENTIFIER): a
[Line 14, Col 7] Token(OPERATOR): +
Found number = 2 at line 14 and col 8
[Line 14, Col 8] Token(INT): 2
[Line 14, Col 9] Token(OPERATOR): *
Found number = 3 at line 14 and col 10
[Line 14, Col 10] Token(INT): 3
[Line 14, Col 11] Token(OPERATOR): -
Found character = a at line 14 and col 12
[Line 14, Col 12] Token(IDENTIFIER): a
[Line 14, Col 13] Token(OPERATOR): /
Found number = 4 at line 14 and col 14
[Line 14, Col 14] Token(INT): 4
Found CLOSED_PARENTHESIS ) at line 14 and col 15
[Line 14, Col 15] Token(SEPARATOR): )
Found Semicolon at line 14 and col 16
[Line 14, Col 16] Token(SEPARATOR): ;
Found new line at line 14 and col 17
Found keyword 'exit' at line 15 and col 1
[Line 15, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 15 and col 5
[Line 15, Col 5] Token(SEPARATOR): (
Found number = 123456789 at line 15 and col 6
[Line 15, Col 6] Token(INT): 123456789
Found CLOSED_PARENTHESIS ) at line 15 and col 15
[Line 15, Col 15] Token(SEPARATOR): )
Found Semicolon at line 15 and col 16
[Line 15, Col 16] Token(SEPARATOR): ;
Found new line at line 15 and col 17
Found keyword 'exit' at line 16 and col 1
[Line 16, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 16 and col 5
[Line 16, Col 5] Token(SEPARATOR): (
Found number = 16 at line 16 and col 6
[Line 16, Col 6] Token(INT): 16
Found CLOSED_PARENTHESIS ) at line 16 and col 10
[Line 16, Col 10] Token(SEPARATOR): )
Found Semicolon at line 16 and col 11
[Line 16, Col 11] Token(SEPARATOR): ;
Found new line at line 16 and col 12
Found keyword 'exit' at line 17 and col 1
[Line 17, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 17 and col 5
[Line 17, Col 5] Token(SEPARATOR): (
Found number = 4 at line 17 and col 6
[Line 17, Col 6] Token(INT): 4
Found CLOSED_PARENTHESIS ) at line 17 and col 11
[Line 17, Col 11] Token(SEPARATOR): )
Found Semicolon at line 17 and col 12
[Line 17, Col 12] Token(SEPARATOR): ;
Found new line at line 17 and col 13
Found keyword 'exit' at line 18 and col 1
[Line 18, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 18 and col 5
[Line 18, Col 5] Token(SEPARATOR): (
Found number = 64 at line 18 and col 6
[Line 18, Col 6] Token(INT): 64
Found CLOSED_PARENTHESIS ) at line 18 and col 10
[Line 18, Col 10] Token(SEPARATOR): )
Found Semicolon at line 18 and col 11
[Line 18, Col 11] Token(SEPARATOR): ;
Found new line at line 18 and col 12
Found keyword 'exit' at line 19 and col 1
[Line 19, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 19 and col 5
[Line 19, Col 5] Token(SEPARATOR): (
Found number = 100 at line 19 and col 6
[Line 19, Col 6] Token(INT): 100
Found CLOSED_PARENTHESIS ) at line 19 and col 9
[Line 19, Col 9] Token(SEPARATOR): )
Found Semicolon at line 19 and col 10
[Line 19, Col 10] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): x
[Line 1, Col 6] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): a
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 11
[Line 2, Col 11] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): =
[Line 3, Col 5] Token(INT): 4
[Line 3, Col 6] Token(SEPARATOR): ;
[Line 4, Col 1] Token(IDENTIFIER): x
[Line 4, Col 3] Token(OPERATOR): *=
[Line 4, Col 6] Token(INT): 2
[Line 4, Col 7] Token(OPERATOR): +
[Line 4, Col 8] Token(IDENTIFIER): a
[Line 4, Col 9] Token(SEPARATOR): ;
[Line 5, Col 1] Token(IDENTIFIER): x
[Line 5, Col 3] Token(OPERATOR): +=
[Line 5, Col 6] Token(IDENTIFIER): a
[Line 5, Col 8] Token(OPERATOR): +
[Line 5, Col 10] Token(IDENTIFIER): a
[Line 5, Col 11] Token(OPERATOR): *
[Line 5, Col 12] Token(INT): 2
[Line 5, Col 13] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): exit
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): x
[Line 6, Col 7] Token(SEPARATOR): )
[Line 6, Col 8] Token(SEPARATOR): ;
[Line 7, Col 1] Token(IDENTIFIER): a
[Line 7, Col 3] Token(OPERATOR): =
[Line 7, Col 5] Token(IDENTIFIER): a
[Line 7, Col 6] Token(OPERATOR): +
[Line 7, Col 7] Token(INT): 1
[Line 7, Col 8] Token(SEPARATOR): ;
[Line 8, Col 1] Token(IDENTIFIER): x
[Line 8, Col 3] Token(OPERATOR): =
[Line 8, Col 5] Token(IDENTIFIER): a
[Line 8, Col 6] Token(OPERATOR): +
[Line 8, Col 7] Token(IDENTIFIER): a
[Line 8, Col 8] Token(OPERATOR): *
[Line 8, Col 9] Token(INT): 5
[Line 8, Col 10] Token(SEPARATOR): ;
[Line 9, Col 1] Token(KEYWORD): int
[Line 9, Col 5] Token(IDENTIFIER): y
[Line 9, Col 7] Token(OPERATOR): =
[Line 9, Col 9] Token(IDENTIFIER): x
[Line 9, Col 11] Token(OPERATOR): +
[Line 9, Col 13] Token(INT): 2
[Line 9, Col 15] Token(OPERATOR): *
[Line 9, Col 17] Token(INT): 3
[Line 9, Col 18] Token(OPERATOR): *
[Line 9, Col 19] Token(IDENTIFIER): x
[Line 9, Col 20] Token(SEPARATOR): ;
[Line 10, Col 1] Token(IDENTIFIER): y
[Line 10, Col 3] Token(OPERATOR): =
[Line 10, Col 5] Token(IDENTIFIER): y
[Line 10, Col 6] Token(OPERATOR): +
[Line 10, Col 7] Token(IDENTIFIER): a
[Line 10, Col 8] Token(SEPARATOR): ;
[Line 11, Col 1] Token(IDENTIFIER): y
[Line 11, Col 3] Token(OPERATOR): =
[Line 11, Col 5] Token(IDENTIFIER): y
[Line 11, Col 6] Token(OPERATOR): *
[Line 11, Col 7] Token(IDENTIFIER): a
[Line 11, Col 8] Token(SEPARATOR): ;
[Line 12, Col 1] Token(KEYWORD): exit
[Line 12, Col 5] Token(SEPARATOR): (
[Line 12, Col 6] Token(IDENTIFIER): y
[Line 12, Col 7] Token(SEPARATOR): )
[Line 12, Col 8] Token(SEPARATOR): ;
[Line 13, Col 1] Token(KEYWORD): exit
[Line 13, Col 5] Token(SEPARATOR): (
[Line 13, Col 6] Token(IDENTIFIER): x
[Line 13, Col 7] Token(SEPARATOR): )
[Line 13, Col 8] Token(SEPARATOR): ;
[Line 14, Col 1] Token(KEYWORD): exit
[Line 14, Col 5] Token(SEPARATOR): (
[Line 14, Col 6] Token(IDENTIFIER): a
[Line 14, Col 7] Token(OPERATOR): +
[Line 14, Col 8] Token(INT): 2
[Line 14, Col 9] Token(OPERATOR): *
[Line 14, Col 10] Token(INT): 3
[Line 14, Col 11] Token(OPERATOR): -
[Line 14, Col 12] Token(IDENTIFIER): a
[Line 14, Col 13] Token(OPERATOR): /
[Line 14, Col 14] Token(INT): 4
[Line 14, Col 15] Token(SEPARATOR): )
[Line 14, Col 16] Token(SEPARATOR): ;
[Line 15, Col 1] Token(KEYWORD): exit
[Line 15, Col 5] Token(SEPARATOR): (
[Line 15, Col 6] Token(INT): 123456789
[Line 15, Col 15] Token(SEPARATOR): )
[Line 15, Col 16] Token(SEPARATOR): ;
[Line 16, Col 1] Token(KEYWORD): exit
[Line 16, Col 5] Token(SEPARATOR): (
[Line 16, Col 6] Token(INT): 16
[Line 16, Col 10] Token(SEPARATOR): )
[Line 16, Col 11] Token(SEPARATOR): ;
[Line 17, Col 1] Token(KEYWORD): exit
[Line 17, Col 5] Token(SEPARATOR): (
[Line 17, Col 6] Token(INT): 4
[Line 17, Col 11] Token(SEPARATOR): )
[Line 17, Col 12] Token(SEPARATOR): ;
[Line 18, Col 1] Token(KEYWORD): exit
[Line 18, Col 5] Token(SEPARATOR): (
[Line 18, Col 6] Token(INT): 64
[Line 18, Col 10] Token(SEPARATOR): )
[Line 18, Col 11] Token(SEPARATOR): ;
[Line 19, Col 1] Token(KEYWORD): exit
[Line 19, Col 5] Token(SEPARATOR): (
[Line 19, Col 6] Token(INT): 100
[Line 19, Col 9] Token(SEPARATOR): )
[Line 19, Col 10] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x4a97eb0, current now = 0x4a97eb0
DEBUG LINK: linked stmt=0x4a98030, current now = 0x4a98030
DEBUG LINK: linked stmt=0x4a98220, current now = 0x4a98220
DEBUG LINK: linked stmt=0x4a98730, current now = 0x4a98730
DEBUG LINK: linked stmt=0x4a98ea0, current now = 0x4a98ea0
DEBUG LINK: linked stmt=0x4a98f60, current now = 0x4a98f60
DEBUG LINK: linked stmt=0x4a994e0, current now = 0x4a994e0
DEBUG LINK: linked stmt=0x4a99b90, current now = 0x4a99b90
DEBUG LINK: linked stmt=0x4a9a370, current now = 0x4a9a370
DEBUG LINK: linked stmt=0x4a9a880, current now = 0x4a9a880
DEBUG LINK: linked stmt=0x4a9ad90, current now = 0x4a9ad90
DEBUG LINK: linked stmt=0x4a9ae50, current now = 0x4a9ae50
DEBUG LINK: linked stmt=0x4a9b040, current now = 0x4a9b040
DEBUG LINK: linked stmt=0x4a9b230, current now = 0x4a9b230
DEBUG LINK: linked stmt=0x4a9bb60, current now = 0x4a9bb60
DEBUG LINK: linked stmt=0x4a9bc90, current now = 0x4a9bc90
DEBUG LINK: linked stmt=0x4a9bdc0, current now = 0x4a9bdc0
DEBUG LINK: linked stmt=0x4a9bef0, current now = 0x4a9bef0
DEBUG LINK: linked stmt=0x4a9c020, current now = 0x4a9c020

--- Syntax Tree ---
PROGRAM
  VAR_DECL: x
  VAR_DECL: a
    LITERAL_INT: 11
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: x
  EXIT_CALL
    LITERAL_INT: 85
  ASSIGNMENT: =
    IDENTIFIER: a
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 504
  ASSIGNMENT: =
    IDENTIFIER: y
  ASSIGNMENT: =
    IDENTIFIER: y
  EXIT_CALL
    LITERAL_INT: 6192
  EXIT_CALL
    LITERAL_INT: 72
  EXIT_CALL
    LITERAL_INT: 15
  EXIT_CALL
    LITERAL_INT: 123456789
  EXIT_CALL
    LITERAL_INT: 16
  EXIT_CALL
    LITERAL_INT: 4
  EXIT_CALL
    LITERAL_INT: 64
  EXIT_CALL
    LITERAL_INT: 100
Compilation successful. Output: generated

Exiting
==2237==
==2237== HEAP SUMMARY:
==2237==     in use at exit: 364 bytes in 11 blocks
==2237==   total heap usage: 284 allocs, 273 frees, 12,852 bytes allocated
==2237==
==2237== 40 bytes in 1 blocks are definitely lost in loss record 2 of 5
==2237==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2237==    by 0x10B18B: createNode (parser.c:170)
==2237==    by 0x10B389: createNodeFromToken (parser.c:251)
==2237==    by 0x10BA5B: parse_primary (parser.c:408)
==2237==    by 0x10BC73: parse_expression (parser.c:456)
==2237==    by 0x10C7A4: parse_assignment_statement (parser.c:657)
==2237==    by 0x10DAB7: parse_statement (parser.c:1013)
==2237==    by 0x10DE3F: parse (parser.c:1099)
==2237==    by 0x1095A6: main (main.c:43)
==2237==
==2237== 160 bytes in 4 blocks are definitely lost in loss record 4 of 5
==2237==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2237==    by 0x10B18B: createNode (parser.c:170)
==2237==    by 0x10BD8E: parse_expression (parser.c:482)
==2237==    by 0x10C7A4: parse_assignment_statement (parser.c:657)
==2237==    by 0x10DAB7: parse_statement (parser.c:1013)
==2237==    by 0x10DE3F: parse (parser.c:1099)
==2237==    by 0x1095A6: main (main.c:43)
==2237==
==2237== 164 (80 direct, 84 indirect) bytes in 2 blocks are definitely lost in loss record 5 of 5
==2237==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2237==    by 0x10B18B: createNode (parser.c:170)
==2237==    by 0x10C8F1: parse_assignment_statement (parser.c:678)
==2237==    by 0x10DAB7: parse_statement (parser.c:1013)
==2237==    by 0x10DE3F: parse (parser.c:1099)
==2237==    by 0x1095A6: main (main.c:43)
==2237==
==2237== LEAK SUMMARY:
==2237==    definitely lost: 280 bytes in 7 blocks
==2237==    indirectly lost: 84 bytes in 4 blocks
==2237==      possibly lost: 0 bytes in 0 blocks
==2237==    still reachable: 0 bytes in 0 blocks
==2237==         suppressed: 0 bytes in 0 blocks
==2237==
==2237== For lists of detected and suppressed errors, rerun with: -s
==2237== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ valgrind --leak-check=full ./build/main test5.tc
==2242== Memcheck, a memory error detector
==2242== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2242== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2242== Command: ./build/main test5.tc
==2242==
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = x at line 1 and col 5
[Line 1, Col 5] Token(IDENTIFIER): x
Found Semicolon at line 1 and col 6
[Line 1, Col 6] Token(SEPARATOR): ;
Found new line at line 1 and col 7
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = a at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): a
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 11 at line 2 and col 9
[Line 2, Col 9] Token(INT): 11
Found Semicolon at line 2 and col 11
[Line 2, Col 11] Token(SEPARATOR): ;
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): =
Found whitespace at line 3 and col 4
Found number = 4 at line 3 and col 5
[Line 3, Col 5] Token(INT): 4
Found Semicolon at line 3 and col 6
[Line 3, Col 6] Token(SEPARATOR): ;
Found new line at line 3 and col 7
Found character = x at line 4 and col 1
[Line 4, Col 1] Token(IDENTIFIER): x
Found whitespace at line 4 and col 2
[Line 4, Col 3] Token(OPERATOR): *=
Found whitespace at line 4 and col 5
Found number = 2 at line 4 and col 6
[Line 4, Col 6] Token(INT): 2
[Line 4, Col 7] Token(OPERATOR): +
Found character = a at line 4 and col 8
[Line 4, Col 8] Token(IDENTIFIER): a
Found Semicolon at line 4 and col 9
[Line 4, Col 9] Token(SEPARATOR): ;
Found whitespace at line 4 and col 10
Found whitespace at line 4 and col 11
Found whitespace at line 4 and col 12
Found new line at line 4 and col 13
Found character = x at line 5 and col 1
[Line 5, Col 1] Token(IDENTIFIER): x
Found whitespace at line 5 and col 2
[Line 5, Col 3] Token(OPERATOR): +=
Found whitespace at line 5 and col 5
Found character = a at line 5 and col 6
[Line 5, Col 6] Token(IDENTIFIER): a
Found whitespace at line 5 and col 7
[Line 5, Col 8] Token(OPERATOR): +
Found whitespace at line 5 and col 9
Found character = a at line 5 and col 10
[Line 5, Col 10] Token(IDENTIFIER): a
[Line 5, Col 11] Token(OPERATOR): *
Found number = 2 at line 5 and col 12
[Line 5, Col 12] Token(INT): 2
Found Semicolon at line 5 and col 13
[Line 5, Col 13] Token(SEPARATOR): ;
Found new line at line 5 and col 14
Found keyword 'exit' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = x at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): x
Found CLOSED_PARENTHESIS ) at line 6 and col 7
[Line 6, Col 7] Token(SEPARATOR): )
Found Semicolon at line 6 and col 8
[Line 6, Col 8] Token(SEPARATOR): ;
Found new line at line 6 and col 9
Found character = a at line 7 and col 1
[Line 7, Col 1] Token(IDENTIFIER): a
Found whitespace at line 7 and col 2
[Line 7, Col 3] Token(OPERATOR): =
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
[Line 7, Col 5] Token(IDENTIFIER): a
[Line 7, Col 6] Token(OPERATOR): +
Found number = 1 at line 7 and col 7
[Line 7, Col 7] Token(INT): 1
Found Semicolon at line 7 and col 8
[Line 7, Col 8] Token(SEPARATOR): ;
Found new line at line 7 and col 9
Found character = x at line 8 and col 1
[Line 8, Col 1] Token(IDENTIFIER): x
Found whitespace at line 8 and col 2
[Line 8, Col 3] Token(OPERATOR): =
Found whitespace at line 8 and col 4
Found character = a at line 8 and col 5
[Line 8, Col 5] Token(IDENTIFIER): a
[Line 8, Col 6] Token(OPERATOR): +
Found character = a at line 8 and col 7
[Line 8, Col 7] Token(IDENTIFIER): a
[Line 8, Col 8] Token(OPERATOR): *
Found number = 5 at line 8 and col 9
[Line 8, Col 9] Token(INT): 5
Found Semicolon at line 8 and col 10
[Line 8, Col 10] Token(SEPARATOR): ;
Found new line at line 8 and col 11
Found keyword 'int' at line 9 and col 1
[Line 9, Col 1] Token(KEYWORD): int
Found whitespace at line 9 and col 4
Found character = y at line 9 and col 5
[Line 9, Col 5] Token(IDENTIFIER): y
Found whitespace at line 9 and col 6
[Line 9, Col 7] Token(OPERATOR): =
Found whitespace at line 9 and col 8
Found character = x at line 9 and col 9
[Line 9, Col 9] Token(IDENTIFIER): x
Found whitespace at line 9 and col 10
[Line 9, Col 11] Token(OPERATOR): +
Found whitespace at line 9 and col 12
Found number = 2 at line 9 and col 13
[Line 9, Col 13] Token(INT): 2
Found whitespace at line 9 and col 14
[Line 9, Col 15] Token(OPERATOR): *
Found whitespace at line 9 and col 16
Found number = 3 at line 9 and col 17
[Line 9, Col 17] Token(INT): 3
[Line 9, Col 18] Token(OPERATOR): *
Found character = x at line 9 and col 19
[Line 9, Col 19] Token(IDENTIFIER): x
Found Semicolon at line 9 and col 20
[Line 9, Col 20] Token(SEPARATOR): ;
Found new line at line 9 and col 21
Found character = y at line 10 and col 1
[Line 10, Col 1] Token(IDENTIFIER): y
Found whitespace at line 10 and col 2
[Line 10, Col 3] Token(OPERATOR): =
Found whitespace at line 10 and col 4
Found character = y at line 10 and col 5
[Line 10, Col 5] Token(IDENTIFIER): y
[Line 10, Col 6] Token(OPERATOR): +
Found character = a at line 10 and col 7
[Line 10, Col 7] Token(IDENTIFIER): a
Found Semicolon at line 10 and col 8
[Line 10, Col 8] Token(SEPARATOR): ;
Found new line at line 10 and col 9
Found character = y at line 11 and col 1
[Line 11, Col 1] Token(IDENTIFIER): y
Found whitespace at line 11 and col 2
[Line 11, Col 3] Token(OPERATOR): =
Found whitespace at line 11 and col 4
Found character = y at line 11 and col 5
[Line 11, Col 5] Token(IDENTIFIER): y
[Line 11, Col 6] Token(OPERATOR): *
Found character = a at line 11 and col 7
[Line 11, Col 7] Token(IDENTIFIER): a
Found Semicolon at line 11 and col 8
[Line 11, Col 8] Token(SEPARATOR): ;
Found new line at line 11 and col 9
Found keyword 'exit' at line 12 and col 1
[Line 12, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 12 and col 5
[Line 12, Col 5] Token(SEPARATOR): (
Found character = y at line 12 and col 6
[Line 12, Col 6] Token(IDENTIFIER): y
Found CLOSED_PARENTHESIS ) at line 12 and col 7
[Line 12, Col 7] Token(SEPARATOR): )
Found Semicolon at line 12 and col 8
[Line 12, Col 8] Token(SEPARATOR): ;
Found new line at line 12 and col 9
Found keyword 'exit' at line 13 and col 1
[Line 13, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 13 and col 5
[Line 13, Col 5] Token(SEPARATOR): (
Found character = x at line 13 and col 6
[Line 13, Col 6] Token(IDENTIFIER): x
Found CLOSED_PARENTHESIS ) at line 13 and col 7
[Line 13, Col 7] Token(SEPARATOR): )
Found Semicolon at line 13 and col 8
[Line 13, Col 8] Token(SEPARATOR): ;
Found new line at line 13 and col 9
Found keyword 'exit' at line 14 and col 1
[Line 14, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 14 and col 5
[Line 14, Col 5] Token(SEPARATOR): (
Found character = a at line 14 and col 6
[Line 14, Col 6] Token(IDENTIFIER): a
[Line 14, Col 7] Token(OPERATOR): +
Found number = 2 at line 14 and col 8
[Line 14, Col 8] Token(INT): 2
[Line 14, Col 9] Token(OPERATOR): *
Found number = 3 at line 14 and col 10
[Line 14, Col 10] Token(INT): 3
[Line 14, Col 11] Token(OPERATOR): -
Found character = a at line 14 and col 12
[Line 14, Col 12] Token(IDENTIFIER): a
[Line 14, Col 13] Token(OPERATOR): /
Found number = 4 at line 14 and col 14
[Line 14, Col 14] Token(INT): 4
Found CLOSED_PARENTHESIS ) at line 14 and col 15
[Line 14, Col 15] Token(SEPARATOR): )
Found Semicolon at line 14 and col 16
[Line 14, Col 16] Token(SEPARATOR): ;
Found new line at line 14 and col 17
Found keyword 'exit' at line 15 and col 1
[Line 15, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 15 and col 5
[Line 15, Col 5] Token(SEPARATOR): (
Found number = 123456789 at line 15 and col 6
[Line 15, Col 6] Token(INT): 123456789
Found CLOSED_PARENTHESIS ) at line 15 and col 15
[Line 15, Col 15] Token(SEPARATOR): )
Found Semicolon at line 15 and col 16
[Line 15, Col 16] Token(SEPARATOR): ;
Found new line at line 15 and col 17
Found keyword 'exit' at line 16 and col 1
[Line 16, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 16 and col 5
[Line 16, Col 5] Token(SEPARATOR): (
Found number = 16 at line 16 and col 6
[Line 16, Col 6] Token(INT): 16
Found CLOSED_PARENTHESIS ) at line 16 and col 10
[Line 16, Col 10] Token(SEPARATOR): )
Found Semicolon at line 16 and col 11
[Line 16, Col 11] Token(SEPARATOR): ;
Found new line at line 16 and col 12
Found keyword 'exit' at line 17 and col 1
[Line 17, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 17 and col 5
[Line 17, Col 5] Token(SEPARATOR): (
Found number = 4 at line 17 and col 6
[Line 17, Col 6] Token(INT): 4
Found CLOSED_PARENTHESIS ) at line 17 and col 11
[Line 17, Col 11] Token(SEPARATOR): )
Found Semicolon at line 17 and col 12
[Line 17, Col 12] Token(SEPARATOR): ;
Found new line at line 17 and col 13
Found keyword 'exit' at line 18 and col 1
[Line 18, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 18 and col 5
[Line 18, Col 5] Token(SEPARATOR): (
Found number = 64 at line 18 and col 6
[Line 18, Col 6] Token(INT): 64
Found CLOSED_PARENTHESIS ) at line 18 and col 10
[Line 18, Col 10] Token(SEPARATOR): )
Found Semicolon at line 18 and col 11
[Line 18, Col 11] Token(SEPARATOR): ;
Found new line at line 18 and col 12
Found keyword 'exit' at line 19 and col 1
[Line 19, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 19 and col 5
[Line 19, Col 5] Token(SEPARATOR): (
Found number = 100 at line 19 and col 6
[Line 19, Col 6] Token(INT): 100
Found CLOSED_PARENTHESIS ) at line 19 and col 9
[Line 19, Col 9] Token(SEPARATOR): )
Found Semicolon at line 19 and col 10
[Line 19, Col 10] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): x
[Line 1, Col 6] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): a
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 11
[Line 2, Col 11] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): =
[Line 3, Col 5] Token(INT): 4
[Line 3, Col 6] Token(SEPARATOR): ;
[Line 4, Col 1] Token(IDENTIFIER): x
[Line 4, Col 3] Token(OPERATOR): *=
[Line 4, Col 6] Token(INT): 2
[Line 4, Col 7] Token(OPERATOR): +
[Line 4, Col 8] Token(IDENTIFIER): a
[Line 4, Col 9] Token(SEPARATOR): ;
[Line 5, Col 1] Token(IDENTIFIER): x
[Line 5, Col 3] Token(OPERATOR): +=
[Line 5, Col 6] Token(IDENTIFIER): a
[Line 5, Col 8] Token(OPERATOR): +
[Line 5, Col 10] Token(IDENTIFIER): a
[Line 5, Col 11] Token(OPERATOR): *
[Line 5, Col 12] Token(INT): 2
[Line 5, Col 13] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): exit
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): x
[Line 6, Col 7] Token(SEPARATOR): )
[Line 6, Col 8] Token(SEPARATOR): ;
[Line 7, Col 1] Token(IDENTIFIER): a
[Line 7, Col 3] Token(OPERATOR): =
[Line 7, Col 5] Token(IDENTIFIER): a
[Line 7, Col 6] Token(OPERATOR): +
[Line 7, Col 7] Token(INT): 1
[Line 7, Col 8] Token(SEPARATOR): ;
[Line 8, Col 1] Token(IDENTIFIER): x
[Line 8, Col 3] Token(OPERATOR): =
[Line 8, Col 5] Token(IDENTIFIER): a
[Line 8, Col 6] Token(OPERATOR): +
[Line 8, Col 7] Token(IDENTIFIER): a
[Line 8, Col 8] Token(OPERATOR): *
[Line 8, Col 9] Token(INT): 5
[Line 8, Col 10] Token(SEPARATOR): ;
[Line 9, Col 1] Token(KEYWORD): int
[Line 9, Col 5] Token(IDENTIFIER): y
[Line 9, Col 7] Token(OPERATOR): =
[Line 9, Col 9] Token(IDENTIFIER): x
[Line 9, Col 11] Token(OPERATOR): +
[Line 9, Col 13] Token(INT): 2
[Line 9, Col 15] Token(OPERATOR): *
[Line 9, Col 17] Token(INT): 3
[Line 9, Col 18] Token(OPERATOR): *
[Line 9, Col 19] Token(IDENTIFIER): x
[Line 9, Col 20] Token(SEPARATOR): ;
[Line 10, Col 1] Token(IDENTIFIER): y
[Line 10, Col 3] Token(OPERATOR): =
[Line 10, Col 5] Token(IDENTIFIER): y
[Line 10, Col 6] Token(OPERATOR): +
[Line 10, Col 7] Token(IDENTIFIER): a
[Line 10, Col 8] Token(SEPARATOR): ;
[Line 11, Col 1] Token(IDENTIFIER): y
[Line 11, Col 3] Token(OPERATOR): =
[Line 11, Col 5] Token(IDENTIFIER): y
[Line 11, Col 6] Token(OPERATOR): *
[Line 11, Col 7] Token(IDENTIFIER): a
[Line 11, Col 8] Token(SEPARATOR): ;
[Line 12, Col 1] Token(KEYWORD): exit
[Line 12, Col 5] Token(SEPARATOR): (
[Line 12, Col 6] Token(IDENTIFIER): y
[Line 12, Col 7] Token(SEPARATOR): )
[Line 12, Col 8] Token(SEPARATOR): ;
[Line 13, Col 1] Token(KEYWORD): exit
[Line 13, Col 5] Token(SEPARATOR): (
[Line 13, Col 6] Token(IDENTIFIER): x
[Line 13, Col 7] Token(SEPARATOR): )
[Line 13, Col 8] Token(SEPARATOR): ;
[Line 14, Col 1] Token(KEYWORD): exit
[Line 14, Col 5] Token(SEPARATOR): (
[Line 14, Col 6] Token(IDENTIFIER): a
[Line 14, Col 7] Token(OPERATOR): +
[Line 14, Col 8] Token(INT): 2
[Line 14, Col 9] Token(OPERATOR): *
[Line 14, Col 10] Token(INT): 3
[Line 14, Col 11] Token(OPERATOR): -
[Line 14, Col 12] Token(IDENTIFIER): a
[Line 14, Col 13] Token(OPERATOR): /
[Line 14, Col 14] Token(INT): 4
[Line 14, Col 15] Token(SEPARATOR): )
[Line 14, Col 16] Token(SEPARATOR): ;
[Line 15, Col 1] Token(KEYWORD): exit
[Line 15, Col 5] Token(SEPARATOR): (
[Line 15, Col 6] Token(INT): 123456789
[Line 15, Col 15] Token(SEPARATOR): )
[Line 15, Col 16] Token(SEPARATOR): ;
[Line 16, Col 1] Token(KEYWORD): exit
[Line 16, Col 5] Token(SEPARATOR): (
[Line 16, Col 6] Token(INT): 16
[Line 16, Col 10] Token(SEPARATOR): )
[Line 16, Col 11] Token(SEPARATOR): ;
[Line 17, Col 1] Token(KEYWORD): exit
[Line 17, Col 5] Token(SEPARATOR): (
[Line 17, Col 6] Token(INT): 4
[Line 17, Col 11] Token(SEPARATOR): )
[Line 17, Col 12] Token(SEPARATOR): ;
[Line 18, Col 1] Token(KEYWORD): exit
[Line 18, Col 5] Token(SEPARATOR): (
[Line 18, Col 6] Token(INT): 64
[Line 18, Col 10] Token(SEPARATOR): )
[Line 18, Col 11] Token(SEPARATOR): ;
[Line 19, Col 1] Token(KEYWORD): exit
[Line 19, Col 5] Token(SEPARATOR): (
[Line 19, Col 6] Token(INT): 100
[Line 19, Col 9] Token(SEPARATOR): )
[Line 19, Col 10] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x4a97eb0, current now = 0x4a97eb0
DEBUG LINK: linked stmt=0x4a98030, current now = 0x4a98030
DEBUG LINK: linked stmt=0x4a98220, current now = 0x4a98220
DEBUG LINK: linked stmt=0x4a98730, current now = 0x4a98730
DEBUG LINK: linked stmt=0x4a98ea0, current now = 0x4a98ea0
DEBUG LINK: linked stmt=0x4a98f60, current now = 0x4a98f60
DEBUG LINK: linked stmt=0x4a994e0, current now = 0x4a994e0
DEBUG LINK: linked stmt=0x4a99b90, current now = 0x4a99b90
DEBUG LINK: linked stmt=0x4a9a370, current now = 0x4a9a370
DEBUG LINK: linked stmt=0x4a9a880, current now = 0x4a9a880
DEBUG LINK: linked stmt=0x4a9ad90, current now = 0x4a9ad90
DEBUG LINK: linked stmt=0x4a9ae50, current now = 0x4a9ae50
DEBUG LINK: linked stmt=0x4a9b040, current now = 0x4a9b040
DEBUG LINK: linked stmt=0x4a9b230, current now = 0x4a9b230
DEBUG LINK: linked stmt=0x4a9bb60, current now = 0x4a9bb60
DEBUG LINK: linked stmt=0x4a9bc90, current now = 0x4a9bc90
DEBUG LINK: linked stmt=0x4a9bdc0, current now = 0x4a9bdc0
DEBUG LINK: linked stmt=0x4a9bef0, current now = 0x4a9bef0
DEBUG LINK: linked stmt=0x4a9c020, current now = 0x4a9c020

--- Syntax Tree ---
PROGRAM
  VAR_DECL: x
  VAR_DECL: a
    LITERAL_INT: 11
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: x
  EXIT_CALL
    LITERAL_INT: 85
  ASSIGNMENT: =
    IDENTIFIER: a
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 504
  ASSIGNMENT: =
    IDENTIFIER: y
  ASSIGNMENT: =
    IDENTIFIER: y
  EXIT_CALL
    LITERAL_INT: 6192
  EXIT_CALL
    LITERAL_INT: 72
  EXIT_CALL
    LITERAL_INT: 15
  EXIT_CALL
    LITERAL_INT: 123456789
  EXIT_CALL
    LITERAL_INT: 16
  EXIT_CALL
    LITERAL_INT: 4
  EXIT_CALL
    LITERAL_INT: 64
  EXIT_CALL
    LITERAL_INT: 100
Compilation successful. Output: generated

Exiting
==2242==
==2242== HEAP SUMMARY:
==2242==     in use at exit: 364 bytes in 11 blocks
==2242==   total heap usage: 284 allocs, 273 frees, 12,852 bytes allocated
==2242==
==2242== 40 bytes in 1 blocks are definitely lost in loss record 2 of 5
==2242==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2242==    by 0x10B18B: createNode (parser.c:170)
==2242==    by 0x10B389: createNodeFromToken (parser.c:251)
==2242==    by 0x10BA5B: parse_primary (parser.c:408)
==2242==    by 0x10BC73: parse_expression (parser.c:456)
==2242==    by 0x10C7A4: parse_assignment_statement (parser.c:657)
==2242==    by 0x10DAB7: parse_statement (parser.c:1013)
==2242==    by 0x10DE3F: parse (parser.c:1099)
==2242==    by 0x1095A6: main (main.c:43)
==2242==
==2242== 160 bytes in 4 blocks are definitely lost in loss record 4 of 5
==2242==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2242==    by 0x10B18B: createNode (parser.c:170)
==2242==    by 0x10BD8E: parse_expression (parser.c:482)
==2242==    by 0x10C7A4: parse_assignment_statement (parser.c:657)
==2242==    by 0x10DAB7: parse_statement (parser.c:1013)
==2242==    by 0x10DE3F: parse (parser.c:1099)
==2242==    by 0x1095A6: main (main.c:43)
==2242==
==2242== 164 (80 direct, 84 indirect) bytes in 2 blocks are definitely lost in loss record 5 of 5
==2242==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2242==    by 0x10B18B: createNode (parser.c:170)
==2242==    by 0x10C8F1: parse_assignment_statement (parser.c:678)
==2242==    by 0x10DAB7: parse_statement (parser.c:1013)
==2242==    by 0x10DE3F: parse (parser.c:1099)
==2242==    by 0x1095A6: main (main.c:43)
==2242==
==2242== LEAK SUMMARY:
==2242==    definitely lost: 280 bytes in 7 blocks
==2242==    indirectly lost: 84 bytes in 4 blocks
==2242==      possibly lost: 0 bytes in 0 blocks
==2242==    still reachable: 0 bytes in 0 blocks
==2242==         suppressed: 0 bytes in 0 blocks
==2242==
==2242== For lists of detected and suppressed errors, rerun with: -s
==2242== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ make clean
rm -rf build
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ make
mkdir -p build
mkdir -p build/obj
gcc -Wall -Wextra -g -O0 -c src/main.c -o build/obj/main.o
gcc -Wall -Wextra -g -O0 -c src/lexer/lexer.c -o build/obj/lexer.o
gcc -Wall -Wextra -g -O0 -c src/parser/parser.c -o build/obj/parser.o
gcc -Wall -Wextra -g -O0 -c src/codegen/codegen.c -o build/obj/codegen.o
gcc build/obj/main.o build/obj/lexer.o build/obj/parser.o build/obj/codegen.o    -o build/main -Wall -Wextra -g -O0
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test8.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = a at line 1 and col 5
Found character = b at line 1 and col 6
Found character = c at line 1 and col 7
[Line 1, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 1 and col 8
[Line 1, Col 9] Token(OPERATOR): =
Found whitespace at line 1 and col 10
Found number = 12 at line 1 and col 11
[Line 1, Col 11] Token(INT): 12
Found Semicolon at line 1 and col 13
[Line 1, Col 13] Token(SEPARATOR): ;
Found whitespace at line 1 and col 14
Found new line at line 1 and col 15
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = x at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): x
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 1 at line 2 and col 9
[Line 2, Col 9] Token(INT): 1
Found Semicolon at line 2 and col 10
[Line 2, Col 10] Token(SEPARATOR): ;
Found whitespace at line 2 and col 11
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): +=
Found whitespace at line 3 and col 5
Found number = 5 at line 3 and col 6
[Line 3, Col 6] Token(INT): 5
Found Semicolon at line 3 and col 7
[Line 3, Col 7] Token(SEPARATOR): ;
Found whitespace at line 3 and col 8
Found new line at line 3 and col 9
Found keyword 'int' at line 4 and col 1
[Line 4, Col 1] Token(KEYWORD): int
Found whitespace at line 4 and col 4
Found character = y at line 4 and col 5
[Line 4, Col 5] Token(IDENTIFIER): y
Found whitespace at line 4 and col 6
[Line 4, Col 7] Token(OPERATOR): =
Found whitespace at line 4 and col 8
Found character = x at line 4 and col 9
[Line 4, Col 9] Token(IDENTIFIER): x
Found whitespace at line 4 and col 10
[Line 4, Col 11] Token(OPERATOR): <<
Found whitespace at line 4 and col 13
Found number = 1 at line 4 and col 14
[Line 4, Col 14] Token(INT): 1
Found Semicolon at line 4 and col 15
[Line 4, Col 15] Token(SEPARATOR): ;
Found whitespace at line 4 and col 16
Found new line at line 4 and col 17
Found keyword 'int' at line 5 and col 1
[Line 5, Col 1] Token(KEYWORD): int
Found whitespace at line 5 and col 4
Found character = z at line 5 and col 5
[Line 5, Col 5] Token(IDENTIFIER): z
Found whitespace at line 5 and col 6
[Line 5, Col 7] Token(OPERATOR): =
Found whitespace at line 5 and col 8
Found number = 1 at line 5 and col 9
[Line 5, Col 9] Token(INT): 1
Found Semicolon at line 5 and col 10
[Line 5, Col 10] Token(SEPARATOR): ;
Found whitespace at line 5 and col 11
Found new line at line 5 and col 12
Found keyword 'if' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): if
Found whitespace at line 6 and col 3
Found OPEN_PARENTHESIS ( at line 6 and col 4
[Line 6, Col 4] Token(SEPARATOR): (
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = y at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
Found number = 5 at line 6 and col 8
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
Found number = 1 at line 6 and col 11
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
Found number = 1 at line 6 and col 13
[Line 6, Col 13] Token(INT): 1
Found CLOSED_PARENTHESIS ) at line 6 and col 14
[Line 6, Col 14] Token(SEPARATOR): )
Found whitespace at line 6 and col 15
[Line 6, Col 16] Token(OPERATOR): -
Found whitespace at line 6 and col 17
Found number = 6 at line 6 and col 18
[Line 6, Col 18] Token(INT): 6
Found whitespace at line 6 and col 19
[Line 6, Col 20] Token(OPERATOR): ==
Found whitespace at line 6 and col 22
Found character = z at line 6 and col 23
[Line 6, Col 23] Token(IDENTIFIER): z
Found CLOSED_PARENTHESIS ) at line 6 and col 24
[Line 6, Col 24] Token(SEPARATOR): )
Found whitespace at line 6 and col 25
Found OPEN_PARENTHESIS { at line 6 and col 26
[Line 6, Col 26] Token(SEPARATOR): {
Found whitespace at line 6 and col 27
Found new line at line 6 and col 28
Found whitespace at line 7 and col 1
Found whitespace at line 7 and col 2
Found whitespace at line 7 and col 3
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
Found character = b at line 7 and col 6
Found character = c at line 7 and col 7
[Line 7, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 7 and col 8
[Line 7, Col 9] Token(OPERATOR): <<=
Found whitespace at line 7 and col 12
Found number = 1 at line 7 and col 13
[Line 7, Col 13] Token(INT): 1
Found Semicolon at line 7 and col 14
[Line 7, Col 14] Token(SEPARATOR): ;
Found whitespace at line 7 and col 15
Found new line at line 7 and col 16
Found whitespace at line 8 and col 1
Found whitespace at line 8 and col 2
Found whitespace at line 8 and col 3
Found whitespace at line 8 and col 4
Found keyword 'exit' at line 8 and col 5
[Line 8, Col 5] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 8 and col 9
[Line 8, Col 9] Token(SEPARATOR): (
Found character = a at line 8 and col 10
Found character = b at line 8 and col 11
Found character = c at line 8 and col 12
[Line 8, Col 10] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 8 and col 13
[Line 8, Col 13] Token(SEPARATOR): )
Found Semicolon at line 8 and col 14
[Line 8, Col 14] Token(SEPARATOR): ;
Found whitespace at line 8 and col 15
Found whitespace at line 8 and col 16
Found new line at line 8 and col 17
Found CLOSED_PARENTHESIS } at line 9 and col 1
[Line 9, Col 1] Token(SEPARATOR): }
Found whitespace at line 9 and col 2
Found whitespace at line 9 and col 3
Found whitespace at line 9 and col 4
Found new line at line 9 and col 5
Found whitespace at line 10 and col 1
Found new line at line 10 and col 2
Found keyword 'exit' at line 11 and col 1
[Line 11, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 11 and col 5
[Line 11, Col 5] Token(SEPARATOR): (
Found number = 4096 at line 11 and col 6
[Line 11, Col 6] Token(INT): 4096
Found whitespace at line 11 and col 12
Found new line at line 11 and col 13
Found CLOSED_PARENTHESIS ) at line 12 and col 1
[Line 12, Col 1] Token(SEPARATOR): )
Found Semicolon at line 12 and col 2
[Line 12, Col 2] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): abc
[Line 1, Col 9] Token(OPERATOR): =
[Line 1, Col 11] Token(INT): 12
[Line 1, Col 13] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): x
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 1
[Line 2, Col 10] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): +=
[Line 3, Col 6] Token(INT): 5
[Line 3, Col 7] Token(SEPARATOR): ;
[Line 4, Col 1] Token(KEYWORD): int
[Line 4, Col 5] Token(IDENTIFIER): y
[Line 4, Col 7] Token(OPERATOR): =
[Line 4, Col 9] Token(IDENTIFIER): x
[Line 4, Col 11] Token(OPERATOR): <<
[Line 4, Col 14] Token(INT): 1
[Line 4, Col 15] Token(SEPARATOR): ;
[Line 5, Col 1] Token(KEYWORD): int
[Line 5, Col 5] Token(IDENTIFIER): z
[Line 5, Col 7] Token(OPERATOR): =
[Line 5, Col 9] Token(INT): 1
[Line 5, Col 10] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): if
[Line 6, Col 4] Token(SEPARATOR): (
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
[Line 6, Col 13] Token(INT): 1
[Line 6, Col 14] Token(SEPARATOR): )
[Line 6, Col 16] Token(OPERATOR): -
[Line 6, Col 18] Token(INT): 6
[Line 6, Col 20] Token(OPERATOR): ==
[Line 6, Col 23] Token(IDENTIFIER): z
[Line 6, Col 24] Token(SEPARATOR): )
[Line 6, Col 26] Token(SEPARATOR): {
[Line 7, Col 5] Token(IDENTIFIER): abc
[Line 7, Col 9] Token(OPERATOR): <<=
[Line 7, Col 13] Token(INT): 1
[Line 7, Col 14] Token(SEPARATOR): ;
[Line 8, Col 5] Token(KEYWORD): exit
[Line 8, Col 9] Token(SEPARATOR): (
[Line 8, Col 10] Token(IDENTIFIER): abc
[Line 8, Col 13] Token(SEPARATOR): )
[Line 8, Col 14] Token(SEPARATOR): ;
[Line 9, Col 1] Token(SEPARATOR): }
[Line 11, Col 1] Token(KEYWORD): exit
[Line 11, Col 5] Token(SEPARATOR): (
[Line 11, Col 6] Token(INT): 4096
[Line 12, Col 1] Token(SEPARATOR): )
[Line 12, Col 2] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x5db98e822950, current now = 0x5db98e822950
DEBUG LINK: linked stmt=0x5db98e8229f0, current now = 0x5db98e8229f0
DEBUG LINK: linked stmt=0x5db98e822b10, current now = 0x5db98e822b10
DEBUG LINK: linked stmt=0x5db98e822be0, current now = 0x5db98e822be0
DEBUG LINK: linked stmt=0x5db98e822bb0, current now = 0x5db98e822bb0
After parse_expression - condition: Node type 0, int_val=1
Condition parsed. Current token: )
Then block parsed. Current token: exit
DEBUG IF_SUBTREE: if_node=0x5db98e823040, cond=0x5db98e822ca0, then_block=0x5db98e822d80, then_block->right=(nil)
DEBUG LINK: linked stmt=0x5db98e823040, current now = 0x5db98e823040
DEBUG LINK: linked stmt=0x5db98e8230c0, current now = 0x5db98e8230c0

--- Syntax Tree ---
PROGRAM
  VAR_DECL: abc
    LITERAL_INT: 12
  VAR_DECL: x
    LITERAL_INT: 1
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 12
  VAR_DECL: z
    LITERAL_INT: 1
  IF_STATEMENT
    CONDITION:
      LITERAL_INT: 1
      BLOCK {
        ASSIGNMENT: =
          IDENTIFIER: abc
        EXIT_CALL
          LITERAL_INT: 24
      } // END BLOCK
  EXIT_CALL
    LITERAL_INT: 4096
Compilation successful. Output: generated

Exiting
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test8.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = a at line 1 and col 5
Found character = b at line 1 and col 6
Found character = c at line 1 and col 7
[Line 1, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 1 and col 8
[Line 1, Col 9] Token(OPERATOR): =
Found whitespace at line 1 and col 10
Found number = 12 at line 1 and col 11
[Line 1, Col 11] Token(INT): 12
Found Semicolon at line 1 and col 13
[Line 1, Col 13] Token(SEPARATOR): ;
Found whitespace at line 1 and col 14
Found new line at line 1 and col 15
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = x at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): x
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 1 at line 2 and col 9
[Line 2, Col 9] Token(INT): 1
Found Semicolon at line 2 and col 10
[Line 2, Col 10] Token(SEPARATOR): ;
Found whitespace at line 2 and col 11
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): +=
Found whitespace at line 3 and col 5
Found number = 5 at line 3 and col 6
[Line 3, Col 6] Token(INT): 5
Found Semicolon at line 3 and col 7
[Line 3, Col 7] Token(SEPARATOR): ;
Found whitespace at line 3 and col 8
Found new line at line 3 and col 9
Found keyword 'int' at line 4 and col 1
[Line 4, Col 1] Token(KEYWORD): int
Found whitespace at line 4 and col 4
Found character = y at line 4 and col 5
[Line 4, Col 5] Token(IDENTIFIER): y
Found whitespace at line 4 and col 6
[Line 4, Col 7] Token(OPERATOR): =
Found whitespace at line 4 and col 8
Found character = x at line 4 and col 9
[Line 4, Col 9] Token(IDENTIFIER): x
Found whitespace at line 4 and col 10
[Line 4, Col 11] Token(OPERATOR): <<
Found whitespace at line 4 and col 13
Found number = 1 at line 4 and col 14
[Line 4, Col 14] Token(INT): 1
Found Semicolon at line 4 and col 15
[Line 4, Col 15] Token(SEPARATOR): ;
Found whitespace at line 4 and col 16
Found new line at line 4 and col 17
Found keyword 'int' at line 5 and col 1
[Line 5, Col 1] Token(KEYWORD): int
Found whitespace at line 5 and col 4
Found character = z at line 5 and col 5
[Line 5, Col 5] Token(IDENTIFIER): z
Found whitespace at line 5 and col 6
[Line 5, Col 7] Token(OPERATOR): =
Found whitespace at line 5 and col 8
Found number = 1 at line 5 and col 9
[Line 5, Col 9] Token(INT): 1
Found Semicolon at line 5 and col 10
[Line 5, Col 10] Token(SEPARATOR): ;
Found whitespace at line 5 and col 11
Found new line at line 5 and col 12
Found keyword 'if' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): if
Found whitespace at line 6 and col 3
Found OPEN_PARENTHESIS ( at line 6 and col 4
[Line 6, Col 4] Token(SEPARATOR): (
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = y at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
Found number = 5 at line 6 and col 8
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
Found number = 1 at line 6 and col 11
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
Found number = 1 at line 6 and col 13
[Line 6, Col 13] Token(INT): 1
Found CLOSED_PARENTHESIS ) at line 6 and col 14
[Line 6, Col 14] Token(SEPARATOR): )
Found whitespace at line 6 and col 15
[Line 6, Col 16] Token(OPERATOR): ==
Found whitespace at line 6 and col 18
Found character = z at line 6 and col 19
[Line 6, Col 19] Token(IDENTIFIER): z
Found CLOSED_PARENTHESIS ) at line 6 and col 20
[Line 6, Col 20] Token(SEPARATOR): )
Found whitespace at line 6 and col 21
Found OPEN_PARENTHESIS { at line 6 and col 22
[Line 6, Col 22] Token(SEPARATOR): {
Found whitespace at line 6 and col 23
Found new line at line 6 and col 24
Found whitespace at line 7 and col 1
Found whitespace at line 7 and col 2
Found whitespace at line 7 and col 3
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
Found character = b at line 7 and col 6
Found character = c at line 7 and col 7
[Line 7, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 7 and col 8
[Line 7, Col 9] Token(OPERATOR): <<=
Found whitespace at line 7 and col 12
Found number = 1 at line 7 and col 13
[Line 7, Col 13] Token(INT): 1
Found Semicolon at line 7 and col 14
[Line 7, Col 14] Token(SEPARATOR): ;
Found whitespace at line 7 and col 15
Found new line at line 7 and col 16
Found whitespace at line 8 and col 1
Found whitespace at line 8 and col 2
Found whitespace at line 8 and col 3
Found whitespace at line 8 and col 4
Found keyword 'exit' at line 8 and col 5
[Line 8, Col 5] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 8 and col 9
[Line 8, Col 9] Token(SEPARATOR): (
Found character = a at line 8 and col 10
Found character = b at line 8 and col 11
Found character = c at line 8 and col 12
[Line 8, Col 10] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 8 and col 13
[Line 8, Col 13] Token(SEPARATOR): )
Found Semicolon at line 8 and col 14
[Line 8, Col 14] Token(SEPARATOR): ;
Found whitespace at line 8 and col 15
Found whitespace at line 8 and col 16
Found new line at line 8 and col 17
Found CLOSED_PARENTHESIS } at line 9 and col 1
[Line 9, Col 1] Token(SEPARATOR): }
Found whitespace at line 9 and col 2
Found whitespace at line 9 and col 3
Found whitespace at line 9 and col 4
Found new line at line 9 and col 5
Found whitespace at line 10 and col 1
Found new line at line 10 and col 2
Found keyword 'exit' at line 11 and col 1
[Line 11, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 11 and col 5
[Line 11, Col 5] Token(SEPARATOR): (
Found number = 4096 at line 11 and col 6
[Line 11, Col 6] Token(INT): 4096
Found whitespace at line 11 and col 12
Found new line at line 11 and col 13
Found CLOSED_PARENTHESIS ) at line 12 and col 1
[Line 12, Col 1] Token(SEPARATOR): )
Found Semicolon at line 12 and col 2
[Line 12, Col 2] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): abc
[Line 1, Col 9] Token(OPERATOR): =
[Line 1, Col 11] Token(INT): 12
[Line 1, Col 13] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): x
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 1
[Line 2, Col 10] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): +=
[Line 3, Col 6] Token(INT): 5
[Line 3, Col 7] Token(SEPARATOR): ;
[Line 4, Col 1] Token(KEYWORD): int
[Line 4, Col 5] Token(IDENTIFIER): y
[Line 4, Col 7] Token(OPERATOR): =
[Line 4, Col 9] Token(IDENTIFIER): x
[Line 4, Col 11] Token(OPERATOR): <<
[Line 4, Col 14] Token(INT): 1
[Line 4, Col 15] Token(SEPARATOR): ;
[Line 5, Col 1] Token(KEYWORD): int
[Line 5, Col 5] Token(IDENTIFIER): z
[Line 5, Col 7] Token(OPERATOR): =
[Line 5, Col 9] Token(INT): 1
[Line 5, Col 10] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): if
[Line 6, Col 4] Token(SEPARATOR): (
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
[Line 6, Col 13] Token(INT): 1
[Line 6, Col 14] Token(SEPARATOR): )
[Line 6, Col 16] Token(OPERATOR): ==
[Line 6, Col 19] Token(IDENTIFIER): z
[Line 6, Col 20] Token(SEPARATOR): )
[Line 6, Col 22] Token(SEPARATOR): {
[Line 7, Col 5] Token(IDENTIFIER): abc
[Line 7, Col 9] Token(OPERATOR): <<=
[Line 7, Col 13] Token(INT): 1
[Line 7, Col 14] Token(SEPARATOR): ;
[Line 8, Col 5] Token(KEYWORD): exit
[Line 8, Col 9] Token(SEPARATOR): (
[Line 8, Col 10] Token(IDENTIFIER): abc
[Line 8, Col 13] Token(SEPARATOR): )
[Line 8, Col 14] Token(SEPARATOR): ;
[Line 9, Col 1] Token(SEPARATOR): }
[Line 11, Col 1] Token(KEYWORD): exit
[Line 11, Col 5] Token(SEPARATOR): (
[Line 11, Col 6] Token(INT): 4096
[Line 12, Col 1] Token(SEPARATOR): )
[Line 12, Col 2] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x65414fd0b930, current now = 0x65414fd0b930
DEBUG LINK: linked stmt=0x65414fd0b9d0, current now = 0x65414fd0b9d0
DEBUG LINK: linked stmt=0x65414fd0baf0, current now = 0x65414fd0baf0
DEBUG LINK: linked stmt=0x65414fd0bbc0, current now = 0x65414fd0bbc0
DEBUG LINK: linked stmt=0x65414fd0bb90, current now = 0x65414fd0bb90
After parse_expression - condition: Node type 0, int_val=0
Condition parsed. Current token: )
Then block parsed. Current token: exit
DEBUG IF_SUBTREE: if_node=0x65414fd0c020, cond=0x65414fd0bd30, then_block=0x65414fd0bcd0, then_block->right=(nil)
DEBUG LINK: linked stmt=0x65414fd0c020, current now = 0x65414fd0c020
DEBUG LINK: linked stmt=0x65414fd0c0a0, current now = 0x65414fd0c0a0

--- Syntax Tree ---
PROGRAM
  VAR_DECL: abc
    LITERAL_INT: 12
  VAR_DECL: x
    LITERAL_INT: 1
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 12
  VAR_DECL: z
    LITERAL_INT: 1
  IF_STATEMENT
    CONDITION:
      LITERAL_INT: 0
      BLOCK {
        ASSIGNMENT: =
          IDENTIFIER: abc
        EXIT_CALL
          LITERAL_INT: 12
      } // END BLOCK
  EXIT_CALL
    LITERAL_INT: 4096
Compilation successful. Output: generated

Exiting
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test8.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = a at line 1 and col 5
Found character = b at line 1 and col 6
Found character = c at line 1 and col 7
[Line 1, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 1 and col 8
[Line 1, Col 9] Token(OPERATOR): =
Found whitespace at line 1 and col 10
Found number = 12 at line 1 and col 11
[Line 1, Col 11] Token(INT): 12
Found Semicolon at line 1 and col 13
[Line 1, Col 13] Token(SEPARATOR): ;
Found whitespace at line 1 and col 14
Found new line at line 1 and col 15
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = x at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): x
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 1 at line 2 and col 9
[Line 2, Col 9] Token(INT): 1
Found Semicolon at line 2 and col 10
[Line 2, Col 10] Token(SEPARATOR): ;
Found whitespace at line 2 and col 11
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): +=
Found whitespace at line 3 and col 5
Found number = 5 at line 3 and col 6
[Line 3, Col 6] Token(INT): 5
Found Semicolon at line 3 and col 7
[Line 3, Col 7] Token(SEPARATOR): ;
Found whitespace at line 3 and col 8
Found new line at line 3 and col 9
Found keyword 'int' at line 4 and col 1
[Line 4, Col 1] Token(KEYWORD): int
Found whitespace at line 4 and col 4
Found character = y at line 4 and col 5
[Line 4, Col 5] Token(IDENTIFIER): y
Found whitespace at line 4 and col 6
[Line 4, Col 7] Token(OPERATOR): =
Found whitespace at line 4 and col 8
Found character = x at line 4 and col 9
[Line 4, Col 9] Token(IDENTIFIER): x
Found whitespace at line 4 and col 10
[Line 4, Col 11] Token(OPERATOR): <<
Found whitespace at line 4 and col 13
Found number = 1 at line 4 and col 14
[Line 4, Col 14] Token(INT): 1
Found Semicolon at line 4 and col 15
[Line 4, Col 15] Token(SEPARATOR): ;
Found whitespace at line 4 and col 16
Found new line at line 4 and col 17
Found keyword 'int' at line 5 and col 1
[Line 5, Col 1] Token(KEYWORD): int
Found whitespace at line 5 and col 4
Found character = z at line 5 and col 5
[Line 5, Col 5] Token(IDENTIFIER): z
Found whitespace at line 5 and col 6
[Line 5, Col 7] Token(OPERATOR): =
Found whitespace at line 5 and col 8
Found number = 1 at line 5 and col 9
[Line 5, Col 9] Token(INT): 1
Found Semicolon at line 5 and col 10
[Line 5, Col 10] Token(SEPARATOR): ;
Found whitespace at line 5 and col 11
Found new line at line 5 and col 12
Found keyword 'if' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): if
Found whitespace at line 6 and col 3
Found OPEN_PARENTHESIS ( at line 6 and col 4
[Line 6, Col 4] Token(SEPARATOR): (
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = y at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
Found number = 5 at line 6 and col 8
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
Found number = 1 at line 6 and col 11
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
Found number = 1 at line 6 and col 13
[Line 6, Col 13] Token(INT): 1
Found CLOSED_PARENTHESIS ) at line 6 and col 14
[Line 6, Col 14] Token(SEPARATOR): )
Found whitespace at line 6 and col 15
[Line 6, Col 16] Token(OPERATOR): ==
Found whitespace at line 6 and col 18
Found character = z at line 6 and col 19
[Line 6, Col 19] Token(IDENTIFIER): z
Found CLOSED_PARENTHESIS ) at line 6 and col 20
[Line 6, Col 20] Token(SEPARATOR): )
Found whitespace at line 6 and col 21
Found OPEN_PARENTHESIS { at line 6 and col 22
[Line 6, Col 22] Token(SEPARATOR): {
Found whitespace at line 6 and col 23
Found new line at line 6 and col 24
Found whitespace at line 7 and col 1
Found whitespace at line 7 and col 2
Found whitespace at line 7 and col 3
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
Found character = b at line 7 and col 6
Found character = c at line 7 and col 7
[Line 7, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 7 and col 8
[Line 7, Col 9] Token(OPERATOR): <<=
Found whitespace at line 7 and col 12
Found number = 1 at line 7 and col 13
[Line 7, Col 13] Token(INT): 1
Found Semicolon at line 7 and col 14
[Line 7, Col 14] Token(SEPARATOR): ;
Found whitespace at line 7 and col 15
Found new line at line 7 and col 16
Found whitespace at line 8 and col 1
Found whitespace at line 8 and col 2
Found whitespace at line 8 and col 3
Found whitespace at line 8 and col 4
Found keyword 'exit' at line 8 and col 5
[Line 8, Col 5] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 8 and col 9
[Line 8, Col 9] Token(SEPARATOR): (
Found character = a at line 8 and col 10
Found character = b at line 8 and col 11
Found character = c at line 8 and col 12
[Line 8, Col 10] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 8 and col 13
[Line 8, Col 13] Token(SEPARATOR): )
Found Semicolon at line 8 and col 14
[Line 8, Col 14] Token(SEPARATOR): ;
Found whitespace at line 8 and col 15
Found whitespace at line 8 and col 16
Found new line at line 8 and col 17
Found CLOSED_PARENTHESIS } at line 9 and col 1
[Line 9, Col 1] Token(SEPARATOR): }
Found whitespace at line 9 and col 2
Found whitespace at line 9 and col 3
Found whitespace at line 9 and col 4
Found new line at line 9 and col 5
Found keyword 'exit' at line 10 and col 1
[Line 10, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 10 and col 5
[Line 10, Col 5] Token(SEPARATOR): (
Found character = a at line 10 and col 6
Found character = b at line 10 and col 7
Found character = c at line 10 and col 8
[Line 10, Col 6] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 10 and col 9
[Line 10, Col 9] Token(SEPARATOR): )
Found Semicolon at line 10 and col 10
[Line 10, Col 10] Token(SEPARATOR): ;
Found whitespace at line 10 and col 11
Found whitespace at line 10 and col 12
Found new line at line 10 and col 13
Found keyword 'exit' at line 11 and col 1
[Line 11, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 11 and col 5
[Line 11, Col 5] Token(SEPARATOR): (
Found number = 4096 at line 11 and col 6
[Line 11, Col 6] Token(INT): 4096
Found whitespace at line 11 and col 12
Found new line at line 11 and col 13
Found CLOSED_PARENTHESIS ) at line 12 and col 1
[Line 12, Col 1] Token(SEPARATOR): )
Found Semicolon at line 12 and col 2
[Line 12, Col 2] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): abc
[Line 1, Col 9] Token(OPERATOR): =
[Line 1, Col 11] Token(INT): 12
[Line 1, Col 13] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): x
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 1
[Line 2, Col 10] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): +=
[Line 3, Col 6] Token(INT): 5
[Line 3, Col 7] Token(SEPARATOR): ;
[Line 4, Col 1] Token(KEYWORD): int
[Line 4, Col 5] Token(IDENTIFIER): y
[Line 4, Col 7] Token(OPERATOR): =
[Line 4, Col 9] Token(IDENTIFIER): x
[Line 4, Col 11] Token(OPERATOR): <<
[Line 4, Col 14] Token(INT): 1
[Line 4, Col 15] Token(SEPARATOR): ;
[Line 5, Col 1] Token(KEYWORD): int
[Line 5, Col 5] Token(IDENTIFIER): z
[Line 5, Col 7] Token(OPERATOR): =
[Line 5, Col 9] Token(INT): 1
[Line 5, Col 10] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): if
[Line 6, Col 4] Token(SEPARATOR): (
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
[Line 6, Col 13] Token(INT): 1
[Line 6, Col 14] Token(SEPARATOR): )
[Line 6, Col 16] Token(OPERATOR): ==
[Line 6, Col 19] Token(IDENTIFIER): z
[Line 6, Col 20] Token(SEPARATOR): )
[Line 6, Col 22] Token(SEPARATOR): {
[Line 7, Col 5] Token(IDENTIFIER): abc
[Line 7, Col 9] Token(OPERATOR): <<=
[Line 7, Col 13] Token(INT): 1
[Line 7, Col 14] Token(SEPARATOR): ;
[Line 8, Col 5] Token(KEYWORD): exit
[Line 8, Col 9] Token(SEPARATOR): (
[Line 8, Col 10] Token(IDENTIFIER): abc
[Line 8, Col 13] Token(SEPARATOR): )
[Line 8, Col 14] Token(SEPARATOR): ;
[Line 9, Col 1] Token(SEPARATOR): }
[Line 10, Col 1] Token(KEYWORD): exit
[Line 10, Col 5] Token(SEPARATOR): (
[Line 10, Col 6] Token(IDENTIFIER): abc
[Line 10, Col 9] Token(SEPARATOR): )
[Line 10, Col 10] Token(SEPARATOR): ;
[Line 11, Col 1] Token(KEYWORD): exit
[Line 11, Col 5] Token(SEPARATOR): (
[Line 11, Col 6] Token(INT): 4096
[Line 12, Col 1] Token(SEPARATOR): )
[Line 12, Col 2] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x5cd3809629d0, current now = 0x5cd3809629d0
DEBUG LINK: linked stmt=0x5cd380962a70, current now = 0x5cd380962a70
DEBUG LINK: linked stmt=0x5cd380962b90, current now = 0x5cd380962b90
DEBUG LINK: linked stmt=0x5cd380962c60, current now = 0x5cd380962c60
DEBUG LINK: linked stmt=0x5cd380962c30, current now = 0x5cd380962c30
After parse_expression - condition: Node type 0, int_val=0
Condition parsed. Current token: )
Then block parsed. Current token: exit
DEBUG IF_SUBTREE: if_node=0x5cd3809630c0, cond=0x5cd380962dd0, then_block=0x5cd380962d70, then_block->right=(nil)
DEBUG LINK: linked stmt=0x5cd3809630c0, current now = 0x5cd3809630c0
DEBUG LINK: linked stmt=0x5cd380963140, current now = 0x5cd380963140
DEBUG LINK: linked stmt=0x5cd380963170, current now = 0x5cd380963170

--- Syntax Tree ---
PROGRAM
  VAR_DECL: abc
    LITERAL_INT: 12
  VAR_DECL: x
    LITERAL_INT: 1
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 12
  VAR_DECL: z
    LITERAL_INT: 1
  IF_STATEMENT
    CONDITION:
      LITERAL_INT: 0
      BLOCK {
        ASSIGNMENT: =
          IDENTIFIER: abc
        EXIT_CALL
          LITERAL_INT: 12
      } // END BLOCK
  EXIT_CALL
    LITERAL_INT: 12
  EXIT_CALL
    LITERAL_INT: 4096
Compilation successful. Output: generated

Exiting
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test8.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = a at line 1 and col 5
Found character = b at line 1 and col 6
Found character = c at line 1 and col 7
[Line 1, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 1 and col 8
[Line 1, Col 9] Token(OPERATOR): =
Found whitespace at line 1 and col 10
Found number = 12 at line 1 and col 11
[Line 1, Col 11] Token(INT): 12
Found Semicolon at line 1 and col 13
[Line 1, Col 13] Token(SEPARATOR): ;
Found whitespace at line 1 and col 14
Found new line at line 1 and col 15
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = x at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): x
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 1 at line 2 and col 9
[Line 2, Col 9] Token(INT): 1
Found Semicolon at line 2 and col 10
[Line 2, Col 10] Token(SEPARATOR): ;
Found whitespace at line 2 and col 11
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): +=
Found whitespace at line 3 and col 5
Found number = 5 at line 3 and col 6
[Line 3, Col 6] Token(INT): 5
Found Semicolon at line 3 and col 7
[Line 3, Col 7] Token(SEPARATOR): ;
Found whitespace at line 3 and col 8
Found new line at line 3 and col 9
Found keyword 'int' at line 4 and col 1
[Line 4, Col 1] Token(KEYWORD): int
Found whitespace at line 4 and col 4
Found character = y at line 4 and col 5
[Line 4, Col 5] Token(IDENTIFIER): y
Found whitespace at line 4 and col 6
[Line 4, Col 7] Token(OPERATOR): =
Found whitespace at line 4 and col 8
Found character = x at line 4 and col 9
[Line 4, Col 9] Token(IDENTIFIER): x
Found whitespace at line 4 and col 10
[Line 4, Col 11] Token(OPERATOR): <<
Found whitespace at line 4 and col 13
Found number = 1 at line 4 and col 14
[Line 4, Col 14] Token(INT): 1
Found Semicolon at line 4 and col 15
[Line 4, Col 15] Token(SEPARATOR): ;
Found whitespace at line 4 and col 16
Found new line at line 4 and col 17
Found keyword 'int' at line 5 and col 1
[Line 5, Col 1] Token(KEYWORD): int
Found whitespace at line 5 and col 4
Found character = z at line 5 and col 5
[Line 5, Col 5] Token(IDENTIFIER): z
Found whitespace at line 5 and col 6
[Line 5, Col 7] Token(OPERATOR): =
Found whitespace at line 5 and col 8
Found number = 1 at line 5 and col 9
[Line 5, Col 9] Token(INT): 1
Found Semicolon at line 5 and col 10
[Line 5, Col 10] Token(SEPARATOR): ;
Found whitespace at line 5 and col 11
Found new line at line 5 and col 12
Found keyword 'if' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): if
Found whitespace at line 6 and col 3
Found OPEN_PARENTHESIS ( at line 6 and col 4
[Line 6, Col 4] Token(SEPARATOR): (
Found character = y at line 6 and col 5
[Line 6, Col 5] Token(IDENTIFIER): y
Found CLOSED_PARENTHESIS ) at line 6 and col 6
[Line 6, Col 6] Token(SEPARATOR): )
Found whitespace at line 6 and col 7
Found OPEN_PARENTHESIS { at line 6 and col 8
[Line 6, Col 8] Token(SEPARATOR): {
Found whitespace at line 6 and col 9
Found new line at line 6 and col 10
Found whitespace at line 7 and col 1
Found whitespace at line 7 and col 2
Found whitespace at line 7 and col 3
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
Found character = b at line 7 and col 6
Found character = c at line 7 and col 7
[Line 7, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 7 and col 8
[Line 7, Col 9] Token(OPERATOR): <<=
Found whitespace at line 7 and col 12
Found number = 1 at line 7 and col 13
[Line 7, Col 13] Token(INT): 1
Found Semicolon at line 7 and col 14
[Line 7, Col 14] Token(SEPARATOR): ;
Found whitespace at line 7 and col 15
Found new line at line 7 and col 16
Found whitespace at line 8 and col 1
Found whitespace at line 8 and col 2
Found whitespace at line 8 and col 3
Found whitespace at line 8 and col 4
Found keyword 'exit' at line 8 and col 5
[Line 8, Col 5] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 8 and col 9
[Line 8, Col 9] Token(SEPARATOR): (
Found character = a at line 8 and col 10
Found character = b at line 8 and col 11
Found character = c at line 8 and col 12
[Line 8, Col 10] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 8 and col 13
[Line 8, Col 13] Token(SEPARATOR): )
Found Semicolon at line 8 and col 14
[Line 8, Col 14] Token(SEPARATOR): ;
Found whitespace at line 8 and col 15
Found whitespace at line 8 and col 16
Found new line at line 8 and col 17
Found CLOSED_PARENTHESIS } at line 9 and col 1
[Line 9, Col 1] Token(SEPARATOR): }
Found whitespace at line 9 and col 2
Found whitespace at line 9 and col 3
Found whitespace at line 9 and col 4
Found new line at line 9 and col 5
Found keyword 'exit' at line 10 and col 1
[Line 10, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 10 and col 5
[Line 10, Col 5] Token(SEPARATOR): (
Found character = a at line 10 and col 6
Found character = b at line 10 and col 7
Found character = c at line 10 and col 8
[Line 10, Col 6] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 10 and col 9
[Line 10, Col 9] Token(SEPARATOR): )
Found Semicolon at line 10 and col 10
[Line 10, Col 10] Token(SEPARATOR): ;
Found whitespace at line 10 and col 11
Found whitespace at line 10 and col 12
Found new line at line 10 and col 13
Found keyword 'exit' at line 11 and col 1
[Line 11, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 11 and col 5
[Line 11, Col 5] Token(SEPARATOR): (
Found number = 4096 at line 11 and col 6
[Line 11, Col 6] Token(INT): 4096
Found whitespace at line 11 and col 12
Found new line at line 11 and col 13
Found CLOSED_PARENTHESIS ) at line 12 and col 1
[Line 12, Col 1] Token(SEPARATOR): )
Found Semicolon at line 12 and col 2
[Line 12, Col 2] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): abc
[Line 1, Col 9] Token(OPERATOR): =
[Line 1, Col 11] Token(INT): 12
[Line 1, Col 13] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): x
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 1
[Line 2, Col 10] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): +=
[Line 3, Col 6] Token(INT): 5
[Line 3, Col 7] Token(SEPARATOR): ;
[Line 4, Col 1] Token(KEYWORD): int
[Line 4, Col 5] Token(IDENTIFIER): y
[Line 4, Col 7] Token(OPERATOR): =
[Line 4, Col 9] Token(IDENTIFIER): x
[Line 4, Col 11] Token(OPERATOR): <<
[Line 4, Col 14] Token(INT): 1
[Line 4, Col 15] Token(SEPARATOR): ;
[Line 5, Col 1] Token(KEYWORD): int
[Line 5, Col 5] Token(IDENTIFIER): z
[Line 5, Col 7] Token(OPERATOR): =
[Line 5, Col 9] Token(INT): 1
[Line 5, Col 10] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): if
[Line 6, Col 4] Token(SEPARATOR): (
[Line 6, Col 5] Token(IDENTIFIER): y
[Line 6, Col 6] Token(SEPARATOR): )
[Line 6, Col 8] Token(SEPARATOR): {
[Line 7, Col 5] Token(IDENTIFIER): abc
[Line 7, Col 9] Token(OPERATOR): <<=
[Line 7, Col 13] Token(INT): 1
[Line 7, Col 14] Token(SEPARATOR): ;
[Line 8, Col 5] Token(KEYWORD): exit
[Line 8, Col 9] Token(SEPARATOR): (
[Line 8, Col 10] Token(IDENTIFIER): abc
[Line 8, Col 13] Token(SEPARATOR): )
[Line 8, Col 14] Token(SEPARATOR): ;
[Line 9, Col 1] Token(SEPARATOR): }
[Line 10, Col 1] Token(KEYWORD): exit
[Line 10, Col 5] Token(SEPARATOR): (
[Line 10, Col 6] Token(IDENTIFIER): abc
[Line 10, Col 9] Token(SEPARATOR): )
[Line 10, Col 10] Token(SEPARATOR): ;
[Line 11, Col 1] Token(KEYWORD): exit
[Line 11, Col 5] Token(SEPARATOR): (
[Line 11, Col 6] Token(INT): 4096
[Line 12, Col 1] Token(SEPARATOR): )
[Line 12, Col 2] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x59a39b4528f0, current now = 0x59a39b4528f0
DEBUG LINK: linked stmt=0x59a39b452990, current now = 0x59a39b452990
DEBUG LINK: linked stmt=0x59a39b452ab0, current now = 0x59a39b452ab0
DEBUG LINK: linked stmt=0x59a39b452b80, current now = 0x59a39b452b80
DEBUG LINK: linked stmt=0x59a39b452b50, current now = 0x59a39b452b50
After parse_expression - condition: Node type 0, int_val=12
Condition parsed. Current token: )
Then block parsed. Current token: exit
DEBUG IF_SUBTREE: if_node=0x59a39b452fe0, cond=0x59a39b452c90, then_block=0x59a39b452c40, then_block->right=(nil)
DEBUG LINK: linked stmt=0x59a39b452fe0, current now = 0x59a39b452fe0
DEBUG LINK: linked stmt=0x59a39b453060, current now = 0x59a39b453060
DEBUG LINK: linked stmt=0x59a39b453090, current now = 0x59a39b453090

--- Syntax Tree ---
PROGRAM
  VAR_DECL: abc
    LITERAL_INT: 12
  VAR_DECL: x
    LITERAL_INT: 1
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 12
  VAR_DECL: z
    LITERAL_INT: 1
  IF_STATEMENT
    CONDITION:
      LITERAL_INT: 12
      BLOCK {
        ASSIGNMENT: =
          IDENTIFIER: abc
        EXIT_CALL
          LITERAL_INT: 24
      } // END BLOCK
  EXIT_CALL
    LITERAL_INT: 24
  EXIT_CALL
    LITERAL_INT: 4096
Compilation successful. Output: generated

Exiting
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test8.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = a at line 1 and col 5
Found character = b at line 1 and col 6
Found character = c at line 1 and col 7
[Line 1, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 1 and col 8
[Line 1, Col 9] Token(OPERATOR): =
Found whitespace at line 1 and col 10
Found number = 12 at line 1 and col 11
[Line 1, Col 11] Token(INT): 12
Found Semicolon at line 1 and col 13
[Line 1, Col 13] Token(SEPARATOR): ;
Found whitespace at line 1 and col 14
Found new line at line 1 and col 15
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = x at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): x
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 1 at line 2 and col 9
[Line 2, Col 9] Token(INT): 1
Found Semicolon at line 2 and col 10
[Line 2, Col 10] Token(SEPARATOR): ;
Found whitespace at line 2 and col 11
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): +=
Found whitespace at line 3 and col 5
Found number = 5 at line 3 and col 6
[Line 3, Col 6] Token(INT): 5
Found Semicolon at line 3 and col 7
[Line 3, Col 7] Token(SEPARATOR): ;
Found whitespace at line 3 and col 8
Found new line at line 3 and col 9
Found keyword 'int' at line 4 and col 1
[Line 4, Col 1] Token(KEYWORD): int
Found whitespace at line 4 and col 4
Found character = y at line 4 and col 5
[Line 4, Col 5] Token(IDENTIFIER): y
Found whitespace at line 4 and col 6
[Line 4, Col 7] Token(OPERATOR): =
Found whitespace at line 4 and col 8
Found character = x at line 4 and col 9
[Line 4, Col 9] Token(IDENTIFIER): x
Found whitespace at line 4 and col 10
[Line 4, Col 11] Token(OPERATOR): <<
Found whitespace at line 4 and col 13
Found number = 1 at line 4 and col 14
[Line 4, Col 14] Token(INT): 1
Found Semicolon at line 4 and col 15
[Line 4, Col 15] Token(SEPARATOR): ;
Found whitespace at line 4 and col 16
Found new line at line 4 and col 17
Found keyword 'int' at line 5 and col 1
[Line 5, Col 1] Token(KEYWORD): int
Found whitespace at line 5 and col 4
Found character = z at line 5 and col 5
[Line 5, Col 5] Token(IDENTIFIER): z
Found whitespace at line 5 and col 6
[Line 5, Col 7] Token(OPERATOR): =
Found whitespace at line 5 and col 8
Found number = 1 at line 5 and col 9
[Line 5, Col 9] Token(INT): 1
Found Semicolon at line 5 and col 10
[Line 5, Col 10] Token(SEPARATOR): ;
Found whitespace at line 5 and col 11
Found new line at line 5 and col 12
Found keyword 'if' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): if
Found whitespace at line 6 and col 3
Found OPEN_PARENTHESIS ( at line 6 and col 4
[Line 6, Col 4] Token(SEPARATOR): (
Found character = y at line 6 and col 5
[Line 6, Col 5] Token(IDENTIFIER): y
[Line 6, Col 6] Token(OPERATOR): -
Found number = 12 at line 6 and col 7
[Line 6, Col 7] Token(INT): 12
Found CLOSED_PARENTHESIS ) at line 6 and col 9
[Line 6, Col 9] Token(SEPARATOR): )
Found whitespace at line 6 and col 10
Found OPEN_PARENTHESIS { at line 6 and col 11
[Line 6, Col 11] Token(SEPARATOR): {
Found whitespace at line 6 and col 12
Found new line at line 6 and col 13
Found whitespace at line 7 and col 1
Found whitespace at line 7 and col 2
Found whitespace at line 7 and col 3
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
Found character = b at line 7 and col 6
Found character = c at line 7 and col 7
[Line 7, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 7 and col 8
[Line 7, Col 9] Token(OPERATOR): <<=
Found whitespace at line 7 and col 12
Found number = 1 at line 7 and col 13
[Line 7, Col 13] Token(INT): 1
Found Semicolon at line 7 and col 14
[Line 7, Col 14] Token(SEPARATOR): ;
Found whitespace at line 7 and col 15
Found new line at line 7 and col 16
Found whitespace at line 8 and col 1
Found whitespace at line 8 and col 2
Found whitespace at line 8 and col 3
Found whitespace at line 8 and col 4
Found keyword 'exit' at line 8 and col 5
[Line 8, Col 5] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 8 and col 9
[Line 8, Col 9] Token(SEPARATOR): (
Found character = a at line 8 and col 10
Found character = b at line 8 and col 11
Found character = c at line 8 and col 12
[Line 8, Col 10] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 8 and col 13
[Line 8, Col 13] Token(SEPARATOR): )
Found Semicolon at line 8 and col 14
[Line 8, Col 14] Token(SEPARATOR): ;
Found whitespace at line 8 and col 15
Found whitespace at line 8 and col 16
Found new line at line 8 and col 17
Found CLOSED_PARENTHESIS } at line 9 and col 1
[Line 9, Col 1] Token(SEPARATOR): }
Found whitespace at line 9 and col 2
Found whitespace at line 9 and col 3
Found whitespace at line 9 and col 4
Found new line at line 9 and col 5
Found keyword 'exit' at line 10 and col 1
[Line 10, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 10 and col 5
[Line 10, Col 5] Token(SEPARATOR): (
Found character = a at line 10 and col 6
Found character = b at line 10 and col 7
Found character = c at line 10 and col 8
[Line 10, Col 6] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 10 and col 9
[Line 10, Col 9] Token(SEPARATOR): )
Found Semicolon at line 10 and col 10
[Line 10, Col 10] Token(SEPARATOR): ;
Found whitespace at line 10 and col 11
Found whitespace at line 10 and col 12
Found new line at line 10 and col 13
Found keyword 'exit' at line 11 and col 1
[Line 11, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 11 and col 5
[Line 11, Col 5] Token(SEPARATOR): (
Found number = 4096 at line 11 and col 6
[Line 11, Col 6] Token(INT): 4096
Found whitespace at line 11 and col 12
Found new line at line 11 and col 13
Found CLOSED_PARENTHESIS ) at line 12 and col 1
[Line 12, Col 1] Token(SEPARATOR): )
Found Semicolon at line 12 and col 2
[Line 12, Col 2] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): abc
[Line 1, Col 9] Token(OPERATOR): =
[Line 1, Col 11] Token(INT): 12
[Line 1, Col 13] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): x
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 1
[Line 2, Col 10] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): +=
[Line 3, Col 6] Token(INT): 5
[Line 3, Col 7] Token(SEPARATOR): ;
[Line 4, Col 1] Token(KEYWORD): int
[Line 4, Col 5] Token(IDENTIFIER): y
[Line 4, Col 7] Token(OPERATOR): =
[Line 4, Col 9] Token(IDENTIFIER): x
[Line 4, Col 11] Token(OPERATOR): <<
[Line 4, Col 14] Token(INT): 1
[Line 4, Col 15] Token(SEPARATOR): ;
[Line 5, Col 1] Token(KEYWORD): int
[Line 5, Col 5] Token(IDENTIFIER): z
[Line 5, Col 7] Token(OPERATOR): =
[Line 5, Col 9] Token(INT): 1
[Line 5, Col 10] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): if
[Line 6, Col 4] Token(SEPARATOR): (
[Line 6, Col 5] Token(IDENTIFIER): y
[Line 6, Col 6] Token(OPERATOR): -
[Line 6, Col 7] Token(INT): 12
[Line 6, Col 9] Token(SEPARATOR): )
[Line 6, Col 11] Token(SEPARATOR): {
[Line 7, Col 5] Token(IDENTIFIER): abc
[Line 7, Col 9] Token(OPERATOR): <<=
[Line 7, Col 13] Token(INT): 1
[Line 7, Col 14] Token(SEPARATOR): ;
[Line 8, Col 5] Token(KEYWORD): exit
[Line 8, Col 9] Token(SEPARATOR): (
[Line 8, Col 10] Token(IDENTIFIER): abc
[Line 8, Col 13] Token(SEPARATOR): )
[Line 8, Col 14] Token(SEPARATOR): ;
[Line 9, Col 1] Token(SEPARATOR): }
[Line 10, Col 1] Token(KEYWORD): exit
[Line 10, Col 5] Token(SEPARATOR): (
[Line 10, Col 6] Token(IDENTIFIER): abc
[Line 10, Col 9] Token(SEPARATOR): )
[Line 10, Col 10] Token(SEPARATOR): ;
[Line 11, Col 1] Token(KEYWORD): exit
[Line 11, Col 5] Token(SEPARATOR): (
[Line 11, Col 6] Token(INT): 4096
[Line 12, Col 1] Token(SEPARATOR): )
[Line 12, Col 2] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x5fc158ca2910, current now = 0x5fc158ca2910
DEBUG LINK: linked stmt=0x5fc158ca29b0, current now = 0x5fc158ca29b0
DEBUG LINK: linked stmt=0x5fc158ca2ad0, current now = 0x5fc158ca2ad0
DEBUG LINK: linked stmt=0x5fc158ca2ba0, current now = 0x5fc158ca2ba0
DEBUG LINK: linked stmt=0x5fc158ca2b70, current now = 0x5fc158ca2b70
After parse_expression - condition: Node type 0, int_val=0
Condition parsed. Current token: )
Then block parsed. Current token: exit
DEBUG IF_SUBTREE: if_node=0x5fc158ca3000, cond=0x5fc158ca2d10, then_block=0x5fc158ca2ce0, then_block->right=(nil)
DEBUG LINK: linked stmt=0x5fc158ca3000, current now = 0x5fc158ca3000
DEBUG LINK: linked stmt=0x5fc158ca3080, current now = 0x5fc158ca3080
DEBUG LINK: linked stmt=0x5fc158ca30b0, current now = 0x5fc158ca30b0

--- Syntax Tree ---
PROGRAM
  VAR_DECL: abc
    LITERAL_INT: 12
  VAR_DECL: x
    LITERAL_INT: 1
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 12
  VAR_DECL: z
    LITERAL_INT: 1
  IF_STATEMENT
    CONDITION:
      LITERAL_INT: 0
      BLOCK {
        ASSIGNMENT: =
          IDENTIFIER: abc
        EXIT_CALL
          LITERAL_INT: 12
      } // END BLOCK
  EXIT_CALL
    LITERAL_INT: 12
  EXIT_CALL
    LITERAL_INT: 4096
Compilation successful. Output: generated

Exiting
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test8.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = a at line 1 and col 5
Found character = b at line 1 and col 6
Found character = c at line 1 and col 7
[Line 1, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 1 and col 8
[Line 1, Col 9] Token(OPERATOR): =
Found whitespace at line 1 and col 10
Found number = 12 at line 1 and col 11
[Line 1, Col 11] Token(INT): 12
Found Semicolon at line 1 and col 13
[Line 1, Col 13] Token(SEPARATOR): ;
Found whitespace at line 1 and col 14
Found new line at line 1 and col 15
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = x at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): x
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 1 at line 2 and col 9
[Line 2, Col 9] Token(INT): 1
Found Semicolon at line 2 and col 10
[Line 2, Col 10] Token(SEPARATOR): ;
Found whitespace at line 2 and col 11
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): +=
Found whitespace at line 3 and col 5
Found number = 5 at line 3 and col 6
[Line 3, Col 6] Token(INT): 5
Found Semicolon at line 3 and col 7
[Line 3, Col 7] Token(SEPARATOR): ;
Found whitespace at line 3 and col 8
Found new line at line 3 and col 9
Found keyword 'int' at line 4 and col 1
[Line 4, Col 1] Token(KEYWORD): int
Found whitespace at line 4 and col 4
Found character = y at line 4 and col 5
[Line 4, Col 5] Token(IDENTIFIER): y
Found whitespace at line 4 and col 6
[Line 4, Col 7] Token(OPERATOR): =
Found whitespace at line 4 and col 8
Found character = x at line 4 and col 9
[Line 4, Col 9] Token(IDENTIFIER): x
Found whitespace at line 4 and col 10
[Line 4, Col 11] Token(OPERATOR): <<
Found whitespace at line 4 and col 13
Found number = 1 at line 4 and col 14
[Line 4, Col 14] Token(INT): 1
Found Semicolon at line 4 and col 15
[Line 4, Col 15] Token(SEPARATOR): ;
Found whitespace at line 4 and col 16
Found new line at line 4 and col 17
Found keyword 'int' at line 5 and col 1
[Line 5, Col 1] Token(KEYWORD): int
Found whitespace at line 5 and col 4
Found character = z at line 5 and col 5
[Line 5, Col 5] Token(IDENTIFIER): z
Found whitespace at line 5 and col 6
[Line 5, Col 7] Token(OPERATOR): =
Found whitespace at line 5 and col 8
Found number = 1 at line 5 and col 9
[Line 5, Col 9] Token(INT): 1
Found Semicolon at line 5 and col 10
[Line 5, Col 10] Token(SEPARATOR): ;
Found whitespace at line 5 and col 11
Found new line at line 5 and col 12
Found keyword 'if' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): if
Found whitespace at line 6 and col 3
Found OPEN_PARENTHESIS ( at line 6 and col 4
[Line 6, Col 4] Token(SEPARATOR): (
Found character = y at line 6 and col 5
[Line 6, Col 5] Token(IDENTIFIER): y
[Line 6, Col 6] Token(OPERATOR): -
Found number = 12 at line 6 and col 7
[Line 6, Col 7] Token(INT): 12
Found CLOSED_PARENTHESIS ) at line 6 and col 9
[Line 6, Col 9] Token(SEPARATOR): )
Found whitespace at line 6 and col 10
Found OPEN_PARENTHESIS { at line 6 and col 11
[Line 6, Col 11] Token(SEPARATOR): {
Found whitespace at line 6 and col 12
Found new line at line 6 and col 13
Found whitespace at line 7 and col 1
Found whitespace at line 7 and col 2
Found whitespace at line 7 and col 3
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
Found character = b at line 7 and col 6
Found character = c at line 7 and col 7
[Line 7, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 7 and col 8
[Line 7, Col 9] Token(OPERATOR): <<=
Found whitespace at line 7 and col 12
Found number = 1 at line 7 and col 13
[Line 7, Col 13] Token(INT): 1
Found Semicolon at line 7 and col 14
[Line 7, Col 14] Token(SEPARATOR): ;
Found whitespace at line 7 and col 15
Found new line at line 7 and col 16
Found whitespace at line 8 and col 1
Found whitespace at line 8 and col 2
Found whitespace at line 8 and col 3
Found whitespace at line 8 and col 4
Found keyword 'exit' at line 8 and col 5
[Line 8, Col 5] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 8 and col 9
[Line 8, Col 9] Token(SEPARATOR): (
Found character = a at line 8 and col 10
Found character = b at line 8 and col 11
Found character = c at line 8 and col 12
[Line 8, Col 10] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 8 and col 13
[Line 8, Col 13] Token(SEPARATOR): )
Found Semicolon at line 8 and col 14
[Line 8, Col 14] Token(SEPARATOR): ;
Found whitespace at line 8 and col 15
Found whitespace at line 8 and col 16
Found new line at line 8 and col 17
Found CLOSED_PARENTHESIS } at line 9 and col 1
[Line 9, Col 1] Token(SEPARATOR): }
Found whitespace at line 9 and col 2
Found whitespace at line 9 and col 3
Found whitespace at line 9 and col 4
Found new line at line 9 and col 5
Found whitespace at line 10 and col 1
Found new line at line 10 and col 2
Found keyword 'exit' at line 11 and col 1
[Line 11, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 11 and col 5
[Line 11, Col 5] Token(SEPARATOR): (
Found number = 4096 at line 11 and col 6
[Line 11, Col 6] Token(INT): 4096
Found whitespace at line 11 and col 12
Found new line at line 11 and col 13
Found CLOSED_PARENTHESIS ) at line 12 and col 1
[Line 12, Col 1] Token(SEPARATOR): )
Found Semicolon at line 12 and col 2
[Line 12, Col 2] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): abc
[Line 1, Col 9] Token(OPERATOR): =
[Line 1, Col 11] Token(INT): 12
[Line 1, Col 13] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): x
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 1
[Line 2, Col 10] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): +=
[Line 3, Col 6] Token(INT): 5
[Line 3, Col 7] Token(SEPARATOR): ;
[Line 4, Col 1] Token(KEYWORD): int
[Line 4, Col 5] Token(IDENTIFIER): y
[Line 4, Col 7] Token(OPERATOR): =
[Line 4, Col 9] Token(IDENTIFIER): x
[Line 4, Col 11] Token(OPERATOR): <<
[Line 4, Col 14] Token(INT): 1
[Line 4, Col 15] Token(SEPARATOR): ;
[Line 5, Col 1] Token(KEYWORD): int
[Line 5, Col 5] Token(IDENTIFIER): z
[Line 5, Col 7] Token(OPERATOR): =
[Line 5, Col 9] Token(INT): 1
[Line 5, Col 10] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): if
[Line 6, Col 4] Token(SEPARATOR): (
[Line 6, Col 5] Token(IDENTIFIER): y
[Line 6, Col 6] Token(OPERATOR): -
[Line 6, Col 7] Token(INT): 12
[Line 6, Col 9] Token(SEPARATOR): )
[Line 6, Col 11] Token(SEPARATOR): {
[Line 7, Col 5] Token(IDENTIFIER): abc
[Line 7, Col 9] Token(OPERATOR): <<=
[Line 7, Col 13] Token(INT): 1
[Line 7, Col 14] Token(SEPARATOR): ;
[Line 8, Col 5] Token(KEYWORD): exit
[Line 8, Col 9] Token(SEPARATOR): (
[Line 8, Col 10] Token(IDENTIFIER): abc
[Line 8, Col 13] Token(SEPARATOR): )
[Line 8, Col 14] Token(SEPARATOR): ;
[Line 9, Col 1] Token(SEPARATOR): }
[Line 11, Col 1] Token(KEYWORD): exit
[Line 11, Col 5] Token(SEPARATOR): (
[Line 11, Col 6] Token(INT): 4096
[Line 12, Col 1] Token(SEPARATOR): )
[Line 12, Col 2] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x5a04a60c9870, current now = 0x5a04a60c9870
DEBUG LINK: linked stmt=0x5a04a60c9910, current now = 0x5a04a60c9910
DEBUG LINK: linked stmt=0x5a04a60c9a30, current now = 0x5a04a60c9a30
DEBUG LINK: linked stmt=0x5a04a60c9b00, current now = 0x5a04a60c9b00
DEBUG LINK: linked stmt=0x5a04a60c9ad0, current now = 0x5a04a60c9ad0
After parse_expression - condition: Node type 0, int_val=0
Condition parsed. Current token: )
Then block parsed. Current token: exit
DEBUG IF_SUBTREE: if_node=0x5a04a60c9f60, cond=0x5a04a60c9c70, then_block=0x5a04a60c9c40, then_block->right=(nil)
DEBUG LINK: linked stmt=0x5a04a60c9f60, current now = 0x5a04a60c9f60
DEBUG LINK: linked stmt=0x5a04a60c9fe0, current now = 0x5a04a60c9fe0

--- Syntax Tree ---
PROGRAM
  VAR_DECL: abc
    LITERAL_INT: 12
  VAR_DECL: x
    LITERAL_INT: 1
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 12
  VAR_DECL: z
    LITERAL_INT: 1
  IF_STATEMENT
    CONDITION:
      LITERAL_INT: 0
      BLOCK {
        ASSIGNMENT: =
          IDENTIFIER: abc
        EXIT_CALL
          LITERAL_INT: 12
      } // END BLOCK
  EXIT_CALL
    LITERAL_INT: 4096
Compilation successful. Output: generated

Exiting
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test8.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = a at line 1 and col 5
Found character = b at line 1 and col 6
Found character = c at line 1 and col 7
[Line 1, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 1 and col 8
[Line 1, Col 9] Token(OPERATOR): =
Found whitespace at line 1 and col 10
Found number = 12 at line 1 and col 11
[Line 1, Col 11] Token(INT): 12
Found Semicolon at line 1 and col 13
[Line 1, Col 13] Token(SEPARATOR): ;
Found whitespace at line 1 and col 14
Found new line at line 1 and col 15
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = x at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): x
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 1 at line 2 and col 9
[Line 2, Col 9] Token(INT): 1
Found Semicolon at line 2 and col 10
[Line 2, Col 10] Token(SEPARATOR): ;
Found whitespace at line 2 and col 11
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): +=
Found whitespace at line 3 and col 5
Found number = 5 at line 3 and col 6
[Line 3, Col 6] Token(INT): 5
Found Semicolon at line 3 and col 7
[Line 3, Col 7] Token(SEPARATOR): ;
Found whitespace at line 3 and col 8
Found new line at line 3 and col 9
Found keyword 'int' at line 4 and col 1
[Line 4, Col 1] Token(KEYWORD): int
Found whitespace at line 4 and col 4
Found character = y at line 4 and col 5
[Line 4, Col 5] Token(IDENTIFIER): y
Found whitespace at line 4 and col 6
[Line 4, Col 7] Token(OPERATOR): =
Found whitespace at line 4 and col 8
Found character = x at line 4 and col 9
[Line 4, Col 9] Token(IDENTIFIER): x
Found whitespace at line 4 and col 10
[Line 4, Col 11] Token(OPERATOR): <<
Found whitespace at line 4 and col 13
Found number = 1 at line 4 and col 14
[Line 4, Col 14] Token(INT): 1
Found Semicolon at line 4 and col 15
[Line 4, Col 15] Token(SEPARATOR): ;
Found whitespace at line 4 and col 16
Found new line at line 4 and col 17
Found keyword 'int' at line 5 and col 1
[Line 5, Col 1] Token(KEYWORD): int
Found whitespace at line 5 and col 4
Found character = z at line 5 and col 5
[Line 5, Col 5] Token(IDENTIFIER): z
Found whitespace at line 5 and col 6
[Line 5, Col 7] Token(OPERATOR): =
Found whitespace at line 5 and col 8
Found number = 1 at line 5 and col 9
[Line 5, Col 9] Token(INT): 1
Found Semicolon at line 5 and col 10
[Line 5, Col 10] Token(SEPARATOR): ;
Found whitespace at line 5 and col 11
Found new line at line 5 and col 12
Found keyword 'if' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): if
Found whitespace at line 6 and col 3
Found OPEN_PARENTHESIS ( at line 6 and col 4
[Line 6, Col 4] Token(SEPARATOR): (
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = y at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
Found number = 5 at line 6 and col 8
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
Found number = 1 at line 6 and col 11
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
Found number = 1 at line 6 and col 13
[Line 6, Col 13] Token(INT): 1
Found CLOSED_PARENTHESIS ) at line 6 and col 14
[Line 6, Col 14] Token(SEPARATOR): )
Found whitespace at line 6 and col 15
[Line 6, Col 16] Token(OPERATOR): -
Found whitespace at line 6 and col 17
Found number = 6 at line 6 and col 18
[Line 6, Col 18] Token(INT): 6
Found whitespace at line 6 and col 19
[Line 6, Col 20] Token(OPERATOR): ==
Found whitespace at line 6 and col 22
Found character = z at line 6 and col 23
[Line 6, Col 23] Token(IDENTIFIER): z
Found CLOSED_PARENTHESIS ) at line 6 and col 24
[Line 6, Col 24] Token(SEPARATOR): )
Found whitespace at line 6 and col 25
Found OPEN_PARENTHESIS { at line 6 and col 26
[Line 6, Col 26] Token(SEPARATOR): {
Found whitespace at line 6 and col 27
Found new line at line 6 and col 28
Found whitespace at line 7 and col 1
Found whitespace at line 7 and col 2
Found whitespace at line 7 and col 3
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
Found character = b at line 7 and col 6
Found character = c at line 7 and col 7
[Line 7, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 7 and col 8
[Line 7, Col 9] Token(OPERATOR): <<=
Found whitespace at line 7 and col 12
Found number = 1 at line 7 and col 13
[Line 7, Col 13] Token(INT): 1
Found Semicolon at line 7 and col 14
[Line 7, Col 14] Token(SEPARATOR): ;
Found whitespace at line 7 and col 15
Found new line at line 7 and col 16
Found whitespace at line 8 and col 1
Found whitespace at line 8 and col 2
Found whitespace at line 8 and col 3
Found whitespace at line 8 and col 4
Found keyword 'exit' at line 8 and col 5
[Line 8, Col 5] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 8 and col 9
[Line 8, Col 9] Token(SEPARATOR): (
Found character = a at line 8 and col 10
Found character = b at line 8 and col 11
Found character = c at line 8 and col 12
[Line 8, Col 10] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 8 and col 13
[Line 8, Col 13] Token(SEPARATOR): )
Found Semicolon at line 8 and col 14
[Line 8, Col 14] Token(SEPARATOR): ;
Found whitespace at line 8 and col 15
Found whitespace at line 8 and col 16
Found new line at line 8 and col 17
Found CLOSED_PARENTHESIS } at line 9 and col 1
[Line 9, Col 1] Token(SEPARATOR): }
Found whitespace at line 9 and col 2
Found whitespace at line 9 and col 3
Found whitespace at line 9 and col 4
Found new line at line 9 and col 5
Found whitespace at line 10 and col 1
Found new line at line 10 and col 2
Found keyword 'exit' at line 11 and col 1
[Line 11, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 11 and col 5
[Line 11, Col 5] Token(SEPARATOR): (
Found number = 4096 at line 11 and col 6
[Line 11, Col 6] Token(INT): 4096
Found whitespace at line 11 and col 12
Found new line at line 11 and col 13
Found CLOSED_PARENTHESIS ) at line 12 and col 1
[Line 12, Col 1] Token(SEPARATOR): )
Found Semicolon at line 12 and col 2
[Line 12, Col 2] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): abc
[Line 1, Col 9] Token(OPERATOR): =
[Line 1, Col 11] Token(INT): 12
[Line 1, Col 13] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): x
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 1
[Line 2, Col 10] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): +=
[Line 3, Col 6] Token(INT): 5
[Line 3, Col 7] Token(SEPARATOR): ;
[Line 4, Col 1] Token(KEYWORD): int
[Line 4, Col 5] Token(IDENTIFIER): y
[Line 4, Col 7] Token(OPERATOR): =
[Line 4, Col 9] Token(IDENTIFIER): x
[Line 4, Col 11] Token(OPERATOR): <<
[Line 4, Col 14] Token(INT): 1
[Line 4, Col 15] Token(SEPARATOR): ;
[Line 5, Col 1] Token(KEYWORD): int
[Line 5, Col 5] Token(IDENTIFIER): z
[Line 5, Col 7] Token(OPERATOR): =
[Line 5, Col 9] Token(INT): 1
[Line 5, Col 10] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): if
[Line 6, Col 4] Token(SEPARATOR): (
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
[Line 6, Col 13] Token(INT): 1
[Line 6, Col 14] Token(SEPARATOR): )
[Line 6, Col 16] Token(OPERATOR): -
[Line 6, Col 18] Token(INT): 6
[Line 6, Col 20] Token(OPERATOR): ==
[Line 6, Col 23] Token(IDENTIFIER): z
[Line 6, Col 24] Token(SEPARATOR): )
[Line 6, Col 26] Token(SEPARATOR): {
[Line 7, Col 5] Token(IDENTIFIER): abc
[Line 7, Col 9] Token(OPERATOR): <<=
[Line 7, Col 13] Token(INT): 1
[Line 7, Col 14] Token(SEPARATOR): ;
[Line 8, Col 5] Token(KEYWORD): exit
[Line 8, Col 9] Token(SEPARATOR): (
[Line 8, Col 10] Token(IDENTIFIER): abc
[Line 8, Col 13] Token(SEPARATOR): )
[Line 8, Col 14] Token(SEPARATOR): ;
[Line 9, Col 1] Token(SEPARATOR): }
[Line 11, Col 1] Token(KEYWORD): exit
[Line 11, Col 5] Token(SEPARATOR): (
[Line 11, Col 6] Token(INT): 4096
[Line 12, Col 1] Token(SEPARATOR): )
[Line 12, Col 2] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x6335b5beb950, current now = 0x6335b5beb950
DEBUG LINK: linked stmt=0x6335b5beb9f0, current now = 0x6335b5beb9f0
DEBUG LINK: linked stmt=0x6335b5bebb10, current now = 0x6335b5bebb10
DEBUG LINK: linked stmt=0x6335b5bebbe0, current now = 0x6335b5bebbe0
DEBUG LINK: linked stmt=0x6335b5bebbb0, current now = 0x6335b5bebbb0
After parse_expression - condition: Node type 0, int_val=1
Condition parsed. Current token: )
Then block parsed. Current token: exit
DEBUG IF_SUBTREE: if_node=0x6335b5bec040, cond=0x6335b5bebca0, then_block=0x6335b5bebd80, then_block->right=(nil)
DEBUG LINK: linked stmt=0x6335b5bec040, current now = 0x6335b5bec040
DEBUG LINK: linked stmt=0x6335b5bec0c0, current now = 0x6335b5bec0c0

--- Syntax Tree ---
PROGRAM
  VAR_DECL: abc
    LITERAL_INT: 12
  VAR_DECL: x
    LITERAL_INT: 1
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 12
  VAR_DECL: z
    LITERAL_INT: 1
  IF_STATEMENT
    CONDITION:
      LITERAL_INT: 1
      BLOCK {
        ASSIGNMENT: =
          IDENTIFIER: abc
        EXIT_CALL
          LITERAL_INT: 24
      } // END BLOCK
  EXIT_CALL
    LITERAL_INT: 4096
Compilation successful. Output: generated

Exiting
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test8.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = a at line 1 and col 5
Found character = b at line 1 and col 6
Found character = c at line 1 and col 7
[Line 1, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 1 and col 8
[Line 1, Col 9] Token(OPERATOR): =
Found whitespace at line 1 and col 10
Found number = 12 at line 1 and col 11
[Line 1, Col 11] Token(INT): 12
Found Semicolon at line 1 and col 13
[Line 1, Col 13] Token(SEPARATOR): ;
Found whitespace at line 1 and col 14
Found new line at line 1 and col 15
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = x at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): x
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 1 at line 2 and col 9
[Line 2, Col 9] Token(INT): 1
Found Semicolon at line 2 and col 10
[Line 2, Col 10] Token(SEPARATOR): ;
Found whitespace at line 2 and col 11
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): +=
Found whitespace at line 3 and col 5
Found number = 5 at line 3 and col 6
[Line 3, Col 6] Token(INT): 5
Found Semicolon at line 3 and col 7
[Line 3, Col 7] Token(SEPARATOR): ;
Found whitespace at line 3 and col 8
Found new line at line 3 and col 9
Found keyword 'int' at line 4 and col 1
[Line 4, Col 1] Token(KEYWORD): int
Found whitespace at line 4 and col 4
Found character = y at line 4 and col 5
[Line 4, Col 5] Token(IDENTIFIER): y
Found whitespace at line 4 and col 6
[Line 4, Col 7] Token(OPERATOR): =
Found whitespace at line 4 and col 8
Found character = x at line 4 and col 9
[Line 4, Col 9] Token(IDENTIFIER): x
Found whitespace at line 4 and col 10
[Line 4, Col 11] Token(OPERATOR): <<
Found whitespace at line 4 and col 13
Found number = 1 at line 4 and col 14
[Line 4, Col 14] Token(INT): 1
Found Semicolon at line 4 and col 15
[Line 4, Col 15] Token(SEPARATOR): ;
Found whitespace at line 4 and col 16
Found new line at line 4 and col 17
Found keyword 'int' at line 5 and col 1
[Line 5, Col 1] Token(KEYWORD): int
Found whitespace at line 5 and col 4
Found character = z at line 5 and col 5
[Line 5, Col 5] Token(IDENTIFIER): z
Found whitespace at line 5 and col 6
[Line 5, Col 7] Token(OPERATOR): =
Found whitespace at line 5 and col 8
Found number = 1 at line 5 and col 9
[Line 5, Col 9] Token(INT): 1
Found Semicolon at line 5 and col 10
[Line 5, Col 10] Token(SEPARATOR): ;
Found whitespace at line 5 and col 11
Found new line at line 5 and col 12
Found keyword 'if' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): if
Found whitespace at line 6 and col 3
Found OPEN_PARENTHESIS ( at line 6 and col 4
[Line 6, Col 4] Token(SEPARATOR): (
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = y at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
Found number = 5 at line 6 and col 8
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
Found number = 1 at line 6 and col 11
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
Found number = 1 at line 6 and col 13
[Line 6, Col 13] Token(INT): 1
Found CLOSED_PARENTHESIS ) at line 6 and col 14
[Line 6, Col 14] Token(SEPARATOR): )
Found whitespace at line 6 and col 15
[Line 6, Col 16] Token(OPERATOR): -
Found whitespace at line 6 and col 17
Found number = 6 at line 6 and col 18
[Line 6, Col 18] Token(INT): 6
Found whitespace at line 6 and col 19
[Line 6, Col 20] Token(OPERATOR): ==
Found whitespace at line 6 and col 22
Found character = z at line 6 and col 23
[Line 6, Col 23] Token(IDENTIFIER): z
Found CLOSED_PARENTHESIS ) at line 6 and col 24
[Line 6, Col 24] Token(SEPARATOR): )
Found whitespace at line 6 and col 25
Found OPEN_PARENTHESIS { at line 6 and col 26
[Line 6, Col 26] Token(SEPARATOR): {
Found whitespace at line 6 and col 27
Found new line at line 6 and col 28
Found whitespace at line 7 and col 1
Found whitespace at line 7 and col 2
Found whitespace at line 7 and col 3
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
Found character = b at line 7 and col 6
Found character = c at line 7 and col 7
[Line 7, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 7 and col 8
[Line 7, Col 9] Token(OPERATOR): <<=
Found whitespace at line 7 and col 12
Found number = 1 at line 7 and col 13
[Line 7, Col 13] Token(INT): 1
Found Semicolon at line 7 and col 14
[Line 7, Col 14] Token(SEPARATOR): ;
Found whitespace at line 7 and col 15
Found new line at line 7 and col 16
Found whitespace at line 8 and col 1
Found whitespace at line 8 and col 2
Found whitespace at line 8 and col 3
Found whitespace at line 8 and col 4
Found keyword 'exit' at line 8 and col 5
[Line 8, Col 5] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 8 and col 9
[Line 8, Col 9] Token(SEPARATOR): (
Found character = a at line 8 and col 10
Found character = b at line 8 and col 11
Found character = c at line 8 and col 12
[Line 8, Col 10] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 8 and col 13
[Line 8, Col 13] Token(SEPARATOR): )
Found Semicolon at line 8 and col 14
[Line 8, Col 14] Token(SEPARATOR): ;
Found whitespace at line 8 and col 15
Found whitespace at line 8 and col 16
Found new line at line 8 and col 17
Found CLOSED_PARENTHESIS } at line 9 and col 1
[Line 9, Col 1] Token(SEPARATOR): }
Found whitespace at line 9 and col 2
Found whitespace at line 9 and col 3
Found whitespace at line 9 and col 4
Found new line at line 9 and col 5
Found whitespace at line 10 and col 1
Found new line at line 10 and col 2
Found keyword 'exit' at line 11 and col 1
[Line 11, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 11 and col 5
[Line 11, Col 5] Token(SEPARATOR): (
Found number = 4096 at line 11 and col 6
[Line 11, Col 6] Token(INT): 4096
Found whitespace at line 11 and col 12
Found new line at line 11 and col 13
Found CLOSED_PARENTHESIS ) at line 12 and col 1
[Line 12, Col 1] Token(SEPARATOR): )
Found Semicolon at line 12 and col 2
[Line 12, Col 2] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): abc
[Line 1, Col 9] Token(OPERATOR): =
[Line 1, Col 11] Token(INT): 12
[Line 1, Col 13] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): x
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 1
[Line 2, Col 10] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): +=
[Line 3, Col 6] Token(INT): 5
[Line 3, Col 7] Token(SEPARATOR): ;
[Line 4, Col 1] Token(KEYWORD): int
[Line 4, Col 5] Token(IDENTIFIER): y
[Line 4, Col 7] Token(OPERATOR): =
[Line 4, Col 9] Token(IDENTIFIER): x
[Line 4, Col 11] Token(OPERATOR): <<
[Line 4, Col 14] Token(INT): 1
[Line 4, Col 15] Token(SEPARATOR): ;
[Line 5, Col 1] Token(KEYWORD): int
[Line 5, Col 5] Token(IDENTIFIER): z
[Line 5, Col 7] Token(OPERATOR): =
[Line 5, Col 9] Token(INT): 1
[Line 5, Col 10] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): if
[Line 6, Col 4] Token(SEPARATOR): (
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
[Line 6, Col 13] Token(INT): 1
[Line 6, Col 14] Token(SEPARATOR): )
[Line 6, Col 16] Token(OPERATOR): -
[Line 6, Col 18] Token(INT): 6
[Line 6, Col 20] Token(OPERATOR): ==
[Line 6, Col 23] Token(IDENTIFIER): z
[Line 6, Col 24] Token(SEPARATOR): )
[Line 6, Col 26] Token(SEPARATOR): {
[Line 7, Col 5] Token(IDENTIFIER): abc
[Line 7, Col 9] Token(OPERATOR): <<=
[Line 7, Col 13] Token(INT): 1
[Line 7, Col 14] Token(SEPARATOR): ;
[Line 8, Col 5] Token(KEYWORD): exit
[Line 8, Col 9] Token(SEPARATOR): (
[Line 8, Col 10] Token(IDENTIFIER): abc
[Line 8, Col 13] Token(SEPARATOR): )
[Line 8, Col 14] Token(SEPARATOR): ;
[Line 9, Col 1] Token(SEPARATOR): }
[Line 11, Col 1] Token(KEYWORD): exit
[Line 11, Col 5] Token(SEPARATOR): (
[Line 11, Col 6] Token(INT): 4096
[Line 12, Col 1] Token(SEPARATOR): )
[Line 12, Col 2] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x562d23bc8950, current now = 0x562d23bc8950
DEBUG LINK: linked stmt=0x562d23bc89f0, current now = 0x562d23bc89f0
DEBUG LINK: linked stmt=0x562d23bc8b10, current now = 0x562d23bc8b10
DEBUG LINK: linked stmt=0x562d23bc8be0, current now = 0x562d23bc8be0
DEBUG LINK: linked stmt=0x562d23bc8bb0, current now = 0x562d23bc8bb0
After parse_expression - condition: Node type 0, int_val=1
Condition parsed. Current token: )
Then block parsed. Current token: exit
DEBUG IF_SUBTREE: if_node=0x562d23bc9040, cond=0x562d23bc8ca0, then_block=0x562d23bc8d80, then_block->right=(nil)
DEBUG LINK: linked stmt=0x562d23bc9040, current now = 0x562d23bc9040
DEBUG LINK: linked stmt=0x562d23bc90c0, current now = 0x562d23bc90c0

--- Syntax Tree ---
PROGRAM
  VAR_DECL: abc
    LITERAL_INT: 12
  VAR_DECL: x
    LITERAL_INT: 1
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 12
  VAR_DECL: z
    LITERAL_INT: 1
  IF_STATEMENT
    CONDITION:
      LITERAL_INT: 1
      BLOCK {
        ASSIGNMENT: =
          IDENTIFIER: abc
        EXIT_CALL
          LITERAL_INT: 24
      } // END BLOCK
  EXIT_CALL
    LITERAL_INT: 4096
Compilation successful. Output: generated

Exiting
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test7.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = a at line 1 and col 5
[Line 1, Col 5] Token(IDENTIFIER): a
Found whitespace at line 1 and col 6
[Line 1, Col 7] Token(OPERATOR): =
Found whitespace at line 1 and col 8
Found number = 40 at line 1 and col 9
[Line 1, Col 9] Token(INT): 40
Found Semicolon at line 1 and col 11
[Line 1, Col 11] Token(SEPARATOR): ;
Found whitespace at line 1 and col 12
Found new line at line 1 and col 13
Found OPEN_PARENTHESIS { at line 2 and col 1
[Line 2, Col 1] Token(SEPARATOR): {
Found whitespace at line 2 and col 2
Found new line at line 2 and col 3
Found whitespace at line 3 and col 1
Found whitespace at line 3 and col 2
Found whitespace at line 3 and col 3
Found whitespace at line 3 and col 4
Found keyword 'int' at line 3 and col 5
[Line 3, Col 5] Token(KEYWORD): int
Found whitespace at line 3 and col 8
Found character = a at line 3 and col 9
[Line 3, Col 9] Token(IDENTIFIER): a
Found whitespace at line 3 and col 10
[Line 3, Col 11] Token(OPERATOR): =
Found whitespace at line 3 and col 12
Found character = a at line 3 and col 13
[Line 3, Col 13] Token(IDENTIFIER): a
Found COMMA at line 3 and col 14
[Line 3, Col 14] Token(SEPARATOR): ,
Found whitespace at line 3 and col 15
Found character = x at line 3 and col 16
[Line 3, Col 16] Token(IDENTIFIER): x
Found whitespace at line 3 and col 17
[Line 3, Col 18] Token(OPERATOR): =
Found whitespace at line 3 and col 19
Found number = 3 at line 3 and col 20
[Line 3, Col 20] Token(INT): 3
Found COMMA at line 3 and col 21
[Line 3, Col 21] Token(SEPARATOR): ,
Found whitespace at line 3 and col 22
Found character = y at line 3 and col 23
[Line 3, Col 23] Token(IDENTIFIER): y
Found COMMA at line 3 and col 24
[Line 3, Col 24] Token(SEPARATOR): ,
Found whitespace at line 3 and col 25
Found character = z at line 3 and col 26
[Line 3, Col 26] Token(IDENTIFIER): z
Found Semicolon at line 3 and col 27
[Line 3, Col 27] Token(SEPARATOR): ;
Found whitespace at line 3 and col 28
Found new line at line 3 and col 29
Found whitespace at line 4 and col 1
Found whitespace at line 4 and col 2
Found whitespace at line 4 and col 3
Found whitespace at line 4 and col 4
Found OPEN_PARENTHESIS { at line 4 and col 5
[Line 4, Col 5] Token(SEPARATOR): {
Found whitespace at line 4 and col 6
Found new line at line 4 and col 7
Found whitespace at line 5 and col 1
Found whitespace at line 5 and col 2
Found whitespace at line 5 and col 3
Found whitespace at line 5 and col 4
Found whitespace at line 5 and col 5
Found whitespace at line 5 and col 6
Found whitespace at line 5 and col 7
Found whitespace at line 5 and col 8
Found keyword 'int' at line 5 and col 9
[Line 5, Col 9] Token(KEYWORD): int
Found whitespace at line 5 and col 12
Found character = b at line 5 and col 13
[Line 5, Col 13] Token(IDENTIFIER): b
Found whitespace at line 5 and col 14
[Line 5, Col 15] Token(OPERATOR): =
Found whitespace at line 5 and col 16
Found character = x at line 5 and col 17
[Line 5, Col 17] Token(IDENTIFIER): x
Found Semicolon at line 5 and col 18
[Line 5, Col 18] Token(SEPARATOR): ;
Found whitespace at line 5 and col 19
Found new line at line 5 and col 20
Found whitespace at line 6 and col 1
Found whitespace at line 6 and col 2
Found whitespace at line 6 and col 3
Found whitespace at line 6 and col 4
Found whitespace at line 6 and col 5
Found whitespace at line 6 and col 6
Found whitespace at line 6 and col 7
Found whitespace at line 6 and col 8
Found keyword 'exit' at line 6 and col 9
[Line 6, Col 9] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 6 and col 13
[Line 6, Col 13] Token(SEPARATOR): (
Found character = a at line 6 and col 14
[Line 6, Col 14] Token(IDENTIFIER): a
Found CLOSED_PARENTHESIS ) at line 6 and col 15
[Line 6, Col 15] Token(SEPARATOR): )
Found Semicolon at line 6 and col 16
[Line 6, Col 16] Token(SEPARATOR): ;
Found whitespace at line 6 and col 17
Found new line at line 6 and col 18
Found whitespace at line 7 and col 1
Found whitespace at line 7 and col 2
Found whitespace at line 7 and col 3
Found whitespace at line 7 and col 4
Found CLOSED_PARENTHESIS } at line 7 and col 5
[Line 7, Col 5] Token(SEPARATOR): }
Found whitespace at line 7 and col 6
Found new line at line 7 and col 7
Found CLOSED_PARENTHESIS } at line 8 and col 1
[Line 8, Col 1] Token(SEPARATOR): }
Found whitespace at line 8 and col 2
Found new line at line 8 and col 3
Found keyword 'int' at line 9 and col 1
[Line 9, Col 1] Token(KEYWORD): int
Found whitespace at line 9 and col 4
Found character = x at line 9 and col 5
[Line 9, Col 5] Token(IDENTIFIER): x
Found COMMA at line 9 and col 6
[Line 9, Col 6] Token(SEPARATOR): ,
Found whitespace at line 9 and col 7
Found character = y at line 9 and col 8
[Line 9, Col 8] Token(IDENTIFIER): y
Found COMMA at line 9 and col 9
[Line 9, Col 9] Token(SEPARATOR): ,
Found whitespace at line 9 and col 10
Found character = z at line 9 and col 11
[Line 9, Col 11] Token(IDENTIFIER): z
Found Semicolon at line 9 and col 12
[Line 9, Col 12] Token(SEPARATOR): ;
Found whitespace at line 9 and col 13
Found new line at line 9 and col 14
Found character = x at line 10 and col 1
[Line 10, Col 1] Token(IDENTIFIER): x
Found whitespace at line 10 and col 2
[Line 10, Col 3] Token(OPERATOR): =
Found whitespace at line 10 and col 4
Found number = 4 at line 10 and col 5
[Line 10, Col 5] Token(INT): 4
Found Semicolon at line 10 and col 6
[Line 10, Col 6] Token(SEPARATOR): ;
Found whitespace at line 10 and col 7
Found new line at line 10 and col 8
Found character = y at line 11 and col 1
[Line 11, Col 1] Token(IDENTIFIER): y
Found whitespace at line 11 and col 2
[Line 11, Col 3] Token(OPERATOR): =
Found whitespace at line 11 and col 4
Found number = 5 at line 11 and col 5
[Line 11, Col 5] Token(INT): 5
Found Semicolon at line 11 and col 6
[Line 11, Col 6] Token(SEPARATOR): ;
Found whitespace at line 11 and col 7
Found new line at line 11 and col 8
Found character = a at line 12 and col 1
[Line 12, Col 1] Token(IDENTIFIER): a
Found whitespace at line 12 and col 2
[Line 12, Col 3] Token(OPERATOR): =
Found whitespace at line 12 and col 4
Found number = 8 at line 12 and col 5
[Line 12, Col 5] Token(INT): 8
Found Semicolon at line 12 and col 6
[Line 12, Col 6] Token(SEPARATOR): ;
Found whitespace at line 12 and col 7
Found new line at line 12 and col 8
Found character = z at line 13 and col 1
[Line 13, Col 1] Token(IDENTIFIER): z
Found whitespace at line 13 and col 2
[Line 13, Col 3] Token(OPERATOR): =
Found whitespace at line 13 and col 4
Found number = 7 at line 13 and col 5
[Line 13, Col 5] Token(INT): 7
Found Semicolon at line 13 and col 6
[Line 13, Col 6] Token(SEPARATOR): ;
Found whitespace at line 13 and col 7
Found new line at line 13 and col 8
Found character = z at line 14 and col 1
[Line 14, Col 1] Token(IDENTIFIER): z
Found whitespace at line 14 and col 2
[Line 14, Col 3] Token(OPERATOR): %=
Found whitespace at line 14 and col 5
Found number = 4 at line 14 and col 6
[Line 14, Col 6] Token(INT): 4
Found Semicolon at line 14 and col 7
[Line 14, Col 7] Token(SEPARATOR): ;
Found whitespace at line 14 and col 8
Found new line at line 14 and col 9
Found character = y at line 15 and col 1
[Line 15, Col 1] Token(IDENTIFIER): y
Found whitespace at line 15 and col 2
[Line 15, Col 3] Token(OPERATOR): %=
Found whitespace at line 15 and col 5
Found character = z at line 15 and col 6
[Line 15, Col 6] Token(IDENTIFIER): z
Found Semicolon at line 15 and col 7
[Line 15, Col 7] Token(SEPARATOR): ;
Found whitespace at line 15 and col 8
Found new line at line 15 and col 9
Found character = x at line 16 and col 1
[Line 16, Col 1] Token(IDENTIFIER): x
Found whitespace at line 16 and col 2
[Line 16, Col 3] Token(OPERATOR): %=
Found whitespace at line 16 and col 5
Found character = y at line 16 and col 6
[Line 16, Col 6] Token(IDENTIFIER): y
Found Semicolon at line 16 and col 7
[Line 16, Col 7] Token(SEPARATOR): ;
Found whitespace at line 16 and col 8
Found new line at line 16 and col 9
Found keyword 'exit' at line 17 and col 1
[Line 17, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 17 and col 5
[Line 17, Col 5] Token(SEPARATOR): (
Found character = y at line 17 and col 6
[Line 17, Col 6] Token(IDENTIFIER): y
Found CLOSED_PARENTHESIS ) at line 17 and col 7
[Line 17, Col 7] Token(SEPARATOR): )
Found Semicolon at line 17 and col 8
[Line 17, Col 8] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): a
[Line 1, Col 7] Token(OPERATOR): =
[Line 1, Col 9] Token(INT): 40
[Line 1, Col 11] Token(SEPARATOR): ;
[Line 2, Col 1] Token(SEPARATOR): {
[Line 3, Col 5] Token(KEYWORD): int
[Line 3, Col 9] Token(IDENTIFIER): a
[Line 3, Col 11] Token(OPERATOR): =
[Line 3, Col 13] Token(IDENTIFIER): a
[Line 3, Col 14] Token(SEPARATOR): ,
[Line 3, Col 16] Token(IDENTIFIER): x
[Line 3, Col 18] Token(OPERATOR): =
[Line 3, Col 20] Token(INT): 3
[Line 3, Col 21] Token(SEPARATOR): ,
[Line 3, Col 23] Token(IDENTIFIER): y
[Line 3, Col 24] Token(SEPARATOR): ,
[Line 3, Col 26] Token(IDENTIFIER): z
[Line 3, Col 27] Token(SEPARATOR): ;
[Line 4, Col 5] Token(SEPARATOR): {
[Line 5, Col 9] Token(KEYWORD): int
[Line 5, Col 13] Token(IDENTIFIER): b
[Line 5, Col 15] Token(OPERATOR): =
[Line 5, Col 17] Token(IDENTIFIER): x
[Line 5, Col 18] Token(SEPARATOR): ;
[Line 6, Col 9] Token(KEYWORD): exit
[Line 6, Col 13] Token(SEPARATOR): (
[Line 6, Col 14] Token(IDENTIFIER): a
[Line 6, Col 15] Token(SEPARATOR): )
[Line 6, Col 16] Token(SEPARATOR): ;
[Line 7, Col 5] Token(SEPARATOR): }
[Line 8, Col 1] Token(SEPARATOR): }
[Line 9, Col 1] Token(KEYWORD): int
[Line 9, Col 5] Token(IDENTIFIER): x
[Line 9, Col 6] Token(SEPARATOR): ,
[Line 9, Col 8] Token(IDENTIFIER): y
[Line 9, Col 9] Token(SEPARATOR): ,
[Line 9, Col 11] Token(IDENTIFIER): z
[Line 9, Col 12] Token(SEPARATOR): ;
[Line 10, Col 1] Token(IDENTIFIER): x
[Line 10, Col 3] Token(OPERATOR): =
[Line 10, Col 5] Token(INT): 4
[Line 10, Col 6] Token(SEPARATOR): ;
[Line 11, Col 1] Token(IDENTIFIER): y
[Line 11, Col 3] Token(OPERATOR): =
[Line 11, Col 5] Token(INT): 5
[Line 11, Col 6] Token(SEPARATOR): ;
[Line 12, Col 1] Token(IDENTIFIER): a
[Line 12, Col 3] Token(OPERATOR): =
[Line 12, Col 5] Token(INT): 8
[Line 12, Col 6] Token(SEPARATOR): ;
[Line 13, Col 1] Token(IDENTIFIER): z
[Line 13, Col 3] Token(OPERATOR): =
[Line 13, Col 5] Token(INT): 7
[Line 13, Col 6] Token(SEPARATOR): ;
[Line 14, Col 1] Token(IDENTIFIER): z
[Line 14, Col 3] Token(OPERATOR): %=
[Line 14, Col 6] Token(INT): 4
[Line 14, Col 7] Token(SEPARATOR): ;
[Line 15, Col 1] Token(IDENTIFIER): y
[Line 15, Col 3] Token(OPERATOR): %=
[Line 15, Col 6] Token(IDENTIFIER): z
[Line 15, Col 7] Token(SEPARATOR): ;
[Line 16, Col 1] Token(IDENTIFIER): x
[Line 16, Col 3] Token(OPERATOR): %=
[Line 16, Col 6] Token(IDENTIFIER): y
[Line 16, Col 7] Token(SEPARATOR): ;
[Line 17, Col 1] Token(KEYWORD): exit
[Line 17, Col 5] Token(SEPARATOR): (
[Line 17, Col 6] Token(IDENTIFIER): y
[Line 17, Col 7] Token(SEPARATOR): )
[Line 17, Col 8] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x629c317cc840, current now = 0x629c317cc840
DEBUG LINK: linked stmt=0x629c317cca40, current now = 0x629c317cca40
DEBUG LINK: linked stmt=0x629c317ce8f0, current now = 0x629c317ce9a0
DEBUG LINK: linked stmt=0x629c317cea30, current now = 0x629c317cea30
DEBUG LINK: linked stmt=0x629c317ceae0, current now = 0x629c317ceae0
DEBUG LINK: linked stmt=0x629c317cebb0, current now = 0x629c317cebb0
DEBUG LINK: linked stmt=0x629c317cec80, current now = 0x629c317cec80
DEBUG LINK: linked stmt=0x629c317ceda0, current now = 0x629c317ceda0
DEBUG LINK: linked stmt=0x629c317ceec0, current now = 0x629c317ceec0
DEBUG LINK: linked stmt=0x629c317cefe0, current now = 0x629c317cefe0
DEBUG LINK: linked stmt=0x629c317cf030, current now = 0x629c317cf030

--- Syntax Tree ---
PROGRAM
  VAR_DECL: a
    LITERAL_INT: 40
  BLOCK {
    VAR_DECL: a
      LITERAL_INT: 40
    VAR_DECL: x
      LITERAL_INT: 3
    VAR_DECL: y
    VAR_DECL: z
    BLOCK {
      VAR_DECL: b
        LITERAL_INT: 3
      EXIT_CALL
        LITERAL_INT: 40
    } // END BLOCK
  } // END BLOCK
  VAR_DECL: x
  VAR_DECL: y
  VAR_DECL: z
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: y
  ASSIGNMENT: =
    IDENTIFIER: a
  ASSIGNMENT: =
    IDENTIFIER: z
  ASSIGNMENT: =
    IDENTIFIER: z
  ASSIGNMENT: =
    IDENTIFIER: y
  ASSIGNMENT: =
    IDENTIFIER: x
  EXIT_CALL
    LITERAL_INT: 2
Compilation successful. Output: generated

Exiting
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test6.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = a at line 1 and col 5
[Line 1, Col 5] Token(IDENTIFIER): a
Found whitespace at line 1 and col 6
[Line 1, Col 7] Token(OPERATOR): =
Found whitespace at line 1 and col 8
Found number = 2 at line 1 and col 9
[Line 1, Col 9] Token(INT): 2
Found COMMA at line 1 and col 10
[Line 1, Col 10] Token(SEPARATOR): ,
Found whitespace at line 1 and col 11
Found character = x at line 1 and col 12
[Line 1, Col 12] Token(IDENTIFIER): x
Found whitespace at line 1 and col 13
[Line 1, Col 14] Token(OPERATOR): =
Found whitespace at line 1 and col 15
Found number = 3 at line 1 and col 16
[Line 1, Col 16] Token(INT): 3
Found COMMA at line 1 and col 17
[Line 1, Col 17] Token(SEPARATOR): ,
Found whitespace at line 1 and col 18
Found character = y at line 1 and col 19
[Line 1, Col 19] Token(IDENTIFIER): y
Found COMMA at line 1 and col 20
[Line 1, Col 20] Token(SEPARATOR): ,
Found whitespace at line 1 and col 21
Found character = z at line 1 and col 22
[Line 1, Col 22] Token(IDENTIFIER): z
Found Semicolon at line 1 and col 23
[Line 1, Col 23] Token(SEPARATOR): ;
Found whitespace at line 1 and col 24
Found new line at line 1 and col 25
Found character = x at line 2 and col 1
[Line 2, Col 1] Token(IDENTIFIER): x
Found whitespace at line 2 and col 2
[Line 2, Col 3] Token(OPERATOR): =
Found whitespace at line 2 and col 4
Found number = 4 at line 2 and col 5
[Line 2, Col 5] Token(INT): 4
Found Semicolon at line 2 and col 6
[Line 2, Col 6] Token(SEPARATOR): ;
Found whitespace at line 2 and col 7
Found new line at line 2 and col 8
Found character = y at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): y
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): =
Found whitespace at line 3 and col 4
Found number = 5 at line 3 and col 5
[Line 3, Col 5] Token(INT): 5
Found Semicolon at line 3 and col 6
[Line 3, Col 6] Token(SEPARATOR): ;
Found whitespace at line 3 and col 7
Found new line at line 3 and col 8
Found character = z at line 4 and col 1
[Line 4, Col 1] Token(IDENTIFIER): z
Found whitespace at line 4 and col 2
[Line 4, Col 3] Token(OPERATOR): =
Found whitespace at line 4 and col 4
Found number = 7 at line 4 and col 5
[Line 4, Col 5] Token(INT): 7
Found Semicolon at line 4 and col 6
[Line 4, Col 6] Token(SEPARATOR): ;
Found whitespace at line 4 and col 7
Found new line at line 4 and col 8
Found character = z at line 5 and col 1
[Line 5, Col 1] Token(IDENTIFIER): z
Found whitespace at line 5 and col 2
[Line 5, Col 3] Token(OPERATOR): %=
Found whitespace at line 5 and col 5
Found number = 4 at line 5 and col 6
[Line 5, Col 6] Token(INT): 4
Found Semicolon at line 5 and col 7
[Line 5, Col 7] Token(SEPARATOR): ;
Found whitespace at line 5 and col 8
Found new line at line 5 and col 9
Found character = y at line 6 and col 1
[Line 6, Col 1] Token(IDENTIFIER): y
Found whitespace at line 6 and col 2
[Line 6, Col 3] Token(OPERATOR): %=
Found whitespace at line 6 and col 5
Found character = z at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): z
Found Semicolon at line 6 and col 7
[Line 6, Col 7] Token(SEPARATOR): ;
Found whitespace at line 6 and col 8
Found new line at line 6 and col 9
Found character = x at line 7 and col 1
[Line 7, Col 1] Token(IDENTIFIER): x
Found whitespace at line 7 and col 2
[Line 7, Col 3] Token(OPERATOR): %=
Found whitespace at line 7 and col 5
Found character = y at line 7 and col 6
[Line 7, Col 6] Token(IDENTIFIER): y
Found Semicolon at line 7 and col 7
[Line 7, Col 7] Token(SEPARATOR): ;
Found whitespace at line 7 and col 8
Found new line at line 7 and col 9
Found keyword 'exit' at line 8 and col 1
[Line 8, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 8 and col 5
[Line 8, Col 5] Token(SEPARATOR): (
Found character = y at line 8 and col 6
[Line 8, Col 6] Token(IDENTIFIER): y
[Line 8, Col 7] Token(OPERATOR): *
Found character = z at line 8 and col 8
[Line 8, Col 8] Token(IDENTIFIER): z
Found CLOSED_PARENTHESIS ) at line 8 and col 9
[Line 8, Col 9] Token(SEPARATOR): )
Found Semicolon at line 8 and col 10
[Line 8, Col 10] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): a
[Line 1, Col 7] Token(OPERATOR): =
[Line 1, Col 9] Token(INT): 2
[Line 1, Col 10] Token(SEPARATOR): ,
[Line 1, Col 12] Token(IDENTIFIER): x
[Line 1, Col 14] Token(OPERATOR): =
[Line 1, Col 16] Token(INT): 3
[Line 1, Col 17] Token(SEPARATOR): ,
[Line 1, Col 19] Token(IDENTIFIER): y
[Line 1, Col 20] Token(SEPARATOR): ,
[Line 1, Col 22] Token(IDENTIFIER): z
[Line 1, Col 23] Token(SEPARATOR): ;
[Line 2, Col 1] Token(IDENTIFIER): x
[Line 2, Col 3] Token(OPERATOR): =
[Line 2, Col 5] Token(INT): 4
[Line 2, Col 6] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): y
[Line 3, Col 3] Token(OPERATOR): =
[Line 3, Col 5] Token(INT): 5
[Line 3, Col 6] Token(SEPARATOR): ;
[Line 4, Col 1] Token(IDENTIFIER): z
[Line 4, Col 3] Token(OPERATOR): =
[Line 4, Col 5] Token(INT): 7
[Line 4, Col 6] Token(SEPARATOR): ;
[Line 5, Col 1] Token(IDENTIFIER): z
[Line 5, Col 3] Token(OPERATOR): %=
[Line 5, Col 6] Token(INT): 4
[Line 5, Col 7] Token(SEPARATOR): ;
[Line 6, Col 1] Token(IDENTIFIER): y
[Line 6, Col 3] Token(OPERATOR): %=
[Line 6, Col 6] Token(IDENTIFIER): z
[Line 6, Col 7] Token(SEPARATOR): ;
[Line 7, Col 1] Token(IDENTIFIER): x
[Line 7, Col 3] Token(OPERATOR): %=
[Line 7, Col 6] Token(IDENTIFIER): y
[Line 7, Col 7] Token(SEPARATOR): ;
[Line 8, Col 1] Token(KEYWORD): exit
[Line 8, Col 5] Token(SEPARATOR): (
[Line 8, Col 6] Token(IDENTIFIER): y
[Line 8, Col 7] Token(OPERATOR): *
[Line 8, Col 8] Token(IDENTIFIER): z
[Line 8, Col 9] Token(SEPARATOR): )
[Line 8, Col 10] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x5aec9fc86830, current now = 0x5aec9fc869b0
DEBUG LINK: linked stmt=0x5aec9fc86a80, current now = 0x5aec9fc86a80
DEBUG LINK: linked stmt=0x5aec9fc86b50, current now = 0x5aec9fc86b50
DEBUG LINK: linked stmt=0x5aec9fc86c20, current now = 0x5aec9fc86c20
DEBUG LINK: linked stmt=0x5aec9fc86d40, current now = 0x5aec9fc86d40
DEBUG LINK: linked stmt=0x5aec9fc86e60, current now = 0x5aec9fc86e60
DEBUG LINK: linked stmt=0x5aec9fc86f80, current now = 0x5aec9fc86f80
DEBUG LINK: linked stmt=0x5aec9fc86fd0, current now = 0x5aec9fc86fd0

--- Syntax Tree ---
PROGRAM
  VAR_DECL: a
    LITERAL_INT: 2
  VAR_DECL: x
    LITERAL_INT: 3
  VAR_DECL: y
  VAR_DECL: z
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: y
  ASSIGNMENT: =
    IDENTIFIER: z
  ASSIGNMENT: =
    IDENTIFIER: z
  ASSIGNMENT: =
    IDENTIFIER: y
  ASSIGNMENT: =
    IDENTIFIER: x
  EXIT_CALL
    LITERAL_INT: 6
Compilation successful. Output: generated

Exiting
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test5.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = x at line 1 and col 5
[Line 1, Col 5] Token(IDENTIFIER): x
Found Semicolon at line 1 and col 6
[Line 1, Col 6] Token(SEPARATOR): ;
Found new line at line 1 and col 7
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = a at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): a
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 11 at line 2 and col 9
[Line 2, Col 9] Token(INT): 11
Found Semicolon at line 2 and col 11
[Line 2, Col 11] Token(SEPARATOR): ;
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): =
Found whitespace at line 3 and col 4
Found number = 4 at line 3 and col 5
[Line 3, Col 5] Token(INT): 4
Found Semicolon at line 3 and col 6
[Line 3, Col 6] Token(SEPARATOR): ;
Found new line at line 3 and col 7
Found character = x at line 4 and col 1
[Line 4, Col 1] Token(IDENTIFIER): x
Found whitespace at line 4 and col 2
[Line 4, Col 3] Token(OPERATOR): *=
Found whitespace at line 4 and col 5
Found number = 2 at line 4 and col 6
[Line 4, Col 6] Token(INT): 2
[Line 4, Col 7] Token(OPERATOR): +
Found character = a at line 4 and col 8
[Line 4, Col 8] Token(IDENTIFIER): a
Found Semicolon at line 4 and col 9
[Line 4, Col 9] Token(SEPARATOR): ;
Found whitespace at line 4 and col 10
Found whitespace at line 4 and col 11
Found whitespace at line 4 and col 12
Found new line at line 4 and col 13
Found character = x at line 5 and col 1
[Line 5, Col 1] Token(IDENTIFIER): x
Found whitespace at line 5 and col 2
[Line 5, Col 3] Token(OPERATOR): +=
Found whitespace at line 5 and col 5
Found character = a at line 5 and col 6
[Line 5, Col 6] Token(IDENTIFIER): a
Found whitespace at line 5 and col 7
[Line 5, Col 8] Token(OPERATOR): +
Found whitespace at line 5 and col 9
Found character = a at line 5 and col 10
[Line 5, Col 10] Token(IDENTIFIER): a
[Line 5, Col 11] Token(OPERATOR): *
Found number = 2 at line 5 and col 12
[Line 5, Col 12] Token(INT): 2
Found Semicolon at line 5 and col 13
[Line 5, Col 13] Token(SEPARATOR): ;
Found new line at line 5 and col 14
Found keyword 'exit' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = x at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): x
Found CLOSED_PARENTHESIS ) at line 6 and col 7
[Line 6, Col 7] Token(SEPARATOR): )
Found Semicolon at line 6 and col 8
[Line 6, Col 8] Token(SEPARATOR): ;
Found new line at line 6 and col 9
Found character = a at line 7 and col 1
[Line 7, Col 1] Token(IDENTIFIER): a
Found whitespace at line 7 and col 2
[Line 7, Col 3] Token(OPERATOR): =
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
[Line 7, Col 5] Token(IDENTIFIER): a
[Line 7, Col 6] Token(OPERATOR): +
Found number = 1 at line 7 and col 7
[Line 7, Col 7] Token(INT): 1
Found Semicolon at line 7 and col 8
[Line 7, Col 8] Token(SEPARATOR): ;
Found new line at line 7 and col 9
Found character = x at line 8 and col 1
[Line 8, Col 1] Token(IDENTIFIER): x
Found whitespace at line 8 and col 2
[Line 8, Col 3] Token(OPERATOR): =
Found whitespace at line 8 and col 4
Found character = a at line 8 and col 5
[Line 8, Col 5] Token(IDENTIFIER): a
[Line 8, Col 6] Token(OPERATOR): +
Found character = a at line 8 and col 7
[Line 8, Col 7] Token(IDENTIFIER): a
[Line 8, Col 8] Token(OPERATOR): *
Found number = 5 at line 8 and col 9
[Line 8, Col 9] Token(INT): 5
Found Semicolon at line 8 and col 10
[Line 8, Col 10] Token(SEPARATOR): ;
Found new line at line 8 and col 11
Found keyword 'int' at line 9 and col 1
[Line 9, Col 1] Token(KEYWORD): int
Found whitespace at line 9 and col 4
Found character = y at line 9 and col 5
[Line 9, Col 5] Token(IDENTIFIER): y
Found whitespace at line 9 and col 6
[Line 9, Col 7] Token(OPERATOR): =
Found whitespace at line 9 and col 8
Found character = x at line 9 and col 9
[Line 9, Col 9] Token(IDENTIFIER): x
Found whitespace at line 9 and col 10
[Line 9, Col 11] Token(OPERATOR): +
Found whitespace at line 9 and col 12
Found number = 2 at line 9 and col 13
[Line 9, Col 13] Token(INT): 2
Found whitespace at line 9 and col 14
[Line 9, Col 15] Token(OPERATOR): *
Found whitespace at line 9 and col 16
Found number = 3 at line 9 and col 17
[Line 9, Col 17] Token(INT): 3
[Line 9, Col 18] Token(OPERATOR): *
Found character = x at line 9 and col 19
[Line 9, Col 19] Token(IDENTIFIER): x
Found Semicolon at line 9 and col 20
[Line 9, Col 20] Token(SEPARATOR): ;
Found new line at line 9 and col 21
Found character = y at line 10 and col 1
[Line 10, Col 1] Token(IDENTIFIER): y
Found whitespace at line 10 and col 2
[Line 10, Col 3] Token(OPERATOR): =
Found whitespace at line 10 and col 4
Found character = y at line 10 and col 5
[Line 10, Col 5] Token(IDENTIFIER): y
[Line 10, Col 6] Token(OPERATOR): +
Found character = a at line 10 and col 7
[Line 10, Col 7] Token(IDENTIFIER): a
Found Semicolon at line 10 and col 8
[Line 10, Col 8] Token(SEPARATOR): ;
Found new line at line 10 and col 9
Found character = y at line 11 and col 1
[Line 11, Col 1] Token(IDENTIFIER): y
Found whitespace at line 11 and col 2
[Line 11, Col 3] Token(OPERATOR): =
Found whitespace at line 11 and col 4
Found character = y at line 11 and col 5
[Line 11, Col 5] Token(IDENTIFIER): y
[Line 11, Col 6] Token(OPERATOR): *
Found character = a at line 11 and col 7
[Line 11, Col 7] Token(IDENTIFIER): a
Found Semicolon at line 11 and col 8
[Line 11, Col 8] Token(SEPARATOR): ;
Found new line at line 11 and col 9
Found keyword 'exit' at line 12 and col 1
[Line 12, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 12 and col 5
[Line 12, Col 5] Token(SEPARATOR): (
Found character = y at line 12 and col 6
[Line 12, Col 6] Token(IDENTIFIER): y
Found CLOSED_PARENTHESIS ) at line 12 and col 7
[Line 12, Col 7] Token(SEPARATOR): )
Found Semicolon at line 12 and col 8
[Line 12, Col 8] Token(SEPARATOR): ;
Found new line at line 12 and col 9
Found keyword 'exit' at line 13 and col 1
[Line 13, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 13 and col 5
[Line 13, Col 5] Token(SEPARATOR): (
Found character = x at line 13 and col 6
[Line 13, Col 6] Token(IDENTIFIER): x
Found CLOSED_PARENTHESIS ) at line 13 and col 7
[Line 13, Col 7] Token(SEPARATOR): )
Found Semicolon at line 13 and col 8
[Line 13, Col 8] Token(SEPARATOR): ;
Found new line at line 13 and col 9
Found keyword 'exit' at line 14 and col 1
[Line 14, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 14 and col 5
[Line 14, Col 5] Token(SEPARATOR): (
Found character = a at line 14 and col 6
[Line 14, Col 6] Token(IDENTIFIER): a
[Line 14, Col 7] Token(OPERATOR): +
Found number = 2 at line 14 and col 8
[Line 14, Col 8] Token(INT): 2
[Line 14, Col 9] Token(OPERATOR): *
Found number = 3 at line 14 and col 10
[Line 14, Col 10] Token(INT): 3
[Line 14, Col 11] Token(OPERATOR): -
Found character = a at line 14 and col 12
[Line 14, Col 12] Token(IDENTIFIER): a
[Line 14, Col 13] Token(OPERATOR): /
Found number = 4 at line 14 and col 14
[Line 14, Col 14] Token(INT): 4
Found CLOSED_PARENTHESIS ) at line 14 and col 15
[Line 14, Col 15] Token(SEPARATOR): )
Found Semicolon at line 14 and col 16
[Line 14, Col 16] Token(SEPARATOR): ;
Found new line at line 14 and col 17
Found keyword 'exit' at line 15 and col 1
[Line 15, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 15 and col 5
[Line 15, Col 5] Token(SEPARATOR): (
Found number = 123456789 at line 15 and col 6
[Line 15, Col 6] Token(INT): 123456789
Found CLOSED_PARENTHESIS ) at line 15 and col 15
[Line 15, Col 15] Token(SEPARATOR): )
Found Semicolon at line 15 and col 16
[Line 15, Col 16] Token(SEPARATOR): ;
Found new line at line 15 and col 17
Found keyword 'exit' at line 16 and col 1
[Line 16, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 16 and col 5
[Line 16, Col 5] Token(SEPARATOR): (
Found number = 16 at line 16 and col 6
[Line 16, Col 6] Token(INT): 16
Found CLOSED_PARENTHESIS ) at line 16 and col 10
[Line 16, Col 10] Token(SEPARATOR): )
Found Semicolon at line 16 and col 11
[Line 16, Col 11] Token(SEPARATOR): ;
Found new line at line 16 and col 12
Found keyword 'exit' at line 17 and col 1
[Line 17, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 17 and col 5
[Line 17, Col 5] Token(SEPARATOR): (
Found number = 4 at line 17 and col 6
[Line 17, Col 6] Token(INT): 4
Found CLOSED_PARENTHESIS ) at line 17 and col 11
[Line 17, Col 11] Token(SEPARATOR): )
Found Semicolon at line 17 and col 12
[Line 17, Col 12] Token(SEPARATOR): ;
Found new line at line 17 and col 13
Found keyword 'exit' at line 18 and col 1
[Line 18, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 18 and col 5
[Line 18, Col 5] Token(SEPARATOR): (
Found number = 64 at line 18 and col 6
[Line 18, Col 6] Token(INT): 64
Found CLOSED_PARENTHESIS ) at line 18 and col 10
[Line 18, Col 10] Token(SEPARATOR): )
Found Semicolon at line 18 and col 11
[Line 18, Col 11] Token(SEPARATOR): ;
Found new line at line 18 and col 12
Found keyword 'exit' at line 19 and col 1
[Line 19, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 19 and col 5
[Line 19, Col 5] Token(SEPARATOR): (
Found number = 100 at line 19 and col 6
[Line 19, Col 6] Token(INT): 100
Found CLOSED_PARENTHESIS ) at line 19 and col 9
[Line 19, Col 9] Token(SEPARATOR): )
Found Semicolon at line 19 and col 10
[Line 19, Col 10] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): x
[Line 1, Col 6] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): a
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 11
[Line 2, Col 11] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): =
[Line 3, Col 5] Token(INT): 4
[Line 3, Col 6] Token(SEPARATOR): ;
[Line 4, Col 1] Token(IDENTIFIER): x
[Line 4, Col 3] Token(OPERATOR): *=
[Line 4, Col 6] Token(INT): 2
[Line 4, Col 7] Token(OPERATOR): +
[Line 4, Col 8] Token(IDENTIFIER): a
[Line 4, Col 9] Token(SEPARATOR): ;
[Line 5, Col 1] Token(IDENTIFIER): x
[Line 5, Col 3] Token(OPERATOR): +=
[Line 5, Col 6] Token(IDENTIFIER): a
[Line 5, Col 8] Token(OPERATOR): +
[Line 5, Col 10] Token(IDENTIFIER): a
[Line 5, Col 11] Token(OPERATOR): *
[Line 5, Col 12] Token(INT): 2
[Line 5, Col 13] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): exit
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): x
[Line 6, Col 7] Token(SEPARATOR): )
[Line 6, Col 8] Token(SEPARATOR): ;
[Line 7, Col 1] Token(IDENTIFIER): a
[Line 7, Col 3] Token(OPERATOR): =
[Line 7, Col 5] Token(IDENTIFIER): a
[Line 7, Col 6] Token(OPERATOR): +
[Line 7, Col 7] Token(INT): 1
[Line 7, Col 8] Token(SEPARATOR): ;
[Line 8, Col 1] Token(IDENTIFIER): x
[Line 8, Col 3] Token(OPERATOR): =
[Line 8, Col 5] Token(IDENTIFIER): a
[Line 8, Col 6] Token(OPERATOR): +
[Line 8, Col 7] Token(IDENTIFIER): a
[Line 8, Col 8] Token(OPERATOR): *
[Line 8, Col 9] Token(INT): 5
[Line 8, Col 10] Token(SEPARATOR): ;
[Line 9, Col 1] Token(KEYWORD): int
[Line 9, Col 5] Token(IDENTIFIER): y
[Line 9, Col 7] Token(OPERATOR): =
[Line 9, Col 9] Token(IDENTIFIER): x
[Line 9, Col 11] Token(OPERATOR): +
[Line 9, Col 13] Token(INT): 2
[Line 9, Col 15] Token(OPERATOR): *
[Line 9, Col 17] Token(INT): 3
[Line 9, Col 18] Token(OPERATOR): *
[Line 9, Col 19] Token(IDENTIFIER): x
[Line 9, Col 20] Token(SEPARATOR): ;
[Line 10, Col 1] Token(IDENTIFIER): y
[Line 10, Col 3] Token(OPERATOR): =
[Line 10, Col 5] Token(IDENTIFIER): y
[Line 10, Col 6] Token(OPERATOR): +
[Line 10, Col 7] Token(IDENTIFIER): a
[Line 10, Col 8] Token(SEPARATOR): ;
[Line 11, Col 1] Token(IDENTIFIER): y
[Line 11, Col 3] Token(OPERATOR): =
[Line 11, Col 5] Token(IDENTIFIER): y
[Line 11, Col 6] Token(OPERATOR): *
[Line 11, Col 7] Token(IDENTIFIER): a
[Line 11, Col 8] Token(SEPARATOR): ;
[Line 12, Col 1] Token(KEYWORD): exit
[Line 12, Col 5] Token(SEPARATOR): (
[Line 12, Col 6] Token(IDENTIFIER): y
[Line 12, Col 7] Token(SEPARATOR): )
[Line 12, Col 8] Token(SEPARATOR): ;
[Line 13, Col 1] Token(KEYWORD): exit
[Line 13, Col 5] Token(SEPARATOR): (
[Line 13, Col 6] Token(IDENTIFIER): x
[Line 13, Col 7] Token(SEPARATOR): )
[Line 13, Col 8] Token(SEPARATOR): ;
[Line 14, Col 1] Token(KEYWORD): exit
[Line 14, Col 5] Token(SEPARATOR): (
[Line 14, Col 6] Token(IDENTIFIER): a
[Line 14, Col 7] Token(OPERATOR): +
[Line 14, Col 8] Token(INT): 2
[Line 14, Col 9] Token(OPERATOR): *
[Line 14, Col 10] Token(INT): 3
[Line 14, Col 11] Token(OPERATOR): -
[Line 14, Col 12] Token(IDENTIFIER): a
[Line 14, Col 13] Token(OPERATOR): /
[Line 14, Col 14] Token(INT): 4
[Line 14, Col 15] Token(SEPARATOR): )
[Line 14, Col 16] Token(SEPARATOR): ;
[Line 15, Col 1] Token(KEYWORD): exit
[Line 15, Col 5] Token(SEPARATOR): (
[Line 15, Col 6] Token(INT): 123456789
[Line 15, Col 15] Token(SEPARATOR): )
[Line 15, Col 16] Token(SEPARATOR): ;
[Line 16, Col 1] Token(KEYWORD): exit
[Line 16, Col 5] Token(SEPARATOR): (
[Line 16, Col 6] Token(INT): 16
[Line 16, Col 10] Token(SEPARATOR): )
[Line 16, Col 11] Token(SEPARATOR): ;
[Line 17, Col 1] Token(KEYWORD): exit
[Line 17, Col 5] Token(SEPARATOR): (
[Line 17, Col 6] Token(INT): 4
[Line 17, Col 11] Token(SEPARATOR): )
[Line 17, Col 12] Token(SEPARATOR): ;
[Line 18, Col 1] Token(KEYWORD): exit
[Line 18, Col 5] Token(SEPARATOR): (
[Line 18, Col 6] Token(INT): 64
[Line 18, Col 10] Token(SEPARATOR): )
[Line 18, Col 11] Token(SEPARATOR): ;
[Line 19, Col 1] Token(KEYWORD): exit
[Line 19, Col 5] Token(SEPARATOR): (
[Line 19, Col 6] Token(INT): 100
[Line 19, Col 9] Token(SEPARATOR): )
[Line 19, Col 10] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x610ebf0b05c0, current now = 0x610ebf0b05c0
DEBUG LINK: linked stmt=0x610ebf0b0660, current now = 0x610ebf0b0660
DEBUG LINK: linked stmt=0x610ebf0b0730, current now = 0x610ebf0b0730
DEBUG LINK: linked stmt=0x610ebf0b0780, current now = 0x610ebf0b0780
DEBUG LINK: linked stmt=0x610ebf0b08f0, current now = 0x610ebf0b08f0
DEBUG LINK: linked stmt=0x610ebf0b0920, current now = 0x610ebf0b0920
DEBUG LINK: linked stmt=0x610ebf0b0a10, current now = 0x610ebf0b0a10
DEBUG LINK: linked stmt=0x610ebf0b0bf0, current now = 0x610ebf0b0bf0
DEBUG LINK: linked stmt=0x610ebf0b0c90, current now = 0x610ebf0b0c90
DEBUG LINK: linked stmt=0x610ebf0b0cc0, current now = 0x610ebf0b0cc0
DEBUG LINK: linked stmt=0x610ebf0b0dd0, current now = 0x610ebf0b0dd0
DEBUG LINK: linked stmt=0x610ebf0b0da0, current now = 0x610ebf0b0da0
DEBUG LINK: linked stmt=0x610ebf0b0e70, current now = 0x610ebf0b0e70
DEBUG LINK: linked stmt=0x610ebf0b0ef0, current now = 0x610ebf0b0ef0
DEBUG LINK: linked stmt=0x610ebf0b0fc0, current now = 0x610ebf0b0fc0
DEBUG LINK: linked stmt=0x610ebf0b0ff0, current now = 0x610ebf0b0ff0
DEBUG LINK: linked stmt=0x610ebf0b10a0, current now = 0x610ebf0b10a0
DEBUG LINK: linked stmt=0x610ebf0b1120, current now = 0x610ebf0b1120
DEBUG LINK: linked stmt=0x610ebf0b11a0, current now = 0x610ebf0b11a0

--- Syntax Tree ---
PROGRAM
  VAR_DECL: x
  VAR_DECL: a
    LITERAL_INT: 11
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: x
  EXIT_CALL
    LITERAL_INT: 85
  ASSIGNMENT: =
    IDENTIFIER: a
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 504
  ASSIGNMENT: =
    IDENTIFIER: y
  ASSIGNMENT: =
    IDENTIFIER: y
  EXIT_CALL
    LITERAL_INT: 6192
  EXIT_CALL
    LITERAL_INT: 72
  EXIT_CALL
    LITERAL_INT: 15
  EXIT_CALL
    LITERAL_INT: 123456789
  EXIT_CALL
    LITERAL_INT: 16
  EXIT_CALL
    LITERAL_INT: 4
  EXIT_CALL
    LITERAL_INT: 64
  EXIT_CALL
    LITERAL_INT: 100
Compilation successful. Output: generated

Exiting
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = x at line 1 and col 5
[Line 1, Col 5] Token(IDENTIFIER): x
Found Semicolon at line 1 and col 6
[Line 1, Col 6] Token(SEPARATOR): ;
Found new line at line 1 and col 7
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = a at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): a
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 11 at line 2 and col 9
[Line 2, Col 9] Token(INT): 11
Found Semicolon at line 2 and col 11
[Line 2, Col 11] Token(SEPARATOR): ;
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): =
Found whitespace at line 3 and col 4
Found character = a at line 3 and col 5
[Line 3, Col 5] Token(IDENTIFIER): a
Found Semicolon at line 3 and col 6
[Line 3, Col 6] Token(SEPARATOR): ;
Found new line at line 3 and col 7
Found character = x at line 4 and col 1
[Line 4, Col 1] Token(IDENTIFIER): x
[Line 4, Col 2] Token(OPERATOR): =
Found number = 2 at line 4 and col 3
[Line 4, Col 3] Token(INT): 2
Found Semicolon at line 4 and col 7
[Line 4, Col 7] Token(SEPARATOR): ;
Found new line at line 4 and col 8
Found keyword 'int' at line 5 and col 1
[Line 5, Col 1] Token(KEYWORD): int
Found whitespace at line 5 and col 4
Found character = y at line 5 and col 5
[Line 5, Col 5] Token(IDENTIFIER): y
Found whitespace at line 5 and col 6
[Line 5, Col 7] Token(OPERATOR): =
Found whitespace at line 5 and col 8
Found character = x at line 5 and col 9
[Line 5, Col 9] Token(IDENTIFIER): x
Found whitespace at line 5 and col 10
[Line 5, Col 11] Token(OPERATOR): +
Found whitespace at line 5 and col 12
Found number = 2 at line 5 and col 13
[Line 5, Col 13] Token(INT): 2
Found whitespace at line 5 and col 14
[Line 5, Col 15] Token(OPERATOR): *
Found whitespace at line 5 and col 16
Found number = 3 at line 5 and col 17
[Line 5, Col 17] Token(INT): 3
[Line 5, Col 18] Token(OPERATOR): *
Found character = x at line 5 and col 19
[Line 5, Col 19] Token(IDENTIFIER): x
Found Semicolon at line 5 and col 20
[Line 5, Col 20] Token(SEPARATOR): ;
Found new line at line 5 and col 21
Found keyword 'exit' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found OPEN_PARENTHESIS ( at line 6 and col 6
[Line 6, Col 6] Token(SEPARATOR): (
Found character = y at line 6 and col 7
[Line 6, Col 7] Token(IDENTIFIER): y
[Line 6, Col 8] Token(OPERATOR): +
Found number = 7 at line 6 and col 9
[Line 6, Col 9] Token(INT): 7
Found CLOSED_PARENTHESIS ) at line 6 and col 11
[Line 6, Col 11] Token(SEPARATOR): )
[Line 6, Col 12] Token(OPERATOR): /
Found number = 7 at line 6 and col 13
[Line 6, Col 13] Token(INT): 7
Found CLOSED_PARENTHESIS ) at line 6 and col 18
[Line 6, Col 18] Token(SEPARATOR): )
Found Semicolon at line 6 and col 19
[Line 6, Col 19] Token(SEPARATOR): ;
Found new line at line 6 and col 20
Found character = a at line 7 and col 1
[Line 7, Col 1] Token(IDENTIFIER): a
Found whitespace at line 7 and col 2
[Line 7, Col 3] Token(OPERATOR): =
Found whitespace at line 7 and col 4
Found number = 21 at line 7 and col 5
[Line 7, Col 5] Token(INT): 21
Found Semicolon at line 7 and col 7
[Line 7, Col 7] Token(SEPARATOR): ;
Found new line at line 7 and col 8
Found character = a at line 8 and col 1
[Line 8, Col 1] Token(IDENTIFIER): a
[Line 8, Col 2] Token(OPERATOR): =
Found character = x at line 8 and col 3
[Line 8, Col 3] Token(IDENTIFIER): x
Found Semicolon at line 8 and col 4
[Line 8, Col 4] Token(SEPARATOR): ;
Found new line at line 8 and col 5
Found keyword 'exit' at line 9 and col 1
[Line 9, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 9 and col 5
[Line 9, Col 5] Token(SEPARATOR): (
Found character = a at line 9 and col 6
[Line 9, Col 6] Token(IDENTIFIER): a
[Line 9, Col 7] Token(OPERATOR): +
Found number = 2 at line 9 and col 8
[Line 9, Col 8] Token(INT): 2
[Line 9, Col 9] Token(OPERATOR): *
Found number = 3 at line 9 and col 10
[Line 9, Col 10] Token(INT): 3
[Line 9, Col 11] Token(OPERATOR): -
Found character = a at line 9 and col 12
[Line 9, Col 12] Token(IDENTIFIER): a
[Line 9, Col 13] Token(OPERATOR): /
Found number = 4 at line 9 and col 14
[Line 9, Col 14] Token(INT): 4
Found CLOSED_PARENTHESIS ) at line 9 and col 15
[Line 9, Col 15] Token(SEPARATOR): )
Found Semicolon at line 9 and col 16
[Line 9, Col 16] Token(SEPARATOR): ;
Found new line at line 9 and col 17
Found keyword 'exit' at line 10 and col 1
[Line 10, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 10 and col 5
[Line 10, Col 5] Token(SEPARATOR): (
Found number = 123456789 at line 10 and col 6
[Line 10, Col 6] Token(INT): 123456789
Found CLOSED_PARENTHESIS ) at line 10 and col 15
[Line 10, Col 15] Token(SEPARATOR): )
Found Semicolon at line 10 and col 16
[Line 10, Col 16] Token(SEPARATOR): ;
Found new line at line 10 and col 17
Found keyword 'exit' at line 11 and col 1
[Line 11, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 11 and col 5
[Line 11, Col 5] Token(SEPARATOR): (
Found number = 16 at line 11 and col 6
[Line 11, Col 6] Token(INT): 16
Found CLOSED_PARENTHESIS ) at line 11 and col 10
[Line 11, Col 10] Token(SEPARATOR): )
Found Semicolon at line 11 and col 11
[Line 11, Col 11] Token(SEPARATOR): ;
Found new line at line 11 and col 12
Found keyword 'exit' at line 12 and col 1
[Line 12, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 12 and col 5
[Line 12, Col 5] Token(SEPARATOR): (
Found number = 4 at line 12 and col 6
[Line 12, Col 6] Token(INT): 4
Found CLOSED_PARENTHESIS ) at line 12 and col 11
[Line 12, Col 11] Token(SEPARATOR): )
Found Semicolon at line 12 and col 12
[Line 12, Col 12] Token(SEPARATOR): ;
Found new line at line 12 and col 13
Found keyword 'exit' at line 13 and col 1
[Line 13, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 13 and col 5
[Line 13, Col 5] Token(SEPARATOR): (
Found number = 64 at line 13 and col 6
[Line 13, Col 6] Token(INT): 64
Found CLOSED_PARENTHESIS ) at line 13 and col 10
[Line 13, Col 10] Token(SEPARATOR): )
Found Semicolon at line 13 and col 11
[Line 13, Col 11] Token(SEPARATOR): ;
Found new line at line 13 and col 12
Found keyword 'exit' at line 14 and col 1
[Line 14, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 14 and col 5
[Line 14, Col 5] Token(SEPARATOR): (
Found number = 100 at line 14 and col 6
[Line 14, Col 6] Token(INT): 100
Found CLOSED_PARENTHESIS ) at line 14 and col 9
[Line 14, Col 9] Token(SEPARATOR): )
Found Semicolon at line 14 and col 10
[Line 14, Col 10] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): x
[Line 1, Col 6] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): a
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 11
[Line 2, Col 11] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): =
[Line 3, Col 5] Token(IDENTIFIER): a
[Line 3, Col 6] Token(SEPARATOR): ;
[Line 4, Col 1] Token(IDENTIFIER): x
[Line 4, Col 2] Token(OPERATOR): =
[Line 4, Col 3] Token(INT): 2
[Line 4, Col 7] Token(SEPARATOR): ;
[Line 5, Col 1] Token(KEYWORD): int
[Line 5, Col 5] Token(IDENTIFIER): y
[Line 5, Col 7] Token(OPERATOR): =
[Line 5, Col 9] Token(IDENTIFIER): x
[Line 5, Col 11] Token(OPERATOR): +
[Line 5, Col 13] Token(INT): 2
[Line 5, Col 15] Token(OPERATOR): *
[Line 5, Col 17] Token(INT): 3
[Line 5, Col 18] Token(OPERATOR): *
[Line 5, Col 19] Token(IDENTIFIER): x
[Line 5, Col 20] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): exit
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(SEPARATOR): (
[Line 6, Col 7] Token(IDENTIFIER): y
[Line 6, Col 8] Token(OPERATOR): +
[Line 6, Col 9] Token(INT): 7
[Line 6, Col 11] Token(SEPARATOR): )
[Line 6, Col 12] Token(OPERATOR): /
[Line 6, Col 13] Token(INT): 7
[Line 6, Col 18] Token(SEPARATOR): )
[Line 6, Col 19] Token(SEPARATOR): ;
[Line 7, Col 1] Token(IDENTIFIER): a
[Line 7, Col 3] Token(OPERATOR): =
[Line 7, Col 5] Token(INT): 21
[Line 7, Col 7] Token(SEPARATOR): ;
[Line 8, Col 1] Token(IDENTIFIER): a
[Line 8, Col 2] Token(OPERATOR): =
[Line 8, Col 3] Token(IDENTIFIER): x
[Line 8, Col 4] Token(SEPARATOR): ;
[Line 9, Col 1] Token(KEYWORD): exit
[Line 9, Col 5] Token(SEPARATOR): (
[Line 9, Col 6] Token(IDENTIFIER): a
[Line 9, Col 7] Token(OPERATOR): +
[Line 9, Col 8] Token(INT): 2
[Line 9, Col 9] Token(OPERATOR): *
[Line 9, Col 10] Token(INT): 3
[Line 9, Col 11] Token(OPERATOR): -
[Line 9, Col 12] Token(IDENTIFIER): a
[Line 9, Col 13] Token(OPERATOR): /
[Line 9, Col 14] Token(INT): 4
[Line 9, Col 15] Token(SEPARATOR): )
[Line 9, Col 16] Token(SEPARATOR): ;
[Line 10, Col 1] Token(KEYWORD): exit
[Line 10, Col 5] Token(SEPARATOR): (
[Line 10, Col 6] Token(INT): 123456789
[Line 10, Col 15] Token(SEPARATOR): )
[Line 10, Col 16] Token(SEPARATOR): ;
[Line 11, Col 1] Token(KEYWORD): exit
[Line 11, Col 5] Token(SEPARATOR): (
[Line 11, Col 6] Token(INT): 16
[Line 11, Col 10] Token(SEPARATOR): )
[Line 11, Col 11] Token(SEPARATOR): ;
[Line 12, Col 1] Token(KEYWORD): exit
[Line 12, Col 5] Token(SEPARATOR): (
[Line 12, Col 6] Token(INT): 4
[Line 12, Col 11] Token(SEPARATOR): )
[Line 12, Col 12] Token(SEPARATOR): ;
[Line 13, Col 1] Token(KEYWORD): exit
[Line 13, Col 5] Token(SEPARATOR): (
[Line 13, Col 6] Token(INT): 64
[Line 13, Col 10] Token(SEPARATOR): )
[Line 13, Col 11] Token(SEPARATOR): ;
[Line 14, Col 1] Token(KEYWORD): exit
[Line 14, Col 5] Token(SEPARATOR): (
[Line 14, Col 6] Token(INT): 100
[Line 14, Col 9] Token(SEPARATOR): )
[Line 14, Col 10] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x5fb92d12c910, current now = 0x5fb92d12c910
DEBUG LINK: linked stmt=0x5fb92d12c9b0, current now = 0x5fb92d12c9b0
DEBUG LINK: linked stmt=0x5fb92d12e360, current now = 0x5fb92d12e360
DEBUG LINK: linked stmt=0x5fb92d12e430, current now = 0x5fb92d12e430
DEBUG LINK: linked stmt=0x5fb92d12e530, current now = 0x5fb92d12e530
DEBUG LINK: linked stmt=0x5fb92d12e480, current now = 0x5fb92d12e480
DEBUG LINK: linked stmt=0x5fb92d12e620, current now = 0x5fb92d12e620
DEBUG LINK: linked stmt=0x5fb92d12e6f0, current now = 0x5fb92d12e6f0
DEBUG LINK: linked stmt=0x5fb92d12e740, current now = 0x5fb92d12e740
DEBUG LINK: linked stmt=0x5fb92d12e7e0, current now = 0x5fb92d12e7e0
DEBUG LINK: linked stmt=0x5fb92d12e810, current now = 0x5fb92d12e810
DEBUG LINK: linked stmt=0x5fb92d12e8c0, current now = 0x5fb92d12e8c0
DEBUG LINK: linked stmt=0x5fb92d12e940, current now = 0x5fb92d12e940
DEBUG LINK: linked stmt=0x5fb92d12e9c0, current now = 0x5fb92d12e9c0

--- Syntax Tree ---
PROGRAM
  VAR_DECL: x
  VAR_DECL: a
    LITERAL_INT: 11
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 14
  EXIT_CALL
    LITERAL_INT: 3
  ASSIGNMENT: =
    IDENTIFIER: a
  ASSIGNMENT: =
    IDENTIFIER: a
  EXIT_CALL
    LITERAL_INT: 8
  EXIT_CALL
    LITERAL_INT: 123456789
  EXIT_CALL
    LITERAL_INT: 16
  EXIT_CALL
    LITERAL_INT: 4
  EXIT_CALL
    LITERAL_INT: 64
  EXIT_CALL
    LITERAL_INT: 100
Compilation successful. Output: generated

Exiting
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test2.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = a at line 1 and col 5
Found character = b at line 1 and col 6
Found character = c at line 1 and col 7
[Line 1, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 1 and col 8
[Line 1, Col 9] Token(OPERATOR): =
Found whitespace at line 1 and col 10
Found number = 1234 at line 1 and col 11
[Line 1, Col 11] Token(INT): 1234
Found Semicolon at line 1 and col 15
[Line 1, Col 15] Token(SEPARATOR): ;
Found whitespace at line 1 and col 16
Found new line at line 1 and col 17
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = x at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): x
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 1 at line 2 and col 9
[Line 2, Col 9] Token(INT): 1
Found Semicolon at line 2 and col 10
[Line 2, Col 10] Token(SEPARATOR): ;
Found whitespace at line 2 and col 11
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): +=
Found whitespace at line 3 and col 5
Found number = 5 at line 3 and col 6
[Line 3, Col 6] Token(INT): 5
Found Semicolon at line 3 and col 7
[Line 3, Col 7] Token(SEPARATOR): ;
Found whitespace at line 3 and col 8
Found new line at line 3 and col 9
Found keyword 'int' at line 4 and col 1
[Line 4, Col 1] Token(KEYWORD): int
Found whitespace at line 4 and col 4
Found character = y at line 4 and col 5
[Line 4, Col 5] Token(IDENTIFIER): y
Found whitespace at line 4 and col 6
[Line 4, Col 7] Token(OPERATOR): =
Found whitespace at line 4 and col 8
Found character = x at line 4 and col 9
[Line 4, Col 9] Token(IDENTIFIER): x
Found whitespace at line 4 and col 10
[Line 4, Col 11] Token(OPERATOR): <<
Found whitespace at line 4 and col 13
Found number = 1 at line 4 and col 14
[Line 4, Col 14] Token(INT): 1
Found Semicolon at line 4 and col 15
[Line 4, Col 15] Token(SEPARATOR): ;
Found whitespace at line 4 and col 16
Found new line at line 4 and col 17
Found keyword 'if' at line 5 and col 1
[Line 5, Col 1] Token(KEYWORD): if
Found whitespace at line 5 and col 3
Found OPEN_PARENTHESIS ( at line 5 and col 4
[Line 5, Col 4] Token(SEPARATOR): (
Found OPEN_PARENTHESIS ( at line 5 and col 5
[Line 5, Col 5] Token(SEPARATOR): (
Found character = y at line 5 and col 6
[Line 5, Col 6] Token(IDENTIFIER): y
Found whitespace at line 5 and col 7
[Line 5, Col 8] Token(OPERATOR): >>
Found whitespace at line 5 and col 10
Found number = 2 at line 5 and col 11
[Line 5, Col 11] Token(INT): 2
Found CLOSED_PARENTHESIS ) at line 5 and col 12
[Line 5, Col 12] Token(SEPARATOR): )
Found whitespace at line 5 and col 13
[Line 5, Col 14] Token(OPERATOR): ==
Found whitespace at line 5 and col 16
Found character = z at line 5 and col 17
[Line 5, Col 17] Token(IDENTIFIER): z
Found CLOSED_PARENTHESIS ) at line 5 and col 18
[Line 5, Col 18] Token(SEPARATOR): )
Found whitespace at line 5 and col 19
Found OPEN_PARENTHESIS { at line 5 and col 20
[Line 5, Col 20] Token(SEPARATOR): {
Found whitespace at line 5 and col 21
Found new line at line 5 and col 22
Found whitespace at line 6 and col 1
Found whitespace at line 6 and col 2
Found whitespace at line 6 and col 3
Found whitespace at line 6 and col 4
Found character = a at line 6 and col 5
[Line 6, Col 5] Token(IDENTIFIER): a
Found whitespace at line 6 and col 6
[Line 6, Col 7] Token(OPERATOR): <<=
Found whitespace at line 6 and col 10
Found number = 1 at line 6 and col 11
[Line 6, Col 11] Token(INT): 1
Found Semicolon at line 6 and col 12
[Line 6, Col 12] Token(SEPARATOR): ;
Found whitespace at line 6 and col 13
Found new line at line 6 and col 14
Found CLOSED_PARENTHESIS } at line 7 and col 1
[Line 7, Col 1] Token(SEPARATOR): }
Found whitespace at line 7 and col 2
Found new line at line 7 and col 3
Found whitespace at line 8 and col 1
Found new line at line 8 and col 2
Found keyword 'exit' at line 9 and col 1
[Line 9, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 9 and col 5
[Line 9, Col 5] Token(SEPARATOR): (
Found number = 4096 at line 9 and col 6
[Line 9, Col 6] Token(INT): 4096
[Line 9, Col 12] Token(OPERATOR): *
Found whitespace at line 9 and col 13
Found new line at line 9 and col 14
Found CLOSED_PARENTHESIS ) at line 10 and col 1
[Line 10, Col 1] Token(SEPARATOR): )
Found Semicolon at line 10 and col 2
[Line 10, Col 2] Token(SEPARATOR): ;
Found whitespace at line 10 and col 3
Found new line at line 10 and col 4
Found number = 1 at line 11 and col 1
[Line 11, Col 1] Token(INT): 1

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): abc
[Line 1, Col 9] Token(OPERATOR): =
[Line 1, Col 11] Token(INT): 1234
[Line 1, Col 15] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): x
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 1
[Line 2, Col 10] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): +=
[Line 3, Col 6] Token(INT): 5
[Line 3, Col 7] Token(SEPARATOR): ;
[Line 4, Col 1] Token(KEYWORD): int
[Line 4, Col 5] Token(IDENTIFIER): y
[Line 4, Col 7] Token(OPERATOR): =
[Line 4, Col 9] Token(IDENTIFIER): x
[Line 4, Col 11] Token(OPERATOR): <<
[Line 4, Col 14] Token(INT): 1
[Line 4, Col 15] Token(SEPARATOR): ;
[Line 5, Col 1] Token(KEYWORD): if
[Line 5, Col 4] Token(SEPARATOR): (
[Line 5, Col 5] Token(SEPARATOR): (
[Line 5, Col 6] Token(IDENTIFIER): y
[Line 5, Col 8] Token(OPERATOR): >>
[Line 5, Col 11] Token(INT): 2
[Line 5, Col 12] Token(SEPARATOR): )
[Line 5, Col 14] Token(OPERATOR): ==
[Line 5, Col 17] Token(IDENTIFIER): z
[Line 5, Col 18] Token(SEPARATOR): )
[Line 5, Col 20] Token(SEPARATOR): {
[Line 6, Col 5] Token(IDENTIFIER): a
[Line 6, Col 7] Token(OPERATOR): <<=
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(SEPARATOR): ;
[Line 7, Col 1] Token(SEPARATOR): }
[Line 9, Col 1] Token(KEYWORD): exit
[Line 9, Col 5] Token(SEPARATOR): (
[Line 9, Col 6] Token(INT): 4096
[Line 9, Col 12] Token(OPERATOR): *
[Line 10, Col 1] Token(SEPARATOR): )
[Line 10, Col 2] Token(SEPARATOR): ;
[Line 11, Col 1] Token(INT): 1
DEBUG LINK: linked stmt=0x5b11bd5c07f0, current now = 0x5b11bd5c07f0
DEBUG LINK: linked stmt=0x5b11bd5c0890, current now = 0x5b11bd5c0890
DEBUG LINK: linked stmt=0x5b11bd5c09b0, current now = 0x5b11bd5c09b0
DEBUG LINK: linked stmt=0x5b11bd5c0a80, current now = 0x5b11bd5c0a80
Error: Undefined variable 'z' at line 5
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ valgrind --leak-check=full ./build/main test5.tc
==2535== Memcheck, a memory error detector
==2535== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2535== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2535== Command: ./build/main test5.tc
==2535==
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = x at line 1 and col 5
[Line 1, Col 5] Token(IDENTIFIER): x
Found Semicolon at line 1 and col 6
[Line 1, Col 6] Token(SEPARATOR): ;
Found new line at line 1 and col 7
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = a at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): a
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 11 at line 2 and col 9
[Line 2, Col 9] Token(INT): 11
Found Semicolon at line 2 and col 11
[Line 2, Col 11] Token(SEPARATOR): ;
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): =
Found whitespace at line 3 and col 4
Found number = 4 at line 3 and col 5
[Line 3, Col 5] Token(INT): 4
Found Semicolon at line 3 and col 6
[Line 3, Col 6] Token(SEPARATOR): ;
Found new line at line 3 and col 7
Found character = x at line 4 and col 1
[Line 4, Col 1] Token(IDENTIFIER): x
Found whitespace at line 4 and col 2
[Line 4, Col 3] Token(OPERATOR): *=
Found whitespace at line 4 and col 5
Found number = 2 at line 4 and col 6
[Line 4, Col 6] Token(INT): 2
[Line 4, Col 7] Token(OPERATOR): +
Found character = a at line 4 and col 8
[Line 4, Col 8] Token(IDENTIFIER): a
Found Semicolon at line 4 and col 9
[Line 4, Col 9] Token(SEPARATOR): ;
Found whitespace at line 4 and col 10
Found whitespace at line 4 and col 11
Found whitespace at line 4 and col 12
Found new line at line 4 and col 13
Found character = x at line 5 and col 1
[Line 5, Col 1] Token(IDENTIFIER): x
Found whitespace at line 5 and col 2
[Line 5, Col 3] Token(OPERATOR): +=
Found whitespace at line 5 and col 5
Found character = a at line 5 and col 6
[Line 5, Col 6] Token(IDENTIFIER): a
Found whitespace at line 5 and col 7
[Line 5, Col 8] Token(OPERATOR): +
Found whitespace at line 5 and col 9
Found character = a at line 5 and col 10
[Line 5, Col 10] Token(IDENTIFIER): a
[Line 5, Col 11] Token(OPERATOR): *
Found number = 2 at line 5 and col 12
[Line 5, Col 12] Token(INT): 2
Found Semicolon at line 5 and col 13
[Line 5, Col 13] Token(SEPARATOR): ;
Found new line at line 5 and col 14
Found keyword 'exit' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = x at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): x
Found CLOSED_PARENTHESIS ) at line 6 and col 7
[Line 6, Col 7] Token(SEPARATOR): )
Found Semicolon at line 6 and col 8
[Line 6, Col 8] Token(SEPARATOR): ;
Found new line at line 6 and col 9
Found character = a at line 7 and col 1
[Line 7, Col 1] Token(IDENTIFIER): a
Found whitespace at line 7 and col 2
[Line 7, Col 3] Token(OPERATOR): =
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
[Line 7, Col 5] Token(IDENTIFIER): a
[Line 7, Col 6] Token(OPERATOR): +
Found number = 1 at line 7 and col 7
[Line 7, Col 7] Token(INT): 1
Found Semicolon at line 7 and col 8
[Line 7, Col 8] Token(SEPARATOR): ;
Found new line at line 7 and col 9
Found character = x at line 8 and col 1
[Line 8, Col 1] Token(IDENTIFIER): x
Found whitespace at line 8 and col 2
[Line 8, Col 3] Token(OPERATOR): =
Found whitespace at line 8 and col 4
Found character = a at line 8 and col 5
[Line 8, Col 5] Token(IDENTIFIER): a
[Line 8, Col 6] Token(OPERATOR): +
Found character = a at line 8 and col 7
[Line 8, Col 7] Token(IDENTIFIER): a
[Line 8, Col 8] Token(OPERATOR): *
Found number = 5 at line 8 and col 9
[Line 8, Col 9] Token(INT): 5
Found Semicolon at line 8 and col 10
[Line 8, Col 10] Token(SEPARATOR): ;
Found new line at line 8 and col 11
Found keyword 'int' at line 9 and col 1
[Line 9, Col 1] Token(KEYWORD): int
Found whitespace at line 9 and col 4
Found character = y at line 9 and col 5
[Line 9, Col 5] Token(IDENTIFIER): y
Found whitespace at line 9 and col 6
[Line 9, Col 7] Token(OPERATOR): =
Found whitespace at line 9 and col 8
Found character = x at line 9 and col 9
[Line 9, Col 9] Token(IDENTIFIER): x
Found whitespace at line 9 and col 10
[Line 9, Col 11] Token(OPERATOR): +
Found whitespace at line 9 and col 12
Found number = 2 at line 9 and col 13
[Line 9, Col 13] Token(INT): 2
Found whitespace at line 9 and col 14
[Line 9, Col 15] Token(OPERATOR): *
Found whitespace at line 9 and col 16
Found number = 3 at line 9 and col 17
[Line 9, Col 17] Token(INT): 3
[Line 9, Col 18] Token(OPERATOR): *
Found character = x at line 9 and col 19
[Line 9, Col 19] Token(IDENTIFIER): x
Found Semicolon at line 9 and col 20
[Line 9, Col 20] Token(SEPARATOR): ;
Found new line at line 9 and col 21
Found character = y at line 10 and col 1
[Line 10, Col 1] Token(IDENTIFIER): y
Found whitespace at line 10 and col 2
[Line 10, Col 3] Token(OPERATOR): =
Found whitespace at line 10 and col 4
Found character = y at line 10 and col 5
[Line 10, Col 5] Token(IDENTIFIER): y
[Line 10, Col 6] Token(OPERATOR): +
Found character = a at line 10 and col 7
[Line 10, Col 7] Token(IDENTIFIER): a
Found Semicolon at line 10 and col 8
[Line 10, Col 8] Token(SEPARATOR): ;
Found new line at line 10 and col 9
Found character = y at line 11 and col 1
[Line 11, Col 1] Token(IDENTIFIER): y
Found whitespace at line 11 and col 2
[Line 11, Col 3] Token(OPERATOR): =
Found whitespace at line 11 and col 4
Found character = y at line 11 and col 5
[Line 11, Col 5] Token(IDENTIFIER): y
[Line 11, Col 6] Token(OPERATOR): *
Found character = a at line 11 and col 7
[Line 11, Col 7] Token(IDENTIFIER): a
Found Semicolon at line 11 and col 8
[Line 11, Col 8] Token(SEPARATOR): ;
Found new line at line 11 and col 9
Found keyword 'exit' at line 12 and col 1
[Line 12, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 12 and col 5
[Line 12, Col 5] Token(SEPARATOR): (
Found character = y at line 12 and col 6
[Line 12, Col 6] Token(IDENTIFIER): y
Found CLOSED_PARENTHESIS ) at line 12 and col 7
[Line 12, Col 7] Token(SEPARATOR): )
Found Semicolon at line 12 and col 8
[Line 12, Col 8] Token(SEPARATOR): ;
Found new line at line 12 and col 9
Found keyword 'exit' at line 13 and col 1
[Line 13, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 13 and col 5
[Line 13, Col 5] Token(SEPARATOR): (
Found character = x at line 13 and col 6
[Line 13, Col 6] Token(IDENTIFIER): x
Found CLOSED_PARENTHESIS ) at line 13 and col 7
[Line 13, Col 7] Token(SEPARATOR): )
Found Semicolon at line 13 and col 8
[Line 13, Col 8] Token(SEPARATOR): ;
Found new line at line 13 and col 9
Found keyword 'exit' at line 14 and col 1
[Line 14, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 14 and col 5
[Line 14, Col 5] Token(SEPARATOR): (
Found character = a at line 14 and col 6
[Line 14, Col 6] Token(IDENTIFIER): a
[Line 14, Col 7] Token(OPERATOR): +
Found number = 2 at line 14 and col 8
[Line 14, Col 8] Token(INT): 2
[Line 14, Col 9] Token(OPERATOR): *
Found number = 3 at line 14 and col 10
[Line 14, Col 10] Token(INT): 3
[Line 14, Col 11] Token(OPERATOR): -
Found character = a at line 14 and col 12
[Line 14, Col 12] Token(IDENTIFIER): a
[Line 14, Col 13] Token(OPERATOR): /
Found number = 4 at line 14 and col 14
[Line 14, Col 14] Token(INT): 4
Found CLOSED_PARENTHESIS ) at line 14 and col 15
[Line 14, Col 15] Token(SEPARATOR): )
Found Semicolon at line 14 and col 16
[Line 14, Col 16] Token(SEPARATOR): ;
Found new line at line 14 and col 17
Found keyword 'exit' at line 15 and col 1
[Line 15, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 15 and col 5
[Line 15, Col 5] Token(SEPARATOR): (
Found number = 123456789 at line 15 and col 6
[Line 15, Col 6] Token(INT): 123456789
Found CLOSED_PARENTHESIS ) at line 15 and col 15
[Line 15, Col 15] Token(SEPARATOR): )
Found Semicolon at line 15 and col 16
[Line 15, Col 16] Token(SEPARATOR): ;
Found new line at line 15 and col 17
Found keyword 'exit' at line 16 and col 1
[Line 16, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 16 and col 5
[Line 16, Col 5] Token(SEPARATOR): (
Found number = 16 at line 16 and col 6
[Line 16, Col 6] Token(INT): 16
Found CLOSED_PARENTHESIS ) at line 16 and col 10
[Line 16, Col 10] Token(SEPARATOR): )
Found Semicolon at line 16 and col 11
[Line 16, Col 11] Token(SEPARATOR): ;
Found new line at line 16 and col 12
Found keyword 'exit' at line 17 and col 1
[Line 17, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 17 and col 5
[Line 17, Col 5] Token(SEPARATOR): (
Found number = 4 at line 17 and col 6
[Line 17, Col 6] Token(INT): 4
Found CLOSED_PARENTHESIS ) at line 17 and col 11
[Line 17, Col 11] Token(SEPARATOR): )
Found Semicolon at line 17 and col 12
[Line 17, Col 12] Token(SEPARATOR): ;
Found new line at line 17 and col 13
Found keyword 'exit' at line 18 and col 1
[Line 18, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 18 and col 5
[Line 18, Col 5] Token(SEPARATOR): (
Found number = 64 at line 18 and col 6
[Line 18, Col 6] Token(INT): 64
Found CLOSED_PARENTHESIS ) at line 18 and col 10
[Line 18, Col 10] Token(SEPARATOR): )
Found Semicolon at line 18 and col 11
[Line 18, Col 11] Token(SEPARATOR): ;
Found new line at line 18 and col 12
Found keyword 'exit' at line 19 and col 1
[Line 19, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 19 and col 5
[Line 19, Col 5] Token(SEPARATOR): (
Found number = 100 at line 19 and col 6
[Line 19, Col 6] Token(INT): 100
Found CLOSED_PARENTHESIS ) at line 19 and col 9
[Line 19, Col 9] Token(SEPARATOR): )
Found Semicolon at line 19 and col 10
[Line 19, Col 10] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): x
[Line 1, Col 6] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): a
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 11
[Line 2, Col 11] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): =
[Line 3, Col 5] Token(INT): 4
[Line 3, Col 6] Token(SEPARATOR): ;
[Line 4, Col 1] Token(IDENTIFIER): x
[Line 4, Col 3] Token(OPERATOR): *=
[Line 4, Col 6] Token(INT): 2
[Line 4, Col 7] Token(OPERATOR): +
[Line 4, Col 8] Token(IDENTIFIER): a
[Line 4, Col 9] Token(SEPARATOR): ;
[Line 5, Col 1] Token(IDENTIFIER): x
[Line 5, Col 3] Token(OPERATOR): +=
[Line 5, Col 6] Token(IDENTIFIER): a
[Line 5, Col 8] Token(OPERATOR): +
[Line 5, Col 10] Token(IDENTIFIER): a
[Line 5, Col 11] Token(OPERATOR): *
[Line 5, Col 12] Token(INT): 2
[Line 5, Col 13] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): exit
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): x
[Line 6, Col 7] Token(SEPARATOR): )
[Line 6, Col 8] Token(SEPARATOR): ;
[Line 7, Col 1] Token(IDENTIFIER): a
[Line 7, Col 3] Token(OPERATOR): =
[Line 7, Col 5] Token(IDENTIFIER): a
[Line 7, Col 6] Token(OPERATOR): +
[Line 7, Col 7] Token(INT): 1
[Line 7, Col 8] Token(SEPARATOR): ;
[Line 8, Col 1] Token(IDENTIFIER): x
[Line 8, Col 3] Token(OPERATOR): =
[Line 8, Col 5] Token(IDENTIFIER): a
[Line 8, Col 6] Token(OPERATOR): +
[Line 8, Col 7] Token(IDENTIFIER): a
[Line 8, Col 8] Token(OPERATOR): *
[Line 8, Col 9] Token(INT): 5
[Line 8, Col 10] Token(SEPARATOR): ;
[Line 9, Col 1] Token(KEYWORD): int
[Line 9, Col 5] Token(IDENTIFIER): y
[Line 9, Col 7] Token(OPERATOR): =
[Line 9, Col 9] Token(IDENTIFIER): x
[Line 9, Col 11] Token(OPERATOR): +
[Line 9, Col 13] Token(INT): 2
[Line 9, Col 15] Token(OPERATOR): *
[Line 9, Col 17] Token(INT): 3
[Line 9, Col 18] Token(OPERATOR): *
[Line 9, Col 19] Token(IDENTIFIER): x
[Line 9, Col 20] Token(SEPARATOR): ;
[Line 10, Col 1] Token(IDENTIFIER): y
[Line 10, Col 3] Token(OPERATOR): =
[Line 10, Col 5] Token(IDENTIFIER): y
[Line 10, Col 6] Token(OPERATOR): +
[Line 10, Col 7] Token(IDENTIFIER): a
[Line 10, Col 8] Token(SEPARATOR): ;
[Line 11, Col 1] Token(IDENTIFIER): y
[Line 11, Col 3] Token(OPERATOR): =
[Line 11, Col 5] Token(IDENTIFIER): y
[Line 11, Col 6] Token(OPERATOR): *
[Line 11, Col 7] Token(IDENTIFIER): a
[Line 11, Col 8] Token(SEPARATOR): ;
[Line 12, Col 1] Token(KEYWORD): exit
[Line 12, Col 5] Token(SEPARATOR): (
[Line 12, Col 6] Token(IDENTIFIER): y
[Line 12, Col 7] Token(SEPARATOR): )
[Line 12, Col 8] Token(SEPARATOR): ;
[Line 13, Col 1] Token(KEYWORD): exit
[Line 13, Col 5] Token(SEPARATOR): (
[Line 13, Col 6] Token(IDENTIFIER): x
[Line 13, Col 7] Token(SEPARATOR): )
[Line 13, Col 8] Token(SEPARATOR): ;
[Line 14, Col 1] Token(KEYWORD): exit
[Line 14, Col 5] Token(SEPARATOR): (
[Line 14, Col 6] Token(IDENTIFIER): a
[Line 14, Col 7] Token(OPERATOR): +
[Line 14, Col 8] Token(INT): 2
[Line 14, Col 9] Token(OPERATOR): *
[Line 14, Col 10] Token(INT): 3
[Line 14, Col 11] Token(OPERATOR): -
[Line 14, Col 12] Token(IDENTIFIER): a
[Line 14, Col 13] Token(OPERATOR): /
[Line 14, Col 14] Token(INT): 4
[Line 14, Col 15] Token(SEPARATOR): )
[Line 14, Col 16] Token(SEPARATOR): ;
[Line 15, Col 1] Token(KEYWORD): exit
[Line 15, Col 5] Token(SEPARATOR): (
[Line 15, Col 6] Token(INT): 123456789
[Line 15, Col 15] Token(SEPARATOR): )
[Line 15, Col 16] Token(SEPARATOR): ;
[Line 16, Col 1] Token(KEYWORD): exit
[Line 16, Col 5] Token(SEPARATOR): (
[Line 16, Col 6] Token(INT): 16
[Line 16, Col 10] Token(SEPARATOR): )
[Line 16, Col 11] Token(SEPARATOR): ;
[Line 17, Col 1] Token(KEYWORD): exit
[Line 17, Col 5] Token(SEPARATOR): (
[Line 17, Col 6] Token(INT): 4
[Line 17, Col 11] Token(SEPARATOR): )
[Line 17, Col 12] Token(SEPARATOR): ;
[Line 18, Col 1] Token(KEYWORD): exit
[Line 18, Col 5] Token(SEPARATOR): (
[Line 18, Col 6] Token(INT): 64
[Line 18, Col 10] Token(SEPARATOR): )
[Line 18, Col 11] Token(SEPARATOR): ;
[Line 19, Col 1] Token(KEYWORD): exit
[Line 19, Col 5] Token(SEPARATOR): (
[Line 19, Col 6] Token(INT): 100
[Line 19, Col 9] Token(SEPARATOR): )
[Line 19, Col 10] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x4a97eb0, current now = 0x4a97eb0
DEBUG LINK: linked stmt=0x4a98030, current now = 0x4a98030
DEBUG LINK: linked stmt=0x4a98220, current now = 0x4a98220
DEBUG LINK: linked stmt=0x4a98730, current now = 0x4a98730
DEBUG LINK: linked stmt=0x4a98ea0, current now = 0x4a98ea0
DEBUG LINK: linked stmt=0x4a98f60, current now = 0x4a98f60
DEBUG LINK: linked stmt=0x4a994e0, current now = 0x4a994e0
DEBUG LINK: linked stmt=0x4a99b90, current now = 0x4a99b90
DEBUG LINK: linked stmt=0x4a9a370, current now = 0x4a9a370
DEBUG LINK: linked stmt=0x4a9a880, current now = 0x4a9a880
DEBUG LINK: linked stmt=0x4a9ad90, current now = 0x4a9ad90
DEBUG LINK: linked stmt=0x4a9ae50, current now = 0x4a9ae50
DEBUG LINK: linked stmt=0x4a9b040, current now = 0x4a9b040
DEBUG LINK: linked stmt=0x4a9b230, current now = 0x4a9b230
DEBUG LINK: linked stmt=0x4a9bb60, current now = 0x4a9bb60
DEBUG LINK: linked stmt=0x4a9bc90, current now = 0x4a9bc90
DEBUG LINK: linked stmt=0x4a9bdc0, current now = 0x4a9bdc0
DEBUG LINK: linked stmt=0x4a9bef0, current now = 0x4a9bef0
DEBUG LINK: linked stmt=0x4a9c020, current now = 0x4a9c020

--- Syntax Tree ---
PROGRAM
  VAR_DECL: x
  VAR_DECL: a
    LITERAL_INT: 11
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: x
  EXIT_CALL
    LITERAL_INT: 85
  ASSIGNMENT: =
    IDENTIFIER: a
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 504
  ASSIGNMENT: =
    IDENTIFIER: y
  ASSIGNMENT: =
    IDENTIFIER: y
  EXIT_CALL
    LITERAL_INT: 6192
  EXIT_CALL
    LITERAL_INT: 72
  EXIT_CALL
    LITERAL_INT: 15
  EXIT_CALL
    LITERAL_INT: 123456789
  EXIT_CALL
    LITERAL_INT: 16
  EXIT_CALL
    LITERAL_INT: 4
  EXIT_CALL
    LITERAL_INT: 64
  EXIT_CALL
    LITERAL_INT: 100
Compilation successful. Output: generated

Exiting
==2535==
==2535== HEAP SUMMARY:
==2535==     in use at exit: 364 bytes in 11 blocks
==2535==   total heap usage: 284 allocs, 273 frees, 12,852 bytes allocated
==2535==
==2535== 40 bytes in 1 blocks are definitely lost in loss record 2 of 5
==2535==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2535==    by 0x10B18B: createNode (parser.c:170)
==2535==    by 0x10B389: createNodeFromToken (parser.c:251)
==2535==    by 0x10BA5B: parse_primary (parser.c:408)
==2535==    by 0x10BC73: parse_expression (parser.c:456)
==2535==    by 0x10C798: parse_assignment_statement (parser.c:655)
==2535==    by 0x10DAC3: parse_statement (parser.c:1013)
==2535==    by 0x10DE4B: parse (parser.c:1099)
==2535==    by 0x1095A6: main (main.c:43)
==2535==
==2535== 160 bytes in 4 blocks are definitely lost in loss record 4 of 5
==2535==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2535==    by 0x10B18B: createNode (parser.c:170)
==2535==    by 0x10BD8A: parse_expression (parser.c:482)
==2535==    by 0x10C798: parse_assignment_statement (parser.c:655)
==2535==    by 0x10DAC3: parse_statement (parser.c:1013)
==2535==    by 0x10DE4B: parse (parser.c:1099)
==2535==    by 0x1095A6: main (main.c:43)
==2535==
==2535== 164 (80 direct, 84 indirect) bytes in 2 blocks are definitely lost in loss record 5 of 5
==2535==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2535==    by 0x10B18B: createNode (parser.c:170)
==2535==    by 0x10C8E5: parse_assignment_statement (parser.c:676)
==2535==    by 0x10DAC3: parse_statement (parser.c:1013)
==2535==    by 0x10DE4B: parse (parser.c:1099)
==2535==    by 0x1095A6: main (main.c:43)
==2535==
==2535== LEAK SUMMARY:
==2535==    definitely lost: 280 bytes in 7 blocks
==2535==    indirectly lost: 84 bytes in 4 blocks
==2535==      possibly lost: 0 bytes in 0 blocks
==2535==    still reachable: 0 bytes in 0 blocks
==2535==         suppressed: 0 bytes in 0 blocks
==2535==
==2535== For lists of detected and suppressed errors, rerun with: -s
==2535== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ make clean
rm -rf build
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ make
mkdir -p build
mkdir -p build/obj
gcc -Wall -Wextra -g -O0 -c src/main.c -o build/obj/main.o
gcc -Wall -Wextra -g -O0 -c src/lexer/lexer.c -o build/obj/lexer.o
gcc -Wall -Wextra -g -O0 -c src/parser/parser.c -o build/obj/parser.o
gcc -Wall -Wextra -g -O0 -c src/codegen/codegen.c -o build/obj/codegen.o
gcc build/obj/main.o build/obj/lexer.o build/obj/parser.o build/obj/codegen.o    -o build/main -Wall -Wextra -g -O0
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test8.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = a at line 1 and col 5
Found character = b at line 1 and col 6
Found character = c at line 1 and col 7
[Line 1, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 1 and col 8
[Line 1, Col 9] Token(OPERATOR): =
Found whitespace at line 1 and col 10
Found number = 12 at line 1 and col 11
[Line 1, Col 11] Token(INT): 12
Found Semicolon at line 1 and col 13
[Line 1, Col 13] Token(SEPARATOR): ;
Found whitespace at line 1 and col 14
Found new line at line 1 and col 15
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = x at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): x
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 1 at line 2 and col 9
[Line 2, Col 9] Token(INT): 1
Found Semicolon at line 2 and col 10
[Line 2, Col 10] Token(SEPARATOR): ;
Found whitespace at line 2 and col 11
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): +=
Found whitespace at line 3 and col 5
Found number = 5 at line 3 and col 6
[Line 3, Col 6] Token(INT): 5
Found Semicolon at line 3 and col 7
[Line 3, Col 7] Token(SEPARATOR): ;
Found whitespace at line 3 and col 8
Found new line at line 3 and col 9
Found keyword 'int' at line 4 and col 1
[Line 4, Col 1] Token(KEYWORD): int
Found whitespace at line 4 and col 4
Found character = y at line 4 and col 5
[Line 4, Col 5] Token(IDENTIFIER): y
Found whitespace at line 4 and col 6
[Line 4, Col 7] Token(OPERATOR): =
Found whitespace at line 4 and col 8
Found character = x at line 4 and col 9
[Line 4, Col 9] Token(IDENTIFIER): x
Found whitespace at line 4 and col 10
[Line 4, Col 11] Token(OPERATOR): <<
Found whitespace at line 4 and col 13
Found number = 1 at line 4 and col 14
[Line 4, Col 14] Token(INT): 1
Found Semicolon at line 4 and col 15
[Line 4, Col 15] Token(SEPARATOR): ;
Found whitespace at line 4 and col 16
Found new line at line 4 and col 17
Found keyword 'int' at line 5 and col 1
[Line 5, Col 1] Token(KEYWORD): int
Found whitespace at line 5 and col 4
Found character = z at line 5 and col 5
[Line 5, Col 5] Token(IDENTIFIER): z
Found whitespace at line 5 and col 6
[Line 5, Col 7] Token(OPERATOR): =
Found whitespace at line 5 and col 8
Found number = 1 at line 5 and col 9
[Line 5, Col 9] Token(INT): 1
Found Semicolon at line 5 and col 10
[Line 5, Col 10] Token(SEPARATOR): ;
Found whitespace at line 5 and col 11
Found new line at line 5 and col 12
Found keyword 'if' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): if
Found whitespace at line 6 and col 3
Found OPEN_PARENTHESIS ( at line 6 and col 4
[Line 6, Col 4] Token(SEPARATOR): (
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = y at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
Found number = 5 at line 6 and col 8
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
Found number = 1 at line 6 and col 11
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
Found number = 1 at line 6 and col 13
[Line 6, Col 13] Token(INT): 1
Found CLOSED_PARENTHESIS ) at line 6 and col 14
[Line 6, Col 14] Token(SEPARATOR): )
Found whitespace at line 6 and col 15
[Line 6, Col 16] Token(OPERATOR): -
Found whitespace at line 6 and col 17
Found number = 6 at line 6 and col 18
[Line 6, Col 18] Token(INT): 6
Found whitespace at line 6 and col 19
[Line 6, Col 20] Token(OPERATOR): ==
Found whitespace at line 6 and col 22
Found character = z at line 6 and col 23
[Line 6, Col 23] Token(IDENTIFIER): z
Found CLOSED_PARENTHESIS ) at line 6 and col 24
[Line 6, Col 24] Token(SEPARATOR): )
Found whitespace at line 6 and col 25
Found OPEN_PARENTHESIS { at line 6 and col 26
[Line 6, Col 26] Token(SEPARATOR): {
Found whitespace at line 6 and col 27
Found new line at line 6 and col 28
Found whitespace at line 7 and col 1
Found whitespace at line 7 and col 2
Found whitespace at line 7 and col 3
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
Found character = b at line 7 and col 6
Found character = c at line 7 and col 7
[Line 7, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 7 and col 8
[Line 7, Col 9] Token(OPERATOR): <<=
Found whitespace at line 7 and col 12
Found number = 1 at line 7 and col 13
[Line 7, Col 13] Token(INT): 1
Found Semicolon at line 7 and col 14
[Line 7, Col 14] Token(SEPARATOR): ;
Found whitespace at line 7 and col 15
Found new line at line 7 and col 16
Found whitespace at line 8 and col 1
Found whitespace at line 8 and col 2
Found whitespace at line 8 and col 3
Found whitespace at line 8 and col 4
Found keyword 'exit' at line 8 and col 5
[Line 8, Col 5] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 8 and col 9
[Line 8, Col 9] Token(SEPARATOR): (
Found character = a at line 8 and col 10
Found character = b at line 8 and col 11
Found character = c at line 8 and col 12
[Line 8, Col 10] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 8 and col 13
[Line 8, Col 13] Token(SEPARATOR): )
Found Semicolon at line 8 and col 14
[Line 8, Col 14] Token(SEPARATOR): ;
Found whitespace at line 8 and col 15
Found whitespace at line 8 and col 16
Found new line at line 8 and col 17
Found CLOSED_PARENTHESIS } at line 9 and col 1
[Line 9, Col 1] Token(SEPARATOR): }
Found whitespace at line 9 and col 2
Found whitespace at line 9 and col 3
Found whitespace at line 9 and col 4
Found new line at line 9 and col 5
Found whitespace at line 10 and col 1
Found new line at line 10 and col 2
Found keyword 'exit' at line 11 and col 1
[Line 11, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 11 and col 5
[Line 11, Col 5] Token(SEPARATOR): (
Found number = 4096 at line 11 and col 6
[Line 11, Col 6] Token(INT): 4096
Found whitespace at line 11 and col 12
Found new line at line 11 and col 13
Found CLOSED_PARENTHESIS ) at line 12 and col 1
[Line 12, Col 1] Token(SEPARATOR): )
Found Semicolon at line 12 and col 2
[Line 12, Col 2] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): abc
[Line 1, Col 9] Token(OPERATOR): =
[Line 1, Col 11] Token(INT): 12
[Line 1, Col 13] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): x
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 1
[Line 2, Col 10] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): +=
[Line 3, Col 6] Token(INT): 5
[Line 3, Col 7] Token(SEPARATOR): ;
[Line 4, Col 1] Token(KEYWORD): int
[Line 4, Col 5] Token(IDENTIFIER): y
[Line 4, Col 7] Token(OPERATOR): =
[Line 4, Col 9] Token(IDENTIFIER): x
[Line 4, Col 11] Token(OPERATOR): <<
[Line 4, Col 14] Token(INT): 1
[Line 4, Col 15] Token(SEPARATOR): ;
[Line 5, Col 1] Token(KEYWORD): int
[Line 5, Col 5] Token(IDENTIFIER): z
[Line 5, Col 7] Token(OPERATOR): =
[Line 5, Col 9] Token(INT): 1
[Line 5, Col 10] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): if
[Line 6, Col 4] Token(SEPARATOR): (
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
[Line 6, Col 13] Token(INT): 1
[Line 6, Col 14] Token(SEPARATOR): )
[Line 6, Col 16] Token(OPERATOR): -
[Line 6, Col 18] Token(INT): 6
[Line 6, Col 20] Token(OPERATOR): ==
[Line 6, Col 23] Token(IDENTIFIER): z
[Line 6, Col 24] Token(SEPARATOR): )
[Line 6, Col 26] Token(SEPARATOR): {
[Line 7, Col 5] Token(IDENTIFIER): abc
[Line 7, Col 9] Token(OPERATOR): <<=
[Line 7, Col 13] Token(INT): 1
[Line 7, Col 14] Token(SEPARATOR): ;
[Line 8, Col 5] Token(KEYWORD): exit
[Line 8, Col 9] Token(SEPARATOR): (
[Line 8, Col 10] Token(IDENTIFIER): abc
[Line 8, Col 13] Token(SEPARATOR): )
[Line 8, Col 14] Token(SEPARATOR): ;
[Line 9, Col 1] Token(SEPARATOR): }
[Line 11, Col 1] Token(KEYWORD): exit
[Line 11, Col 5] Token(SEPARATOR): (
[Line 11, Col 6] Token(INT): 4096
[Line 12, Col 1] Token(SEPARATOR): )
[Line 12, Col 2] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x643f36f37950, current now = 0x643f36f37950
DEBUG LINK: linked stmt=0x643f36f379f0, current now = 0x643f36f379f0
Segmentation fault (core dumped)
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ make clean
rm -rf build
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ make
mkdir -p build
mkdir -p build/obj
gcc -Wall -Wextra -g -O0 -c src/main.c -o build/obj/main.o
gcc -Wall -Wextra -g -O0 -c src/lexer/lexer.c -o build/obj/lexer.o
gcc -Wall -Wextra -g -O0 -c src/parser/parser.c -o build/obj/parser.o
gcc -Wall -Wextra -g -O0 -c src/codegen/codegen.c -o build/obj/codegen.o
gcc build/obj/main.o build/obj/lexer.o build/obj/parser.o build/obj/codegen.o    -o build/main -Wall -Wextra -g -O0
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test8.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = a at line 1 and col 5
Found character = b at line 1 and col 6
Found character = c at line 1 and col 7
[Line 1, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 1 and col 8
[Line 1, Col 9] Token(OPERATOR): =
Found whitespace at line 1 and col 10
Found number = 12 at line 1 and col 11
[Line 1, Col 11] Token(INT): 12
Found Semicolon at line 1 and col 13
[Line 1, Col 13] Token(SEPARATOR): ;
Found whitespace at line 1 and col 14
Found new line at line 1 and col 15
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = x at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): x
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 1 at line 2 and col 9
[Line 2, Col 9] Token(INT): 1
Found Semicolon at line 2 and col 10
[Line 2, Col 10] Token(SEPARATOR): ;
Found whitespace at line 2 and col 11
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): +=
Found whitespace at line 3 and col 5
Found number = 5 at line 3 and col 6
[Line 3, Col 6] Token(INT): 5
Found Semicolon at line 3 and col 7
[Line 3, Col 7] Token(SEPARATOR): ;
Found whitespace at line 3 and col 8
Found new line at line 3 and col 9
Found keyword 'int' at line 4 and col 1
[Line 4, Col 1] Token(KEYWORD): int
Found whitespace at line 4 and col 4
Found character = y at line 4 and col 5
[Line 4, Col 5] Token(IDENTIFIER): y
Found whitespace at line 4 and col 6
[Line 4, Col 7] Token(OPERATOR): =
Found whitespace at line 4 and col 8
Found character = x at line 4 and col 9
[Line 4, Col 9] Token(IDENTIFIER): x
Found whitespace at line 4 and col 10
[Line 4, Col 11] Token(OPERATOR): <<
Found whitespace at line 4 and col 13
Found number = 1 at line 4 and col 14
[Line 4, Col 14] Token(INT): 1
Found Semicolon at line 4 and col 15
[Line 4, Col 15] Token(SEPARATOR): ;
Found whitespace at line 4 and col 16
Found new line at line 4 and col 17
Found keyword 'int' at line 5 and col 1
[Line 5, Col 1] Token(KEYWORD): int
Found whitespace at line 5 and col 4
Found character = z at line 5 and col 5
[Line 5, Col 5] Token(IDENTIFIER): z
Found whitespace at line 5 and col 6
[Line 5, Col 7] Token(OPERATOR): =
Found whitespace at line 5 and col 8
Found number = 1 at line 5 and col 9
[Line 5, Col 9] Token(INT): 1
Found Semicolon at line 5 and col 10
[Line 5, Col 10] Token(SEPARATOR): ;
Found whitespace at line 5 and col 11
Found new line at line 5 and col 12
Found keyword 'if' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): if
Found whitespace at line 6 and col 3
Found OPEN_PARENTHESIS ( at line 6 and col 4
[Line 6, Col 4] Token(SEPARATOR): (
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = y at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
Found number = 5 at line 6 and col 8
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
Found number = 1 at line 6 and col 11
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
Found number = 1 at line 6 and col 13
[Line 6, Col 13] Token(INT): 1
Found CLOSED_PARENTHESIS ) at line 6 and col 14
[Line 6, Col 14] Token(SEPARATOR): )
Found whitespace at line 6 and col 15
[Line 6, Col 16] Token(OPERATOR): -
Found whitespace at line 6 and col 17
Found number = 6 at line 6 and col 18
[Line 6, Col 18] Token(INT): 6
Found whitespace at line 6 and col 19
[Line 6, Col 20] Token(OPERATOR): ==
Found whitespace at line 6 and col 22
Found character = z at line 6 and col 23
[Line 6, Col 23] Token(IDENTIFIER): z
Found CLOSED_PARENTHESIS ) at line 6 and col 24
[Line 6, Col 24] Token(SEPARATOR): )
Found whitespace at line 6 and col 25
Found OPEN_PARENTHESIS { at line 6 and col 26
[Line 6, Col 26] Token(SEPARATOR): {
Found whitespace at line 6 and col 27
Found new line at line 6 and col 28
Found whitespace at line 7 and col 1
Found whitespace at line 7 and col 2
Found whitespace at line 7 and col 3
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
Found character = b at line 7 and col 6
Found character = c at line 7 and col 7
[Line 7, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 7 and col 8
[Line 7, Col 9] Token(OPERATOR): <<=
Found whitespace at line 7 and col 12
Found number = 1 at line 7 and col 13
[Line 7, Col 13] Token(INT): 1
Found Semicolon at line 7 and col 14
[Line 7, Col 14] Token(SEPARATOR): ;
Found whitespace at line 7 and col 15
Found new line at line 7 and col 16
Found whitespace at line 8 and col 1
Found whitespace at line 8 and col 2
Found whitespace at line 8 and col 3
Found whitespace at line 8 and col 4
Found keyword 'exit' at line 8 and col 5
[Line 8, Col 5] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 8 and col 9
[Line 8, Col 9] Token(SEPARATOR): (
Found character = a at line 8 and col 10
Found character = b at line 8 and col 11
Found character = c at line 8 and col 12
[Line 8, Col 10] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 8 and col 13
[Line 8, Col 13] Token(SEPARATOR): )
Found Semicolon at line 8 and col 14
[Line 8, Col 14] Token(SEPARATOR): ;
Found whitespace at line 8 and col 15
Found whitespace at line 8 and col 16
Found new line at line 8 and col 17
Found CLOSED_PARENTHESIS } at line 9 and col 1
[Line 9, Col 1] Token(SEPARATOR): }
Found whitespace at line 9 and col 2
Found whitespace at line 9 and col 3
Found whitespace at line 9 and col 4
Found new line at line 9 and col 5
Found whitespace at line 10 and col 1
Found new line at line 10 and col 2
Found keyword 'exit' at line 11 and col 1
[Line 11, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 11 and col 5
[Line 11, Col 5] Token(SEPARATOR): (
Found number = 4096 at line 11 and col 6
[Line 11, Col 6] Token(INT): 4096
Found whitespace at line 11 and col 12
Found new line at line 11 and col 13
Found CLOSED_PARENTHESIS ) at line 12 and col 1
[Line 12, Col 1] Token(SEPARATOR): )
Found Semicolon at line 12 and col 2
[Line 12, Col 2] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): abc
[Line 1, Col 9] Token(OPERATOR): =
[Line 1, Col 11] Token(INT): 12
[Line 1, Col 13] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): x
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 1
[Line 2, Col 10] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): +=
[Line 3, Col 6] Token(INT): 5
[Line 3, Col 7] Token(SEPARATOR): ;
[Line 4, Col 1] Token(KEYWORD): int
[Line 4, Col 5] Token(IDENTIFIER): y
[Line 4, Col 7] Token(OPERATOR): =
[Line 4, Col 9] Token(IDENTIFIER): x
[Line 4, Col 11] Token(OPERATOR): <<
[Line 4, Col 14] Token(INT): 1
[Line 4, Col 15] Token(SEPARATOR): ;
[Line 5, Col 1] Token(KEYWORD): int
[Line 5, Col 5] Token(IDENTIFIER): z
[Line 5, Col 7] Token(OPERATOR): =
[Line 5, Col 9] Token(INT): 1
[Line 5, Col 10] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): if
[Line 6, Col 4] Token(SEPARATOR): (
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
[Line 6, Col 13] Token(INT): 1
[Line 6, Col 14] Token(SEPARATOR): )
[Line 6, Col 16] Token(OPERATOR): -
[Line 6, Col 18] Token(INT): 6
[Line 6, Col 20] Token(OPERATOR): ==
[Line 6, Col 23] Token(IDENTIFIER): z
[Line 6, Col 24] Token(SEPARATOR): )
[Line 6, Col 26] Token(SEPARATOR): {
[Line 7, Col 5] Token(IDENTIFIER): abc
[Line 7, Col 9] Token(OPERATOR): <<=
[Line 7, Col 13] Token(INT): 1
[Line 7, Col 14] Token(SEPARATOR): ;
[Line 8, Col 5] Token(KEYWORD): exit
[Line 8, Col 9] Token(SEPARATOR): (
[Line 8, Col 10] Token(IDENTIFIER): abc
[Line 8, Col 13] Token(SEPARATOR): )
[Line 8, Col 14] Token(SEPARATOR): ;
[Line 9, Col 1] Token(SEPARATOR): }
[Line 11, Col 1] Token(KEYWORD): exit
[Line 11, Col 5] Token(SEPARATOR): (
[Line 11, Col 6] Token(INT): 4096
[Line 12, Col 1] Token(SEPARATOR): )
[Line 12, Col 2] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x60732c1c5950, current now = 0x60732c1c5950
DEBUG LINK: linked stmt=0x60732c1c59f0, current now = 0x60732c1c59f0
DEBUG LINK: linked stmt=0x60732c1c5b10, current now = 0x60732c1c5b10
DEBUG LINK: linked stmt=0x60732c1c5c00, current now = 0x60732c1c5c00
DEBUG LINK: linked stmt=0x60732c1c5cf0, current now = 0x60732c1c5cf0
After parse_expression - condition: Node type 0, int_val=1
Condition parsed. Current token: )
Then block parsed. Current token: exit
DEBUG IF_SUBTREE: if_node=0x60732c1c63c0, cond=0x60732c1c6050, then_block=0x60732c1c5f60, then_block->right=(nil)
DEBUG LINK: linked stmt=0x60732c1c63c0, current now = 0x60732c1c63c0
DEBUG LINK: linked stmt=0x60732c1c6440, current now = 0x60732c1c6440

--- Syntax Tree ---
PROGRAM
  VAR_DECL: abc
    LITERAL_INT: 12
  VAR_DECL: x
    LITERAL_INT: 1
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 12
  VAR_DECL: z
    LITERAL_INT: 1
  IF_STATEMENT
    CONDITION:
      LITERAL_INT: 1
      BLOCK {
        ASSIGNMENT: =
          IDENTIFIER: abc
        EXIT_CALL
          LITERAL_INT: 24
      } // END BLOCK
  EXIT_CALL
    LITERAL_INT: 4096
Compilation successful. Output: generated

Exiting
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ valgrind --leak-check=full ./build/main test5.tc
==2636== Memcheck, a memory error detector
==2636== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2636== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2636== Command: ./build/main test5.tc
==2636==
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = x at line 1 and col 5
[Line 1, Col 5] Token(IDENTIFIER): x
Found Semicolon at line 1 and col 6
[Line 1, Col 6] Token(SEPARATOR): ;
Found new line at line 1 and col 7
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = a at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): a
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 11 at line 2 and col 9
[Line 2, Col 9] Token(INT): 11
Found Semicolon at line 2 and col 11
[Line 2, Col 11] Token(SEPARATOR): ;
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): =
Found whitespace at line 3 and col 4
Found number = 4 at line 3 and col 5
[Line 3, Col 5] Token(INT): 4
Found Semicolon at line 3 and col 6
[Line 3, Col 6] Token(SEPARATOR): ;
Found new line at line 3 and col 7
Found character = x at line 4 and col 1
[Line 4, Col 1] Token(IDENTIFIER): x
Found whitespace at line 4 and col 2
[Line 4, Col 3] Token(OPERATOR): *=
Found whitespace at line 4 and col 5
Found number = 2 at line 4 and col 6
[Line 4, Col 6] Token(INT): 2
[Line 4, Col 7] Token(OPERATOR): +
Found character = a at line 4 and col 8
[Line 4, Col 8] Token(IDENTIFIER): a
Found Semicolon at line 4 and col 9
[Line 4, Col 9] Token(SEPARATOR): ;
Found whitespace at line 4 and col 10
Found whitespace at line 4 and col 11
Found whitespace at line 4 and col 12
Found new line at line 4 and col 13
Found character = x at line 5 and col 1
[Line 5, Col 1] Token(IDENTIFIER): x
Found whitespace at line 5 and col 2
[Line 5, Col 3] Token(OPERATOR): +=
Found whitespace at line 5 and col 5
Found character = a at line 5 and col 6
[Line 5, Col 6] Token(IDENTIFIER): a
Found whitespace at line 5 and col 7
[Line 5, Col 8] Token(OPERATOR): +
Found whitespace at line 5 and col 9
Found character = a at line 5 and col 10
[Line 5, Col 10] Token(IDENTIFIER): a
[Line 5, Col 11] Token(OPERATOR): *
Found number = 2 at line 5 and col 12
[Line 5, Col 12] Token(INT): 2
Found Semicolon at line 5 and col 13
[Line 5, Col 13] Token(SEPARATOR): ;
Found new line at line 5 and col 14
Found keyword 'exit' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = x at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): x
Found CLOSED_PARENTHESIS ) at line 6 and col 7
[Line 6, Col 7] Token(SEPARATOR): )
Found Semicolon at line 6 and col 8
[Line 6, Col 8] Token(SEPARATOR): ;
Found new line at line 6 and col 9
Found character = a at line 7 and col 1
[Line 7, Col 1] Token(IDENTIFIER): a
Found whitespace at line 7 and col 2
[Line 7, Col 3] Token(OPERATOR): =
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
[Line 7, Col 5] Token(IDENTIFIER): a
[Line 7, Col 6] Token(OPERATOR): +
Found number = 1 at line 7 and col 7
[Line 7, Col 7] Token(INT): 1
Found Semicolon at line 7 and col 8
[Line 7, Col 8] Token(SEPARATOR): ;
Found new line at line 7 and col 9
Found character = x at line 8 and col 1
[Line 8, Col 1] Token(IDENTIFIER): x
Found whitespace at line 8 and col 2
[Line 8, Col 3] Token(OPERATOR): =
Found whitespace at line 8 and col 4
Found character = a at line 8 and col 5
[Line 8, Col 5] Token(IDENTIFIER): a
[Line 8, Col 6] Token(OPERATOR): +
Found character = a at line 8 and col 7
[Line 8, Col 7] Token(IDENTIFIER): a
[Line 8, Col 8] Token(OPERATOR): *
Found number = 5 at line 8 and col 9
[Line 8, Col 9] Token(INT): 5
Found Semicolon at line 8 and col 10
[Line 8, Col 10] Token(SEPARATOR): ;
Found new line at line 8 and col 11
Found keyword 'int' at line 9 and col 1
[Line 9, Col 1] Token(KEYWORD): int
Found whitespace at line 9 and col 4
Found character = y at line 9 and col 5
[Line 9, Col 5] Token(IDENTIFIER): y
Found whitespace at line 9 and col 6
[Line 9, Col 7] Token(OPERATOR): =
Found whitespace at line 9 and col 8
Found character = x at line 9 and col 9
[Line 9, Col 9] Token(IDENTIFIER): x
Found whitespace at line 9 and col 10
[Line 9, Col 11] Token(OPERATOR): +
Found whitespace at line 9 and col 12
Found number = 2 at line 9 and col 13
[Line 9, Col 13] Token(INT): 2
Found whitespace at line 9 and col 14
[Line 9, Col 15] Token(OPERATOR): *
Found whitespace at line 9 and col 16
Found number = 3 at line 9 and col 17
[Line 9, Col 17] Token(INT): 3
[Line 9, Col 18] Token(OPERATOR): *
Found character = x at line 9 and col 19
[Line 9, Col 19] Token(IDENTIFIER): x
Found Semicolon at line 9 and col 20
[Line 9, Col 20] Token(SEPARATOR): ;
Found new line at line 9 and col 21
Found character = y at line 10 and col 1
[Line 10, Col 1] Token(IDENTIFIER): y
Found whitespace at line 10 and col 2
[Line 10, Col 3] Token(OPERATOR): =
Found whitespace at line 10 and col 4
Found character = y at line 10 and col 5
[Line 10, Col 5] Token(IDENTIFIER): y
[Line 10, Col 6] Token(OPERATOR): +
Found character = a at line 10 and col 7
[Line 10, Col 7] Token(IDENTIFIER): a
Found Semicolon at line 10 and col 8
[Line 10, Col 8] Token(SEPARATOR): ;
Found new line at line 10 and col 9
Found character = y at line 11 and col 1
[Line 11, Col 1] Token(IDENTIFIER): y
Found whitespace at line 11 and col 2
[Line 11, Col 3] Token(OPERATOR): =
Found whitespace at line 11 and col 4
Found character = y at line 11 and col 5
[Line 11, Col 5] Token(IDENTIFIER): y
[Line 11, Col 6] Token(OPERATOR): *
Found character = a at line 11 and col 7
[Line 11, Col 7] Token(IDENTIFIER): a
Found Semicolon at line 11 and col 8
[Line 11, Col 8] Token(SEPARATOR): ;
Found new line at line 11 and col 9
Found keyword 'exit' at line 12 and col 1
[Line 12, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 12 and col 5
[Line 12, Col 5] Token(SEPARATOR): (
Found character = y at line 12 and col 6
[Line 12, Col 6] Token(IDENTIFIER): y
Found CLOSED_PARENTHESIS ) at line 12 and col 7
[Line 12, Col 7] Token(SEPARATOR): )
Found Semicolon at line 12 and col 8
[Line 12, Col 8] Token(SEPARATOR): ;
Found new line at line 12 and col 9
Found keyword 'exit' at line 13 and col 1
[Line 13, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 13 and col 5
[Line 13, Col 5] Token(SEPARATOR): (
Found character = x at line 13 and col 6
[Line 13, Col 6] Token(IDENTIFIER): x
Found CLOSED_PARENTHESIS ) at line 13 and col 7
[Line 13, Col 7] Token(SEPARATOR): )
Found Semicolon at line 13 and col 8
[Line 13, Col 8] Token(SEPARATOR): ;
Found new line at line 13 and col 9
Found keyword 'exit' at line 14 and col 1
[Line 14, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 14 and col 5
[Line 14, Col 5] Token(SEPARATOR): (
Found character = a at line 14 and col 6
[Line 14, Col 6] Token(IDENTIFIER): a
[Line 14, Col 7] Token(OPERATOR): +
Found number = 2 at line 14 and col 8
[Line 14, Col 8] Token(INT): 2
[Line 14, Col 9] Token(OPERATOR): *
Found number = 3 at line 14 and col 10
[Line 14, Col 10] Token(INT): 3
[Line 14, Col 11] Token(OPERATOR): -
Found character = a at line 14 and col 12
[Line 14, Col 12] Token(IDENTIFIER): a
[Line 14, Col 13] Token(OPERATOR): /
Found number = 4 at line 14 and col 14
[Line 14, Col 14] Token(INT): 4
Found CLOSED_PARENTHESIS ) at line 14 and col 15
[Line 14, Col 15] Token(SEPARATOR): )
Found Semicolon at line 14 and col 16
[Line 14, Col 16] Token(SEPARATOR): ;
Found new line at line 14 and col 17
Found keyword 'exit' at line 15 and col 1
[Line 15, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 15 and col 5
[Line 15, Col 5] Token(SEPARATOR): (
Found number = 123456789 at line 15 and col 6
[Line 15, Col 6] Token(INT): 123456789
Found CLOSED_PARENTHESIS ) at line 15 and col 15
[Line 15, Col 15] Token(SEPARATOR): )
Found Semicolon at line 15 and col 16
[Line 15, Col 16] Token(SEPARATOR): ;
Found new line at line 15 and col 17
Found keyword 'exit' at line 16 and col 1
[Line 16, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 16 and col 5
[Line 16, Col 5] Token(SEPARATOR): (
Found number = 16 at line 16 and col 6
[Line 16, Col 6] Token(INT): 16
Found CLOSED_PARENTHESIS ) at line 16 and col 10
[Line 16, Col 10] Token(SEPARATOR): )
Found Semicolon at line 16 and col 11
[Line 16, Col 11] Token(SEPARATOR): ;
Found new line at line 16 and col 12
Found keyword 'exit' at line 17 and col 1
[Line 17, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 17 and col 5
[Line 17, Col 5] Token(SEPARATOR): (
Found number = 4 at line 17 and col 6
[Line 17, Col 6] Token(INT): 4
Found CLOSED_PARENTHESIS ) at line 17 and col 11
[Line 17, Col 11] Token(SEPARATOR): )
Found Semicolon at line 17 and col 12
[Line 17, Col 12] Token(SEPARATOR): ;
Found new line at line 17 and col 13
Found keyword 'exit' at line 18 and col 1
[Line 18, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 18 and col 5
[Line 18, Col 5] Token(SEPARATOR): (
Found number = 64 at line 18 and col 6
[Line 18, Col 6] Token(INT): 64
Found CLOSED_PARENTHESIS ) at line 18 and col 10
[Line 18, Col 10] Token(SEPARATOR): )
Found Semicolon at line 18 and col 11
[Line 18, Col 11] Token(SEPARATOR): ;
Found new line at line 18 and col 12
Found keyword 'exit' at line 19 and col 1
[Line 19, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 19 and col 5
[Line 19, Col 5] Token(SEPARATOR): (
Found number = 100 at line 19 and col 6
[Line 19, Col 6] Token(INT): 100
Found CLOSED_PARENTHESIS ) at line 19 and col 9
[Line 19, Col 9] Token(SEPARATOR): )
Found Semicolon at line 19 and col 10
[Line 19, Col 10] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): x
[Line 1, Col 6] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): a
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 11
[Line 2, Col 11] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): =
[Line 3, Col 5] Token(INT): 4
[Line 3, Col 6] Token(SEPARATOR): ;
[Line 4, Col 1] Token(IDENTIFIER): x
[Line 4, Col 3] Token(OPERATOR): *=
[Line 4, Col 6] Token(INT): 2
[Line 4, Col 7] Token(OPERATOR): +
[Line 4, Col 8] Token(IDENTIFIER): a
[Line 4, Col 9] Token(SEPARATOR): ;
[Line 5, Col 1] Token(IDENTIFIER): x
[Line 5, Col 3] Token(OPERATOR): +=
[Line 5, Col 6] Token(IDENTIFIER): a
[Line 5, Col 8] Token(OPERATOR): +
[Line 5, Col 10] Token(IDENTIFIER): a
[Line 5, Col 11] Token(OPERATOR): *
[Line 5, Col 12] Token(INT): 2
[Line 5, Col 13] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): exit
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): x
[Line 6, Col 7] Token(SEPARATOR): )
[Line 6, Col 8] Token(SEPARATOR): ;
[Line 7, Col 1] Token(IDENTIFIER): a
[Line 7, Col 3] Token(OPERATOR): =
[Line 7, Col 5] Token(IDENTIFIER): a
[Line 7, Col 6] Token(OPERATOR): +
[Line 7, Col 7] Token(INT): 1
[Line 7, Col 8] Token(SEPARATOR): ;
[Line 8, Col 1] Token(IDENTIFIER): x
[Line 8, Col 3] Token(OPERATOR): =
[Line 8, Col 5] Token(IDENTIFIER): a
[Line 8, Col 6] Token(OPERATOR): +
[Line 8, Col 7] Token(IDENTIFIER): a
[Line 8, Col 8] Token(OPERATOR): *
[Line 8, Col 9] Token(INT): 5
[Line 8, Col 10] Token(SEPARATOR): ;
[Line 9, Col 1] Token(KEYWORD): int
[Line 9, Col 5] Token(IDENTIFIER): y
[Line 9, Col 7] Token(OPERATOR): =
[Line 9, Col 9] Token(IDENTIFIER): x
[Line 9, Col 11] Token(OPERATOR): +
[Line 9, Col 13] Token(INT): 2
[Line 9, Col 15] Token(OPERATOR): *
[Line 9, Col 17] Token(INT): 3
[Line 9, Col 18] Token(OPERATOR): *
[Line 9, Col 19] Token(IDENTIFIER): x
[Line 9, Col 20] Token(SEPARATOR): ;
[Line 10, Col 1] Token(IDENTIFIER): y
[Line 10, Col 3] Token(OPERATOR): =
[Line 10, Col 5] Token(IDENTIFIER): y
[Line 10, Col 6] Token(OPERATOR): +
[Line 10, Col 7] Token(IDENTIFIER): a
[Line 10, Col 8] Token(SEPARATOR): ;
[Line 11, Col 1] Token(IDENTIFIER): y
[Line 11, Col 3] Token(OPERATOR): =
[Line 11, Col 5] Token(IDENTIFIER): y
[Line 11, Col 6] Token(OPERATOR): *
[Line 11, Col 7] Token(IDENTIFIER): a
[Line 11, Col 8] Token(SEPARATOR): ;
[Line 12, Col 1] Token(KEYWORD): exit
[Line 12, Col 5] Token(SEPARATOR): (
[Line 12, Col 6] Token(IDENTIFIER): y
[Line 12, Col 7] Token(SEPARATOR): )
[Line 12, Col 8] Token(SEPARATOR): ;
[Line 13, Col 1] Token(KEYWORD): exit
[Line 13, Col 5] Token(SEPARATOR): (
[Line 13, Col 6] Token(IDENTIFIER): x
[Line 13, Col 7] Token(SEPARATOR): )
[Line 13, Col 8] Token(SEPARATOR): ;
[Line 14, Col 1] Token(KEYWORD): exit
[Line 14, Col 5] Token(SEPARATOR): (
[Line 14, Col 6] Token(IDENTIFIER): a
[Line 14, Col 7] Token(OPERATOR): +
[Line 14, Col 8] Token(INT): 2
[Line 14, Col 9] Token(OPERATOR): *
[Line 14, Col 10] Token(INT): 3
[Line 14, Col 11] Token(OPERATOR): -
[Line 14, Col 12] Token(IDENTIFIER): a
[Line 14, Col 13] Token(OPERATOR): /
[Line 14, Col 14] Token(INT): 4
[Line 14, Col 15] Token(SEPARATOR): )
[Line 14, Col 16] Token(SEPARATOR): ;
[Line 15, Col 1] Token(KEYWORD): exit
[Line 15, Col 5] Token(SEPARATOR): (
[Line 15, Col 6] Token(INT): 123456789
[Line 15, Col 15] Token(SEPARATOR): )
[Line 15, Col 16] Token(SEPARATOR): ;
[Line 16, Col 1] Token(KEYWORD): exit
[Line 16, Col 5] Token(SEPARATOR): (
[Line 16, Col 6] Token(INT): 16
[Line 16, Col 10] Token(SEPARATOR): )
[Line 16, Col 11] Token(SEPARATOR): ;
[Line 17, Col 1] Token(KEYWORD): exit
[Line 17, Col 5] Token(SEPARATOR): (
[Line 17, Col 6] Token(INT): 4
[Line 17, Col 11] Token(SEPARATOR): )
[Line 17, Col 12] Token(SEPARATOR): ;
[Line 18, Col 1] Token(KEYWORD): exit
[Line 18, Col 5] Token(SEPARATOR): (
[Line 18, Col 6] Token(INT): 64
[Line 18, Col 10] Token(SEPARATOR): )
[Line 18, Col 11] Token(SEPARATOR): ;
[Line 19, Col 1] Token(KEYWORD): exit
[Line 19, Col 5] Token(SEPARATOR): (
[Line 19, Col 6] Token(INT): 100
[Line 19, Col 9] Token(SEPARATOR): )
[Line 19, Col 10] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x4a97eb0, current now = 0x4a97eb0
DEBUG LINK: linked stmt=0x4a98030, current now = 0x4a98030
DEBUG LINK: linked stmt=0x4a98220, current now = 0x4a98220
DEBUG LINK: linked stmt=0x4a987d0, current now = 0x4a987d0
DEBUG LINK: linked stmt=0x4a99080, current now = 0x4a99080
DEBUG LINK: linked stmt=0x4a99140, current now = 0x4a99140
DEBUG LINK: linked stmt=0x4a997b0, current now = 0x4a997b0
DEBUG LINK: linked stmt=0x4a99fa0, current now = 0x4a99fa0
DEBUG LINK: linked stmt=0x4a9a910, current now = 0x4a9a910
DEBUG LINK: linked stmt=0x4a9af10, current now = 0x4a9af10
DEBUG LINK: linked stmt=0x4a9b510, current now = 0x4a9b510
DEBUG LINK: linked stmt=0x4a9b5d0, current now = 0x4a9b5d0
DEBUG LINK: linked stmt=0x4a9b810, current now = 0x4a9b810
DEBUG LINK: linked stmt=0x4a9ba50, current now = 0x4a9ba50
DEBUG LINK: linked stmt=0x4a9c560, current now = 0x4a9c560
DEBUG LINK: linked stmt=0x4a9c690, current now = 0x4a9c690
DEBUG LINK: linked stmt=0x4a9c7c0, current now = 0x4a9c7c0
DEBUG LINK: linked stmt=0x4a9c8f0, current now = 0x4a9c8f0
DEBUG LINK: linked stmt=0x4a9ca20, current now = 0x4a9ca20

--- Syntax Tree ---
PROGRAM
  VAR_DECL: x
  VAR_DECL: a
    LITERAL_INT: 11
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: x
  EXIT_CALL
    LITERAL_INT: 85
  ASSIGNMENT: =
    IDENTIFIER: a
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 504
  ASSIGNMENT: =
    IDENTIFIER: y
  ASSIGNMENT: =
    IDENTIFIER: y
  EXIT_CALL
    LITERAL_INT: 6192
  EXIT_CALL
    LITERAL_INT: 72
  EXIT_CALL
    LITERAL_INT: 15
  EXIT_CALL
    LITERAL_INT: 123456789
  EXIT_CALL
    LITERAL_INT: 16
  EXIT_CALL
    LITERAL_INT: 4
  EXIT_CALL
    LITERAL_INT: 64
  EXIT_CALL
    LITERAL_INT: 100
Compilation successful. Output: generated

Exiting
==2636==
==2636== HEAP SUMMARY:
==2636==     in use at exit: 1,628 bytes in 73 blocks
==2636==   total heap usage: 316 allocs, 243 frees, 12,916 bytes allocated
==2636==
==2636== 2 bytes in 1 blocks are definitely lost in loss record 1 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x491058E: strdup (strdup.c:42)
==2636==    by 0x10B282: createNodeFromToken (parser.c:202)
==2636==    by 0x10BA91: parse_primary (parser.c:414)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10C05C: parse_variable_declaration (parser.c:543)
==2636==    by 0x10D785: parse_statement (parser.c:995)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 2 bytes in 1 blocks are definitely lost in loss record 2 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x491058E: strdup (strdup.c:42)
==2636==    by 0x10B282: createNodeFromToken (parser.c:202)
==2636==    by 0x10BA91: parse_primary (parser.c:414)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10C05C: parse_variable_declaration (parser.c:543)
==2636==    by 0x10D785: parse_statement (parser.c:995)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 2 bytes in 1 blocks are definitely lost in loss record 3 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x491058E: strdup (strdup.c:42)
==2636==    by 0x10B346: createNodeFromToken (parser.c:232)
==2636==    by 0x10BD54: parse_expression (parser.c:478)
==2636==    by 0x10C05C: parse_variable_declaration (parser.c:543)
==2636==    by 0x10D785: parse_statement (parser.c:995)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 2 bytes in 1 blocks are definitely lost in loss record 4 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x491058E: strdup (strdup.c:42)
==2636==    by 0x10B282: createNodeFromToken (parser.c:202)
==2636==    by 0x10BA91: parse_primary (parser.c:414)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10CDEE: parse_exit_statement (parser.c:770)
==2636==    by 0x10D7C8: parse_statement (parser.c:1000)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 4 bytes in 2 blocks are definitely lost in loss record 6 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x491058E: strdup (strdup.c:42)
==2636==    by 0x10B346: createNodeFromToken (parser.c:232)
==2636==    by 0x10BD54: parse_expression (parser.c:478)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10C7A6: parse_assignment_statement (parser.c:659)
==2636==    by 0x10DAD6: parse_statement (parser.c:1025)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 4 bytes in 2 blocks are definitely lost in loss record 7 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x491058E: strdup (strdup.c:42)
==2636==    by 0x10B346: createNodeFromToken (parser.c:232)
==2636==    by 0x10BD54: parse_expression (parser.c:478)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10C05C: parse_variable_declaration (parser.c:543)
==2636==    by 0x10D785: parse_statement (parser.c:995)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 4 bytes in 2 blocks are definitely lost in loss record 8 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x491058E: strdup (strdup.c:42)
==2636==    by 0x10B346: createNodeFromToken (parser.c:232)
==2636==    by 0x10BD54: parse_expression (parser.c:478)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10CDEE: parse_exit_statement (parser.c:770)
==2636==    by 0x10D7C8: parse_statement (parser.c:1000)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 4 bytes in 2 blocks are definitely lost in loss record 9 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x491058E: strdup (strdup.c:42)
==2636==    by 0x10B346: createNodeFromToken (parser.c:232)
==2636==    by 0x10BD54: parse_expression (parser.c:478)
==2636==    by 0x10CDEE: parse_exit_statement (parser.c:770)
==2636==    by 0x10D7C8: parse_statement (parser.c:1000)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 8 bytes in 4 blocks are definitely lost in loss record 10 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x491058E: strdup (strdup.c:42)
==2636==    by 0x10B282: createNodeFromToken (parser.c:202)
==2636==    by 0x10BA91: parse_primary (parser.c:414)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10CDEE: parse_exit_statement (parser.c:770)
==2636==    by 0x10D7C8: parse_statement (parser.c:1000)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 10 bytes in 5 blocks are definitely lost in loss record 11 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x491058E: strdup (strdup.c:42)
==2636==    by 0x10B282: createNodeFromToken (parser.c:202)
==2636==    by 0x10BA91: parse_primary (parser.c:414)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10C7A6: parse_assignment_statement (parser.c:659)
==2636==    by 0x10DAD6: parse_statement (parser.c:1025)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 10 bytes in 5 blocks are definitely lost in loss record 12 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x491058E: strdup (strdup.c:42)
==2636==    by 0x10B282: createNodeFromToken (parser.c:202)
==2636==    by 0x10BA91: parse_primary (parser.c:414)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10C7A6: parse_assignment_statement (parser.c:659)
==2636==    by 0x10DAD6: parse_statement (parser.c:1025)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 12 bytes in 6 blocks are definitely lost in loss record 13 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x491058E: strdup (strdup.c:42)
==2636==    by 0x10B346: createNodeFromToken (parser.c:232)
==2636==    by 0x10BD54: parse_expression (parser.c:478)
==2636==    by 0x10C7A6: parse_assignment_statement (parser.c:659)
==2636==    by 0x10DAD6: parse_statement (parser.c:1025)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 40 bytes in 1 blocks are definitely lost in loss record 14 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10B3AC: createNodeFromToken (parser.c:251)
==2636==    by 0x10BA91: parse_primary (parser.c:414)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10C7A6: parse_assignment_statement (parser.c:659)
==2636==    by 0x10DAD6: parse_statement (parser.c:1025)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 40 bytes in 1 blocks are definitely lost in loss record 15 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10BB0F: parse_primary (parser.c:428)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10CDEE: parse_exit_statement (parser.c:770)
==2636==    by 0x10D7C8: parse_statement (parser.c:1000)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 40 bytes in 1 blocks are definitely lost in loss record 16 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10BB0F: parse_primary (parser.c:428)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10C05C: parse_variable_declaration (parser.c:543)
==2636==    by 0x10D785: parse_statement (parser.c:995)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 40 bytes in 1 blocks are definitely lost in loss record 17 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10B3AC: createNodeFromToken (parser.c:251)
==2636==    by 0x10BA91: parse_primary (parser.c:414)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10C05C: parse_variable_declaration (parser.c:543)
==2636==    by 0x10D785: parse_statement (parser.c:995)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 40 bytes in 1 blocks are definitely lost in loss record 18 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10B3AC: createNodeFromToken (parser.c:251)
==2636==    by 0x10BA91: parse_primary (parser.c:414)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10C05C: parse_variable_declaration (parser.c:543)
==2636==    by 0x10D785: parse_statement (parser.c:995)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 40 bytes in 1 blocks are definitely lost in loss record 19 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10BB0F: parse_primary (parser.c:428)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10C05C: parse_variable_declaration (parser.c:543)
==2636==    by 0x10D785: parse_statement (parser.c:995)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 40 bytes in 1 blocks are definitely lost in loss record 20 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10B3AC: createNodeFromToken (parser.c:251)
==2636==    by 0x10BA91: parse_primary (parser.c:414)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10CDEE: parse_exit_statement (parser.c:770)
==2636==    by 0x10D7C8: parse_statement (parser.c:1000)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 40 bytes in 1 blocks are definitely lost in loss record 21 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10BDB0: parse_expression (parser.c:487)
==2636==    by 0x10CDEE: parse_exit_statement (parser.c:770)
==2636==    by 0x10D7C8: parse_statement (parser.c:1000)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 40 bytes in 1 blocks are definitely lost in loss record 22 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10BB0F: parse_primary (parser.c:428)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10CDEE: parse_exit_statement (parser.c:770)
==2636==    by 0x10D7C8: parse_statement (parser.c:1000)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 80 bytes in 2 blocks are definitely lost in loss record 24 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10B3AC: createNodeFromToken (parser.c:251)
==2636==    by 0x10BA91: parse_primary (parser.c:414)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10C7A6: parse_assignment_statement (parser.c:659)
==2636==    by 0x10DAD6: parse_statement (parser.c:1025)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 80 bytes in 2 blocks are definitely lost in loss record 25 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10B3AC: createNodeFromToken (parser.c:251)
==2636==    by 0x10BA91: parse_primary (parser.c:414)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10C7A6: parse_assignment_statement (parser.c:659)
==2636==    by 0x10DAD6: parse_statement (parser.c:1025)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 80 bytes in 2 blocks are definitely lost in loss record 26 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10BDB0: parse_expression (parser.c:487)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10C7A6: parse_assignment_statement (parser.c:659)
==2636==    by 0x10DAD6: parse_statement (parser.c:1025)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 80 bytes in 2 blocks are definitely lost in loss record 27 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10BDB0: parse_expression (parser.c:487)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10C05C: parse_variable_declaration (parser.c:543)
==2636==    by 0x10D785: parse_statement (parser.c:995)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 80 bytes in 2 blocks are definitely lost in loss record 28 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10B3AC: createNodeFromToken (parser.c:251)
==2636==    by 0x10BA91: parse_primary (parser.c:414)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10CDEE: parse_exit_statement (parser.c:770)
==2636==    by 0x10D7C8: parse_statement (parser.c:1000)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 80 bytes in 2 blocks are definitely lost in loss record 29 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10BDB0: parse_expression (parser.c:487)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10CDEE: parse_exit_statement (parser.c:770)
==2636==    by 0x10D7C8: parse_statement (parser.c:1000)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 160 bytes in 4 blocks are definitely lost in loss record 30 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10BDB0: parse_expression (parser.c:487)
==2636==    by 0x10C7A6: parse_assignment_statement (parser.c:659)
==2636==    by 0x10DAD6: parse_statement (parser.c:1025)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 164 (80 direct, 84 indirect) bytes in 2 blocks are definitely lost in loss record 31 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10C8E4: parse_assignment_statement (parser.c:679)
==2636==    by 0x10DAD6: parse_statement (parser.c:1025)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 200 bytes in 5 blocks are definitely lost in loss record 32 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10BB0F: parse_primary (parser.c:428)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10BD3E: parse_expression (parser.c:475)
==2636==    by 0x10C7A6: parse_assignment_statement (parser.c:659)
==2636==    by 0x10DAD6: parse_statement (parser.c:1025)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== 200 bytes in 5 blocks are definitely lost in loss record 33 of 33
==2636==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2636==    by 0x10B18B: createNode (parser.c:170)
==2636==    by 0x10BB0F: parse_primary (parser.c:428)
==2636==    by 0x10BC9D: parse_expression (parser.c:461)
==2636==    by 0x10C7A6: parse_assignment_statement (parser.c:659)
==2636==    by 0x10DAD6: parse_statement (parser.c:1025)
==2636==    by 0x10DE5E: parse (parser.c:1111)
==2636==    by 0x1095A6: main (main.c:43)
==2636==
==2636== LEAK SUMMARY:
==2636==    definitely lost: 1,544 bytes in 69 blocks
==2636==    indirectly lost: 84 bytes in 4 blocks
==2636==      possibly lost: 0 bytes in 0 blocks
==2636==    still reachable: 0 bytes in 0 blocks
==2636==         suppressed: 0 bytes in 0 blocks
==2636==
==2636== For lists of detected and suppressed errors, rerun with: -s
==2636== ERROR SUMMARY: 31 errors from 31 contexts (suppressed: 0 from 0)
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ make clean
rm -rf build
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ make
mkdir -p build
mkdir -p build/obj
gcc -Wall -Wextra -g -O0 -c src/main.c -o build/obj/main.o
gcc -Wall -Wextra -g -O0 -c src/lexer/lexer.c -o build/obj/lexer.o
gcc -Wall -Wextra -g -O0 -c src/parser/parser.c -o build/obj/parser.o
gcc -Wall -Wextra -g -O0 -c src/codegen/codegen.c -o build/obj/codegen.o
gcc build/obj/main.o build/obj/lexer.o build/obj/parser.o build/obj/codegen.o    -o build/main -Wall -Wextra -g -O0
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ valgrind --leak-check=full ./build/main test5.tc
==2663== Memcheck, a memory error detector
==2663== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2663== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2663== Command: ./build/main test5.tc
==2663==
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = x at line 1 and col 5
[Line 1, Col 5] Token(IDENTIFIER): x
Found Semicolon at line 1 and col 6
[Line 1, Col 6] Token(SEPARATOR): ;
Found new line at line 1 and col 7
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = a at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): a
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 11 at line 2 and col 9
[Line 2, Col 9] Token(INT): 11
Found Semicolon at line 2 and col 11
[Line 2, Col 11] Token(SEPARATOR): ;
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): =
Found whitespace at line 3 and col 4
Found number = 4 at line 3 and col 5
[Line 3, Col 5] Token(INT): 4
Found Semicolon at line 3 and col 6
[Line 3, Col 6] Token(SEPARATOR): ;
Found new line at line 3 and col 7
Found character = x at line 4 and col 1
[Line 4, Col 1] Token(IDENTIFIER): x
Found whitespace at line 4 and col 2
[Line 4, Col 3] Token(OPERATOR): *=
Found whitespace at line 4 and col 5
Found number = 2 at line 4 and col 6
[Line 4, Col 6] Token(INT): 2
[Line 4, Col 7] Token(OPERATOR): +
Found character = a at line 4 and col 8
[Line 4, Col 8] Token(IDENTIFIER): a
Found Semicolon at line 4 and col 9
[Line 4, Col 9] Token(SEPARATOR): ;
Found whitespace at line 4 and col 10
Found whitespace at line 4 and col 11
Found whitespace at line 4 and col 12
Found new line at line 4 and col 13
Found character = x at line 5 and col 1
[Line 5, Col 1] Token(IDENTIFIER): x
Found whitespace at line 5 and col 2
[Line 5, Col 3] Token(OPERATOR): +=
Found whitespace at line 5 and col 5
Found character = a at line 5 and col 6
[Line 5, Col 6] Token(IDENTIFIER): a
Found whitespace at line 5 and col 7
[Line 5, Col 8] Token(OPERATOR): +
Found whitespace at line 5 and col 9
Found character = a at line 5 and col 10
[Line 5, Col 10] Token(IDENTIFIER): a
[Line 5, Col 11] Token(OPERATOR): *
Found number = 2 at line 5 and col 12
[Line 5, Col 12] Token(INT): 2
Found Semicolon at line 5 and col 13
[Line 5, Col 13] Token(SEPARATOR): ;
Found new line at line 5 and col 14
Found keyword 'exit' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = x at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): x
Found CLOSED_PARENTHESIS ) at line 6 and col 7
[Line 6, Col 7] Token(SEPARATOR): )
Found Semicolon at line 6 and col 8
[Line 6, Col 8] Token(SEPARATOR): ;
Found new line at line 6 and col 9
Found character = a at line 7 and col 1
[Line 7, Col 1] Token(IDENTIFIER): a
Found whitespace at line 7 and col 2
[Line 7, Col 3] Token(OPERATOR): =
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
[Line 7, Col 5] Token(IDENTIFIER): a
[Line 7, Col 6] Token(OPERATOR): +
Found number = 1 at line 7 and col 7
[Line 7, Col 7] Token(INT): 1
Found Semicolon at line 7 and col 8
[Line 7, Col 8] Token(SEPARATOR): ;
Found new line at line 7 and col 9
Found character = x at line 8 and col 1
[Line 8, Col 1] Token(IDENTIFIER): x
Found whitespace at line 8 and col 2
[Line 8, Col 3] Token(OPERATOR): =
Found whitespace at line 8 and col 4
Found character = a at line 8 and col 5
[Line 8, Col 5] Token(IDENTIFIER): a
[Line 8, Col 6] Token(OPERATOR): +
Found character = a at line 8 and col 7
[Line 8, Col 7] Token(IDENTIFIER): a
[Line 8, Col 8] Token(OPERATOR): *
Found number = 5 at line 8 and col 9
[Line 8, Col 9] Token(INT): 5
Found Semicolon at line 8 and col 10
[Line 8, Col 10] Token(SEPARATOR): ;
Found new line at line 8 and col 11
Found keyword 'int' at line 9 and col 1
[Line 9, Col 1] Token(KEYWORD): int
Found whitespace at line 9 and col 4
Found character = y at line 9 and col 5
[Line 9, Col 5] Token(IDENTIFIER): y
Found whitespace at line 9 and col 6
[Line 9, Col 7] Token(OPERATOR): =
Found whitespace at line 9 and col 8
Found character = x at line 9 and col 9
[Line 9, Col 9] Token(IDENTIFIER): x
Found whitespace at line 9 and col 10
[Line 9, Col 11] Token(OPERATOR): +
Found whitespace at line 9 and col 12
Found number = 2 at line 9 and col 13
[Line 9, Col 13] Token(INT): 2
Found whitespace at line 9 and col 14
[Line 9, Col 15] Token(OPERATOR): *
Found whitespace at line 9 and col 16
Found number = 3 at line 9 and col 17
[Line 9, Col 17] Token(INT): 3
[Line 9, Col 18] Token(OPERATOR): *
Found character = x at line 9 and col 19
[Line 9, Col 19] Token(IDENTIFIER): x
Found Semicolon at line 9 and col 20
[Line 9, Col 20] Token(SEPARATOR): ;
Found new line at line 9 and col 21
Found character = y at line 10 and col 1
[Line 10, Col 1] Token(IDENTIFIER): y
Found whitespace at line 10 and col 2
[Line 10, Col 3] Token(OPERATOR): =
Found whitespace at line 10 and col 4
Found character = y at line 10 and col 5
[Line 10, Col 5] Token(IDENTIFIER): y
[Line 10, Col 6] Token(OPERATOR): +
Found character = a at line 10 and col 7
[Line 10, Col 7] Token(IDENTIFIER): a
Found Semicolon at line 10 and col 8
[Line 10, Col 8] Token(SEPARATOR): ;
Found new line at line 10 and col 9
Found character = y at line 11 and col 1
[Line 11, Col 1] Token(IDENTIFIER): y
Found whitespace at line 11 and col 2
[Line 11, Col 3] Token(OPERATOR): =
Found whitespace at line 11 and col 4
Found character = y at line 11 and col 5
[Line 11, Col 5] Token(IDENTIFIER): y
[Line 11, Col 6] Token(OPERATOR): *
Found character = a at line 11 and col 7
[Line 11, Col 7] Token(IDENTIFIER): a
Found Semicolon at line 11 and col 8
[Line 11, Col 8] Token(SEPARATOR): ;
Found new line at line 11 and col 9
Found keyword 'exit' at line 12 and col 1
[Line 12, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 12 and col 5
[Line 12, Col 5] Token(SEPARATOR): (
Found character = y at line 12 and col 6
[Line 12, Col 6] Token(IDENTIFIER): y
Found CLOSED_PARENTHESIS ) at line 12 and col 7
[Line 12, Col 7] Token(SEPARATOR): )
Found Semicolon at line 12 and col 8
[Line 12, Col 8] Token(SEPARATOR): ;
Found new line at line 12 and col 9
Found keyword 'exit' at line 13 and col 1
[Line 13, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 13 and col 5
[Line 13, Col 5] Token(SEPARATOR): (
Found character = x at line 13 and col 6
[Line 13, Col 6] Token(IDENTIFIER): x
Found CLOSED_PARENTHESIS ) at line 13 and col 7
[Line 13, Col 7] Token(SEPARATOR): )
Found Semicolon at line 13 and col 8
[Line 13, Col 8] Token(SEPARATOR): ;
Found new line at line 13 and col 9
Found keyword 'exit' at line 14 and col 1
[Line 14, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 14 and col 5
[Line 14, Col 5] Token(SEPARATOR): (
Found character = a at line 14 and col 6
[Line 14, Col 6] Token(IDENTIFIER): a
[Line 14, Col 7] Token(OPERATOR): +
Found number = 2 at line 14 and col 8
[Line 14, Col 8] Token(INT): 2
[Line 14, Col 9] Token(OPERATOR): *
Found number = 3 at line 14 and col 10
[Line 14, Col 10] Token(INT): 3
[Line 14, Col 11] Token(OPERATOR): -
Found character = a at line 14 and col 12
[Line 14, Col 12] Token(IDENTIFIER): a
[Line 14, Col 13] Token(OPERATOR): /
Found number = 4 at line 14 and col 14
[Line 14, Col 14] Token(INT): 4
Found CLOSED_PARENTHESIS ) at line 14 and col 15
[Line 14, Col 15] Token(SEPARATOR): )
Found Semicolon at line 14 and col 16
[Line 14, Col 16] Token(SEPARATOR): ;
Found new line at line 14 and col 17
Found keyword 'exit' at line 15 and col 1
[Line 15, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 15 and col 5
[Line 15, Col 5] Token(SEPARATOR): (
Found number = 123456789 at line 15 and col 6
[Line 15, Col 6] Token(INT): 123456789
Found CLOSED_PARENTHESIS ) at line 15 and col 15
[Line 15, Col 15] Token(SEPARATOR): )
Found Semicolon at line 15 and col 16
[Line 15, Col 16] Token(SEPARATOR): ;
Found new line at line 15 and col 17
Found keyword 'exit' at line 16 and col 1
[Line 16, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 16 and col 5
[Line 16, Col 5] Token(SEPARATOR): (
Found number = 16 at line 16 and col 6
[Line 16, Col 6] Token(INT): 16
Found CLOSED_PARENTHESIS ) at line 16 and col 10
[Line 16, Col 10] Token(SEPARATOR): )
Found Semicolon at line 16 and col 11
[Line 16, Col 11] Token(SEPARATOR): ;
Found new line at line 16 and col 12
Found keyword 'exit' at line 17 and col 1
[Line 17, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 17 and col 5
[Line 17, Col 5] Token(SEPARATOR): (
Found number = 4 at line 17 and col 6
[Line 17, Col 6] Token(INT): 4
Found CLOSED_PARENTHESIS ) at line 17 and col 11
[Line 17, Col 11] Token(SEPARATOR): )
Found Semicolon at line 17 and col 12
[Line 17, Col 12] Token(SEPARATOR): ;
Found new line at line 17 and col 13
Found keyword 'exit' at line 18 and col 1
[Line 18, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 18 and col 5
[Line 18, Col 5] Token(SEPARATOR): (
Found number = 64 at line 18 and col 6
[Line 18, Col 6] Token(INT): 64
Found CLOSED_PARENTHESIS ) at line 18 and col 10
[Line 18, Col 10] Token(SEPARATOR): )
Found Semicolon at line 18 and col 11
[Line 18, Col 11] Token(SEPARATOR): ;
Found new line at line 18 and col 12
Found keyword 'exit' at line 19 and col 1
[Line 19, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 19 and col 5
[Line 19, Col 5] Token(SEPARATOR): (
Found number = 100 at line 19 and col 6
[Line 19, Col 6] Token(INT): 100
Found CLOSED_PARENTHESIS ) at line 19 and col 9
[Line 19, Col 9] Token(SEPARATOR): )
Found Semicolon at line 19 and col 10
[Line 19, Col 10] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): x
[Line 1, Col 6] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): a
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 11
[Line 2, Col 11] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): =
[Line 3, Col 5] Token(INT): 4
[Line 3, Col 6] Token(SEPARATOR): ;
[Line 4, Col 1] Token(IDENTIFIER): x
[Line 4, Col 3] Token(OPERATOR): *=
[Line 4, Col 6] Token(INT): 2
[Line 4, Col 7] Token(OPERATOR): +
[Line 4, Col 8] Token(IDENTIFIER): a
[Line 4, Col 9] Token(SEPARATOR): ;
[Line 5, Col 1] Token(IDENTIFIER): x
[Line 5, Col 3] Token(OPERATOR): +=
[Line 5, Col 6] Token(IDENTIFIER): a
[Line 5, Col 8] Token(OPERATOR): +
[Line 5, Col 10] Token(IDENTIFIER): a
[Line 5, Col 11] Token(OPERATOR): *
[Line 5, Col 12] Token(INT): 2
[Line 5, Col 13] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): exit
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): x
[Line 6, Col 7] Token(SEPARATOR): )
[Line 6, Col 8] Token(SEPARATOR): ;
[Line 7, Col 1] Token(IDENTIFIER): a
[Line 7, Col 3] Token(OPERATOR): =
[Line 7, Col 5] Token(IDENTIFIER): a
[Line 7, Col 6] Token(OPERATOR): +
[Line 7, Col 7] Token(INT): 1
[Line 7, Col 8] Token(SEPARATOR): ;
[Line 8, Col 1] Token(IDENTIFIER): x
[Line 8, Col 3] Token(OPERATOR): =
[Line 8, Col 5] Token(IDENTIFIER): a
[Line 8, Col 6] Token(OPERATOR): +
[Line 8, Col 7] Token(IDENTIFIER): a
[Line 8, Col 8] Token(OPERATOR): *
[Line 8, Col 9] Token(INT): 5
[Line 8, Col 10] Token(SEPARATOR): ;
[Line 9, Col 1] Token(KEYWORD): int
[Line 9, Col 5] Token(IDENTIFIER): y
[Line 9, Col 7] Token(OPERATOR): =
[Line 9, Col 9] Token(IDENTIFIER): x
[Line 9, Col 11] Token(OPERATOR): +
[Line 9, Col 13] Token(INT): 2
[Line 9, Col 15] Token(OPERATOR): *
[Line 9, Col 17] Token(INT): 3
[Line 9, Col 18] Token(OPERATOR): *
[Line 9, Col 19] Token(IDENTIFIER): x
[Line 9, Col 20] Token(SEPARATOR): ;
[Line 10, Col 1] Token(IDENTIFIER): y
[Line 10, Col 3] Token(OPERATOR): =
[Line 10, Col 5] Token(IDENTIFIER): y
[Line 10, Col 6] Token(OPERATOR): +
[Line 10, Col 7] Token(IDENTIFIER): a
[Line 10, Col 8] Token(SEPARATOR): ;
[Line 11, Col 1] Token(IDENTIFIER): y
[Line 11, Col 3] Token(OPERATOR): =
[Line 11, Col 5] Token(IDENTIFIER): y
[Line 11, Col 6] Token(OPERATOR): *
[Line 11, Col 7] Token(IDENTIFIER): a
[Line 11, Col 8] Token(SEPARATOR): ;
[Line 12, Col 1] Token(KEYWORD): exit
[Line 12, Col 5] Token(SEPARATOR): (
[Line 12, Col 6] Token(IDENTIFIER): y
[Line 12, Col 7] Token(SEPARATOR): )
[Line 12, Col 8] Token(SEPARATOR): ;
[Line 13, Col 1] Token(KEYWORD): exit
[Line 13, Col 5] Token(SEPARATOR): (
[Line 13, Col 6] Token(IDENTIFIER): x
[Line 13, Col 7] Token(SEPARATOR): )
[Line 13, Col 8] Token(SEPARATOR): ;
[Line 14, Col 1] Token(KEYWORD): exit
[Line 14, Col 5] Token(SEPARATOR): (
[Line 14, Col 6] Token(IDENTIFIER): a
[Line 14, Col 7] Token(OPERATOR): +
[Line 14, Col 8] Token(INT): 2
[Line 14, Col 9] Token(OPERATOR): *
[Line 14, Col 10] Token(INT): 3
[Line 14, Col 11] Token(OPERATOR): -
[Line 14, Col 12] Token(IDENTIFIER): a
[Line 14, Col 13] Token(OPERATOR): /
[Line 14, Col 14] Token(INT): 4
[Line 14, Col 15] Token(SEPARATOR): )
[Line 14, Col 16] Token(SEPARATOR): ;
[Line 15, Col 1] Token(KEYWORD): exit
[Line 15, Col 5] Token(SEPARATOR): (
[Line 15, Col 6] Token(INT): 123456789
[Line 15, Col 15] Token(SEPARATOR): )
[Line 15, Col 16] Token(SEPARATOR): ;
[Line 16, Col 1] Token(KEYWORD): exit
[Line 16, Col 5] Token(SEPARATOR): (
[Line 16, Col 6] Token(INT): 16
[Line 16, Col 10] Token(SEPARATOR): )
[Line 16, Col 11] Token(SEPARATOR): ;
[Line 17, Col 1] Token(KEYWORD): exit
[Line 17, Col 5] Token(SEPARATOR): (
[Line 17, Col 6] Token(INT): 4
[Line 17, Col 11] Token(SEPARATOR): )
[Line 17, Col 12] Token(SEPARATOR): ;
[Line 18, Col 1] Token(KEYWORD): exit
[Line 18, Col 5] Token(SEPARATOR): (
[Line 18, Col 6] Token(INT): 64
[Line 18, Col 10] Token(SEPARATOR): )
[Line 18, Col 11] Token(SEPARATOR): ;
[Line 19, Col 1] Token(KEYWORD): exit
[Line 19, Col 5] Token(SEPARATOR): (
[Line 19, Col 6] Token(INT): 100
[Line 19, Col 9] Token(SEPARATOR): )
[Line 19, Col 10] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x4a97eb0, current now = 0x4a97eb0
DEBUG LINK: linked stmt=0x4a98030, current now = 0x4a98030
DEBUG LINK: linked stmt=0x4a98220, current now = 0x4a98220
DEBUG LINK: linked stmt=0x4a98730, current now = 0x4a98730
DEBUG LINK: linked stmt=0x4a98ea0, current now = 0x4a98ea0
DEBUG LINK: linked stmt=0x4a98f60, current now = 0x4a98f60
DEBUG LINK: linked stmt=0x4a994e0, current now = 0x4a994e0
DEBUG LINK: linked stmt=0x4a99b90, current now = 0x4a99b90
DEBUG LINK: linked stmt=0x4a9a370, current now = 0x4a9a370
DEBUG LINK: linked stmt=0x4a9a880, current now = 0x4a9a880
DEBUG LINK: linked stmt=0x4a9ad90, current now = 0x4a9ad90
DEBUG LINK: linked stmt=0x4a9ae50, current now = 0x4a9ae50
DEBUG LINK: linked stmt=0x4a9b040, current now = 0x4a9b040
DEBUG LINK: linked stmt=0x4a9b230, current now = 0x4a9b230
DEBUG LINK: linked stmt=0x4a9bb60, current now = 0x4a9bb60
DEBUG LINK: linked stmt=0x4a9bc90, current now = 0x4a9bc90
DEBUG LINK: linked stmt=0x4a9bdc0, current now = 0x4a9bdc0
DEBUG LINK: linked stmt=0x4a9bef0, current now = 0x4a9bef0
DEBUG LINK: linked stmt=0x4a9c020, current now = 0x4a9c020

--- Syntax Tree ---
PROGRAM
  VAR_DECL: x
  VAR_DECL: a
    LITERAL_INT: 11
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: x
  ASSIGNMENT: =
    IDENTIFIER: x
  EXIT_CALL
    LITERAL_INT: 85
  ASSIGNMENT: =
    IDENTIFIER: a
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 504
  ASSIGNMENT: =
    IDENTIFIER: y
  ASSIGNMENT: =
    IDENTIFIER: y
  EXIT_CALL
    LITERAL_INT: 6192
  EXIT_CALL
    LITERAL_INT: 72
  EXIT_CALL
    LITERAL_INT: 15
  EXIT_CALL
    LITERAL_INT: 123456789
  EXIT_CALL
    LITERAL_INT: 16
  EXIT_CALL
    LITERAL_INT: 4
  EXIT_CALL
    LITERAL_INT: 64
  EXIT_CALL
    LITERAL_INT: 100
Compilation successful. Output: generated

Exiting
==2663==
==2663== HEAP SUMMARY:
==2663==     in use at exit: 364 bytes in 11 blocks
==2663==   total heap usage: 284 allocs, 273 frees, 12,852 bytes allocated
==2663==
==2663== 40 bytes in 1 blocks are definitely lost in loss record 2 of 5
==2663==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2663==    by 0x10B18B: createNode (parser.c:169)
==2663==    by 0x10B389: createNodeFromToken (parser.c:250)
==2663==    by 0x10BA5B: parse_primary (parser.c:407)
==2663==    by 0x10BC73: parse_expression (parser.c:455)
==2663==    by 0x10C7A4: parse_assignment_statement (parser.c:656)
==2663==    by 0x10DAB7: parse_statement (parser.c:1012)
==2663==    by 0x10DE3F: parse (parser.c:1098)
==2663==    by 0x1095A6: main (main.c:43)
==2663==
==2663== 160 bytes in 4 blocks are definitely lost in loss record 4 of 5
==2663==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2663==    by 0x10B18B: createNode (parser.c:169)
==2663==    by 0x10BD8E: parse_expression (parser.c:481)
==2663==    by 0x10C7A4: parse_assignment_statement (parser.c:656)
==2663==    by 0x10DAB7: parse_statement (parser.c:1012)
==2663==    by 0x10DE3F: parse (parser.c:1098)
==2663==    by 0x1095A6: main (main.c:43)
==2663==
==2663== 164 (80 direct, 84 indirect) bytes in 2 blocks are definitely lost in loss record 5 of 5
==2663==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2663==    by 0x10B18B: createNode (parser.c:169)
==2663==    by 0x10C8F1: parse_assignment_statement (parser.c:677)
==2663==    by 0x10DAB7: parse_statement (parser.c:1012)
==2663==    by 0x10DE3F: parse (parser.c:1098)
==2663==    by 0x1095A6: main (main.c:43)
==2663==
==2663== LEAK SUMMARY:
==2663==    definitely lost: 280 bytes in 7 blocks
==2663==    indirectly lost: 84 bytes in 4 blocks
==2663==      possibly lost: 0 bytes in 0 blocks
==2663==    still reachable: 0 bytes in 0 blocks
==2663==         suppressed: 0 bytes in 0 blocks
==2663==
==2663== For lists of detected and suppressed errors, rerun with: -s
==2663== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test8.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = a at line 1 and col 5
Found character = b at line 1 and col 6
Found character = c at line 1 and col 7
[Line 1, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 1 and col 8
[Line 1, Col 9] Token(OPERATOR): =
Found whitespace at line 1 and col 10
Found number = 12 at line 1 and col 11
[Line 1, Col 11] Token(INT): 12
Found Semicolon at line 1 and col 13
[Line 1, Col 13] Token(SEPARATOR): ;
Found whitespace at line 1 and col 14
Found new line at line 1 and col 15
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = x at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): x
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 1 at line 2 and col 9
[Line 2, Col 9] Token(INT): 1
Found Semicolon at line 2 and col 10
[Line 2, Col 10] Token(SEPARATOR): ;
Found whitespace at line 2 and col 11
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): +=
Found whitespace at line 3 and col 5
Found number = 5 at line 3 and col 6
[Line 3, Col 6] Token(INT): 5
Found Semicolon at line 3 and col 7
[Line 3, Col 7] Token(SEPARATOR): ;
Found whitespace at line 3 and col 8
Found new line at line 3 and col 9
Found keyword 'int' at line 4 and col 1
[Line 4, Col 1] Token(KEYWORD): int
Found whitespace at line 4 and col 4
Found character = y at line 4 and col 5
[Line 4, Col 5] Token(IDENTIFIER): y
Found whitespace at line 4 and col 6
[Line 4, Col 7] Token(OPERATOR): =
Found whitespace at line 4 and col 8
Found character = x at line 4 and col 9
[Line 4, Col 9] Token(IDENTIFIER): x
Found whitespace at line 4 and col 10
[Line 4, Col 11] Token(OPERATOR): <<
Found whitespace at line 4 and col 13
Found number = 1 at line 4 and col 14
[Line 4, Col 14] Token(INT): 1
Found Semicolon at line 4 and col 15
[Line 4, Col 15] Token(SEPARATOR): ;
Found whitespace at line 4 and col 16
Found new line at line 4 and col 17
Found keyword 'int' at line 5 and col 1
[Line 5, Col 1] Token(KEYWORD): int
Found whitespace at line 5 and col 4
Found character = z at line 5 and col 5
[Line 5, Col 5] Token(IDENTIFIER): z
Found whitespace at line 5 and col 6
[Line 5, Col 7] Token(OPERATOR): =
Found whitespace at line 5 and col 8
Found number = 1 at line 5 and col 9
[Line 5, Col 9] Token(INT): 1
Found Semicolon at line 5 and col 10
[Line 5, Col 10] Token(SEPARATOR): ;
Found whitespace at line 5 and col 11
Found new line at line 5 and col 12
Found keyword 'if' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): if
Found whitespace at line 6 and col 3
Found OPEN_PARENTHESIS ( at line 6 and col 4
[Line 6, Col 4] Token(SEPARATOR): (
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = y at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
Found number = 5 at line 6 and col 8
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
Found number = 1 at line 6 and col 11
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
Found number = 1 at line 6 and col 13
[Line 6, Col 13] Token(INT): 1
Found CLOSED_PARENTHESIS ) at line 6 and col 14
[Line 6, Col 14] Token(SEPARATOR): )
Found whitespace at line 6 and col 15
[Line 6, Col 16] Token(OPERATOR): -
Found whitespace at line 6 and col 17
Found number = 6 at line 6 and col 18
[Line 6, Col 18] Token(INT): 6
Found whitespace at line 6 and col 19
[Line 6, Col 20] Token(OPERATOR): ==
Found whitespace at line 6 and col 22
Found character = z at line 6 and col 23
[Line 6, Col 23] Token(IDENTIFIER): z
Found CLOSED_PARENTHESIS ) at line 6 and col 24
[Line 6, Col 24] Token(SEPARATOR): )
Found whitespace at line 6 and col 25
Found OPEN_PARENTHESIS { at line 6 and col 26
[Line 6, Col 26] Token(SEPARATOR): {
Found whitespace at line 6 and col 27
Found new line at line 6 and col 28
Found whitespace at line 7 and col 1
Found whitespace at line 7 and col 2
Found whitespace at line 7 and col 3
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
Found character = b at line 7 and col 6
Found character = c at line 7 and col 7
[Line 7, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 7 and col 8
[Line 7, Col 9] Token(OPERATOR): <<=
Found whitespace at line 7 and col 12
Found number = 1 at line 7 and col 13
[Line 7, Col 13] Token(INT): 1
Found Semicolon at line 7 and col 14
[Line 7, Col 14] Token(SEPARATOR): ;
Found whitespace at line 7 and col 15
Found new line at line 7 and col 16
Found whitespace at line 8 and col 1
Found whitespace at line 8 and col 2
Found whitespace at line 8 and col 3
Found whitespace at line 8 and col 4
Found keyword 'exit' at line 8 and col 5
[Line 8, Col 5] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 8 and col 9
[Line 8, Col 9] Token(SEPARATOR): (
Found character = a at line 8 and col 10
Found character = b at line 8 and col 11
Found character = c at line 8 and col 12
[Line 8, Col 10] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 8 and col 13
[Line 8, Col 13] Token(SEPARATOR): )
Found Semicolon at line 8 and col 14
[Line 8, Col 14] Token(SEPARATOR): ;
Found whitespace at line 8 and col 15
Found whitespace at line 8 and col 16
Found new line at line 8 and col 17
Found CLOSED_PARENTHESIS } at line 9 and col 1
[Line 9, Col 1] Token(SEPARATOR): }
Found whitespace at line 9 and col 2
Found whitespace at line 9 and col 3
Found whitespace at line 9 and col 4
Found new line at line 9 and col 5
Found whitespace at line 10 and col 1
Found new line at line 10 and col 2
Found keyword 'exit' at line 11 and col 1
[Line 11, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 11 and col 5
[Line 11, Col 5] Token(SEPARATOR): (
Found number = 4096 at line 11 and col 6
[Line 11, Col 6] Token(INT): 4096
Found whitespace at line 11 and col 12
Found new line at line 11 and col 13
Found CLOSED_PARENTHESIS ) at line 12 and col 1
[Line 12, Col 1] Token(SEPARATOR): )
Found Semicolon at line 12 and col 2
[Line 12, Col 2] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): abc
[Line 1, Col 9] Token(OPERATOR): =
[Line 1, Col 11] Token(INT): 12
[Line 1, Col 13] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): x
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 1
[Line 2, Col 10] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): +=
[Line 3, Col 6] Token(INT): 5
[Line 3, Col 7] Token(SEPARATOR): ;
[Line 4, Col 1] Token(KEYWORD): int
[Line 4, Col 5] Token(IDENTIFIER): y
[Line 4, Col 7] Token(OPERATOR): =
[Line 4, Col 9] Token(IDENTIFIER): x
[Line 4, Col 11] Token(OPERATOR): <<
[Line 4, Col 14] Token(INT): 1
[Line 4, Col 15] Token(SEPARATOR): ;
[Line 5, Col 1] Token(KEYWORD): int
[Line 5, Col 5] Token(IDENTIFIER): z
[Line 5, Col 7] Token(OPERATOR): =
[Line 5, Col 9] Token(INT): 1
[Line 5, Col 10] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): if
[Line 6, Col 4] Token(SEPARATOR): (
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
[Line 6, Col 13] Token(INT): 1
[Line 6, Col 14] Token(SEPARATOR): )
[Line 6, Col 16] Token(OPERATOR): -
[Line 6, Col 18] Token(INT): 6
[Line 6, Col 20] Token(OPERATOR): ==
[Line 6, Col 23] Token(IDENTIFIER): z
[Line 6, Col 24] Token(SEPARATOR): )
[Line 6, Col 26] Token(SEPARATOR): {
[Line 7, Col 5] Token(IDENTIFIER): abc
[Line 7, Col 9] Token(OPERATOR): <<=
[Line 7, Col 13] Token(INT): 1
[Line 7, Col 14] Token(SEPARATOR): ;
[Line 8, Col 5] Token(KEYWORD): exit
[Line 8, Col 9] Token(SEPARATOR): (
[Line 8, Col 10] Token(IDENTIFIER): abc
[Line 8, Col 13] Token(SEPARATOR): )
[Line 8, Col 14] Token(SEPARATOR): ;
[Line 9, Col 1] Token(SEPARATOR): }
[Line 11, Col 1] Token(KEYWORD): exit
[Line 11, Col 5] Token(SEPARATOR): (
[Line 11, Col 6] Token(INT): 4096
[Line 12, Col 1] Token(SEPARATOR): )
[Line 12, Col 2] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x5d16a7bd0950, current now = 0x5d16a7bd0950
DEBUG LINK: linked stmt=0x5d16a7bd09f0, current now = 0x5d16a7bd09f0
DEBUG LINK: linked stmt=0x5d16a7bd0b10, current now = 0x5d16a7bd0b10
DEBUG LINK: linked stmt=0x5d16a7bd0be0, current now = 0x5d16a7bd0be0
DEBUG LINK: linked stmt=0x5d16a7bd0bb0, current now = 0x5d16a7bd0bb0
After parse_expression - condition: Node type 0, int_val=1
Condition parsed. Current token: )
Then block parsed. Current token: exit
DEBUG IF_SUBTREE: if_node=0x5d16a7bd1040, cond=0x5d16a7bd0ca0, then_block=0x5d16a7bd0d80, then_block->right=(nil)
DEBUG LINK: linked stmt=0x5d16a7bd1040, current now = 0x5d16a7bd1040
DEBUG LINK: linked stmt=0x5d16a7bd10c0, current now = 0x5d16a7bd10c0

--- Syntax Tree ---
PROGRAM
  VAR_DECL: abc
    LITERAL_INT: 12
  VAR_DECL: x
    LITERAL_INT: 1
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 12
  VAR_DECL: z
    LITERAL_INT: 1
  IF_STATEMENT
    CONDITION:
      LITERAL_INT: 1
      BLOCK {
        ASSIGNMENT: =
          IDENTIFIER: abc
        EXIT_CALL
          LITERAL_INT: 24
      } // END BLOCK
  EXIT_CALL
    LITERAL_INT: 4096
Compilation successful. Output: generated

Exiting
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test8.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = a at line 1 and col 5
Found character = b at line 1 and col 6
Found character = c at line 1 and col 7
[Line 1, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 1 and col 8
[Line 1, Col 9] Token(OPERATOR): =
Found whitespace at line 1 and col 10
Found number = 12 at line 1 and col 11
[Line 1, Col 11] Token(INT): 12
Found Semicolon at line 1 and col 13
[Line 1, Col 13] Token(SEPARATOR): ;
Found whitespace at line 1 and col 14
Found new line at line 1 and col 15
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = x at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): x
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 1 at line 2 and col 9
[Line 2, Col 9] Token(INT): 1
Found Semicolon at line 2 and col 10
[Line 2, Col 10] Token(SEPARATOR): ;
Found whitespace at line 2 and col 11
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): +=
Found whitespace at line 3 and col 5
Found number = 5 at line 3 and col 6
[Line 3, Col 6] Token(INT): 5
Found Semicolon at line 3 and col 7
[Line 3, Col 7] Token(SEPARATOR): ;
Found whitespace at line 3 and col 8
Found new line at line 3 and col 9
Found keyword 'int' at line 4 and col 1
[Line 4, Col 1] Token(KEYWORD): int
Found whitespace at line 4 and col 4
Found character = y at line 4 and col 5
[Line 4, Col 5] Token(IDENTIFIER): y
Found whitespace at line 4 and col 6
[Line 4, Col 7] Token(OPERATOR): =
Found whitespace at line 4 and col 8
Found character = x at line 4 and col 9
[Line 4, Col 9] Token(IDENTIFIER): x
Found whitespace at line 4 and col 10
[Line 4, Col 11] Token(OPERATOR): <<
Found whitespace at line 4 and col 13
Found number = 1 at line 4 and col 14
[Line 4, Col 14] Token(INT): 1
Found Semicolon at line 4 and col 15
[Line 4, Col 15] Token(SEPARATOR): ;
Found whitespace at line 4 and col 16
Found new line at line 4 and col 17
Found keyword 'int' at line 5 and col 1
[Line 5, Col 1] Token(KEYWORD): int
Found whitespace at line 5 and col 4
Found character = z at line 5 and col 5
[Line 5, Col 5] Token(IDENTIFIER): z
Found whitespace at line 5 and col 6
[Line 5, Col 7] Token(OPERATOR): =
Found whitespace at line 5 and col 8
Found number = 1 at line 5 and col 9
[Line 5, Col 9] Token(INT): 1
Found Semicolon at line 5 and col 10
[Line 5, Col 10] Token(SEPARATOR): ;
Found whitespace at line 5 and col 11
Found new line at line 5 and col 12
Found keyword 'if' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): if
Found whitespace at line 6 and col 3
Found OPEN_PARENTHESIS ( at line 6 and col 4
[Line 6, Col 4] Token(SEPARATOR): (
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = y at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
Found number = 5 at line 6 and col 8
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
Found number = 1 at line 6 and col 11
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
Found number = 1 at line 6 and col 13
[Line 6, Col 13] Token(INT): 1
Found CLOSED_PARENTHESIS ) at line 6 and col 14
[Line 6, Col 14] Token(SEPARATOR): )
Found whitespace at line 6 and col 15
[Line 6, Col 16] Token(OPERATOR): ==
Found whitespace at line 6 and col 18
Found character = z at line 6 and col 19
[Line 6, Col 19] Token(IDENTIFIER): z
Found CLOSED_PARENTHESIS ) at line 6 and col 20
[Line 6, Col 20] Token(SEPARATOR): )
Found whitespace at line 6 and col 21
Found OPEN_PARENTHESIS { at line 6 and col 22
[Line 6, Col 22] Token(SEPARATOR): {
Found whitespace at line 6 and col 23
Found new line at line 6 and col 24
Found whitespace at line 7 and col 1
Found whitespace at line 7 and col 2
Found whitespace at line 7 and col 3
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
Found character = b at line 7 and col 6
Found character = c at line 7 and col 7
[Line 7, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 7 and col 8
[Line 7, Col 9] Token(OPERATOR): <<=
Found whitespace at line 7 and col 12
Found number = 1 at line 7 and col 13
[Line 7, Col 13] Token(INT): 1
Found Semicolon at line 7 and col 14
[Line 7, Col 14] Token(SEPARATOR): ;
Found whitespace at line 7 and col 15
Found new line at line 7 and col 16
Found whitespace at line 8 and col 1
Found whitespace at line 8 and col 2
Found whitespace at line 8 and col 3
Found whitespace at line 8 and col 4
Found keyword 'exit' at line 8 and col 5
[Line 8, Col 5] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 8 and col 9
[Line 8, Col 9] Token(SEPARATOR): (
Found character = a at line 8 and col 10
Found character = b at line 8 and col 11
Found character = c at line 8 and col 12
[Line 8, Col 10] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 8 and col 13
[Line 8, Col 13] Token(SEPARATOR): )
Found Semicolon at line 8 and col 14
[Line 8, Col 14] Token(SEPARATOR): ;
Found whitespace at line 8 and col 15
Found whitespace at line 8 and col 16
Found new line at line 8 and col 17
Found CLOSED_PARENTHESIS } at line 9 and col 1
[Line 9, Col 1] Token(SEPARATOR): }
Found whitespace at line 9 and col 2
Found whitespace at line 9 and col 3
Found whitespace at line 9 and col 4
Found new line at line 9 and col 5
Found whitespace at line 10 and col 1
Found new line at line 10 and col 2
Found keyword 'exit' at line 11 and col 1
[Line 11, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 11 and col 5
[Line 11, Col 5] Token(SEPARATOR): (
Found number = 4096 at line 11 and col 6
[Line 11, Col 6] Token(INT): 4096
Found whitespace at line 11 and col 12
Found new line at line 11 and col 13
Found CLOSED_PARENTHESIS ) at line 12 and col 1
[Line 12, Col 1] Token(SEPARATOR): )
Found Semicolon at line 12 and col 2
[Line 12, Col 2] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): abc
[Line 1, Col 9] Token(OPERATOR): =
[Line 1, Col 11] Token(INT): 12
[Line 1, Col 13] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): x
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 1
[Line 2, Col 10] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): +=
[Line 3, Col 6] Token(INT): 5
[Line 3, Col 7] Token(SEPARATOR): ;
[Line 4, Col 1] Token(KEYWORD): int
[Line 4, Col 5] Token(IDENTIFIER): y
[Line 4, Col 7] Token(OPERATOR): =
[Line 4, Col 9] Token(IDENTIFIER): x
[Line 4, Col 11] Token(OPERATOR): <<
[Line 4, Col 14] Token(INT): 1
[Line 4, Col 15] Token(SEPARATOR): ;
[Line 5, Col 1] Token(KEYWORD): int
[Line 5, Col 5] Token(IDENTIFIER): z
[Line 5, Col 7] Token(OPERATOR): =
[Line 5, Col 9] Token(INT): 1
[Line 5, Col 10] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): if
[Line 6, Col 4] Token(SEPARATOR): (
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
[Line 6, Col 13] Token(INT): 1
[Line 6, Col 14] Token(SEPARATOR): )
[Line 6, Col 16] Token(OPERATOR): ==
[Line 6, Col 19] Token(IDENTIFIER): z
[Line 6, Col 20] Token(SEPARATOR): )
[Line 6, Col 22] Token(SEPARATOR): {
[Line 7, Col 5] Token(IDENTIFIER): abc
[Line 7, Col 9] Token(OPERATOR): <<=
[Line 7, Col 13] Token(INT): 1
[Line 7, Col 14] Token(SEPARATOR): ;
[Line 8, Col 5] Token(KEYWORD): exit
[Line 8, Col 9] Token(SEPARATOR): (
[Line 8, Col 10] Token(IDENTIFIER): abc
[Line 8, Col 13] Token(SEPARATOR): )
[Line 8, Col 14] Token(SEPARATOR): ;
[Line 9, Col 1] Token(SEPARATOR): }
[Line 11, Col 1] Token(KEYWORD): exit
[Line 11, Col 5] Token(SEPARATOR): (
[Line 11, Col 6] Token(INT): 4096
[Line 12, Col 1] Token(SEPARATOR): )
[Line 12, Col 2] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x5c08139ec930, current now = 0x5c08139ec930
DEBUG LINK: linked stmt=0x5c08139ec9d0, current now = 0x5c08139ec9d0
DEBUG LINK: linked stmt=0x5c08139ecaf0, current now = 0x5c08139ecaf0
DEBUG LINK: linked stmt=0x5c08139ecbc0, current now = 0x5c08139ecbc0
DEBUG LINK: linked stmt=0x5c08139ecb90, current now = 0x5c08139ecb90
After parse_expression - condition: Node type 0, int_val=0
Condition parsed. Current token: )
Then block parsed. Current token: exit
DEBUG IF_SUBTREE: if_node=0x5c08139ed020, cond=0x5c08139ecd30, then_block=0x5c08139eccd0, then_block->right=(nil)
DEBUG LINK: linked stmt=0x5c08139ed020, current now = 0x5c08139ed020
DEBUG LINK: linked stmt=0x5c08139ed0a0, current now = 0x5c08139ed0a0

--- Syntax Tree ---
PROGRAM
  VAR_DECL: abc
    LITERAL_INT: 12
  VAR_DECL: x
    LITERAL_INT: 1
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 12
  VAR_DECL: z
    LITERAL_INT: 1
  IF_STATEMENT
    CONDITION:
      LITERAL_INT: 0
      BLOCK {
        ASSIGNMENT: =
          IDENTIFIER: abc
        EXIT_CALL
          LITERAL_INT: 12
      } // END BLOCK
  EXIT_CALL
    LITERAL_INT: 4096
Compilation successful. Output: generated

Exiting
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test8.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = a at line 1 and col 5
Found character = b at line 1 and col 6
Found character = c at line 1 and col 7
[Line 1, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 1 and col 8
[Line 1, Col 9] Token(OPERATOR): =
Found whitespace at line 1 and col 10
Found number = 12 at line 1 and col 11
[Line 1, Col 11] Token(INT): 12
Found Semicolon at line 1 and col 13
[Line 1, Col 13] Token(SEPARATOR): ;
Found whitespace at line 1 and col 14
Found new line at line 1 and col 15
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = x at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): x
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 1 at line 2 and col 9
[Line 2, Col 9] Token(INT): 1
Found Semicolon at line 2 and col 10
[Line 2, Col 10] Token(SEPARATOR): ;
Found whitespace at line 2 and col 11
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): +=
Found whitespace at line 3 and col 5
Found number = 5 at line 3 and col 6
[Line 3, Col 6] Token(INT): 5
Found Semicolon at line 3 and col 7
[Line 3, Col 7] Token(SEPARATOR): ;
Found whitespace at line 3 and col 8
Found new line at line 3 and col 9
Found keyword 'int' at line 4 and col 1
[Line 4, Col 1] Token(KEYWORD): int
Found whitespace at line 4 and col 4
Found character = y at line 4 and col 5
[Line 4, Col 5] Token(IDENTIFIER): y
Found whitespace at line 4 and col 6
[Line 4, Col 7] Token(OPERATOR): =
Found whitespace at line 4 and col 8
Found character = x at line 4 and col 9
[Line 4, Col 9] Token(IDENTIFIER): x
Found whitespace at line 4 and col 10
[Line 4, Col 11] Token(OPERATOR): <<
Found whitespace at line 4 and col 13
Found number = 1 at line 4 and col 14
[Line 4, Col 14] Token(INT): 1
Found Semicolon at line 4 and col 15
[Line 4, Col 15] Token(SEPARATOR): ;
Found whitespace at line 4 and col 16
Found new line at line 4 and col 17
Found keyword 'int' at line 5 and col 1
[Line 5, Col 1] Token(KEYWORD): int
Found whitespace at line 5 and col 4
Found character = z at line 5 and col 5
[Line 5, Col 5] Token(IDENTIFIER): z
Found whitespace at line 5 and col 6
[Line 5, Col 7] Token(OPERATOR): =
Found whitespace at line 5 and col 8
Found number = 1 at line 5 and col 9
[Line 5, Col 9] Token(INT): 1
Found Semicolon at line 5 and col 10
[Line 5, Col 10] Token(SEPARATOR): ;
Found whitespace at line 5 and col 11
Found new line at line 5 and col 12
Found keyword 'if' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): if
Found whitespace at line 6 and col 3
Found OPEN_PARENTHESIS ( at line 6 and col 4
[Line 6, Col 4] Token(SEPARATOR): (
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = y at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
Found number = 5 at line 6 and col 8
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
Found number = 1 at line 6 and col 11
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
Found number = 1 at line 6 and col 13
[Line 6, Col 13] Token(INT): 1
Found CLOSED_PARENTHESIS ) at line 6 and col 14
[Line 6, Col 14] Token(SEPARATOR): )
Found whitespace at line 6 and col 15
[Line 6, Col 16] Token(OPERATOR): ==
Found whitespace at line 6 and col 18
Found character = z at line 6 and col 19
[Line 6, Col 19] Token(IDENTIFIER): z
Found CLOSED_PARENTHESIS ) at line 6 and col 20
[Line 6, Col 20] Token(SEPARATOR): )
Found whitespace at line 6 and col 21
Found OPEN_PARENTHESIS { at line 6 and col 22
[Line 6, Col 22] Token(SEPARATOR): {
Found whitespace at line 6 and col 23
Found new line at line 6 and col 24
Found whitespace at line 7 and col 1
Found whitespace at line 7 and col 2
Found whitespace at line 7 and col 3
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
Found character = b at line 7 and col 6
Found character = c at line 7 and col 7
[Line 7, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 7 and col 8
[Line 7, Col 9] Token(OPERATOR): <<=
Found whitespace at line 7 and col 12
Found number = 1 at line 7 and col 13
[Line 7, Col 13] Token(INT): 1
Found Semicolon at line 7 and col 14
[Line 7, Col 14] Token(SEPARATOR): ;
Found whitespace at line 7 and col 15
Found new line at line 7 and col 16
Found whitespace at line 8 and col 1
Found whitespace at line 8 and col 2
Found whitespace at line 8 and col 3
Found whitespace at line 8 and col 4
Found keyword 'exit' at line 8 and col 5
[Line 8, Col 5] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 8 and col 9
[Line 8, Col 9] Token(SEPARATOR): (
Found character = a at line 8 and col 10
Found character = b at line 8 and col 11
Found character = c at line 8 and col 12
[Line 8, Col 10] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 8 and col 13
[Line 8, Col 13] Token(SEPARATOR): )
Found Semicolon at line 8 and col 14
[Line 8, Col 14] Token(SEPARATOR): ;
Found whitespace at line 8 and col 15
Found whitespace at line 8 and col 16
Found new line at line 8 and col 17
Found CLOSED_PARENTHESIS } at line 9 and col 1
[Line 9, Col 1] Token(SEPARATOR): }
Found whitespace at line 9 and col 2
Found whitespace at line 9 and col 3
Found whitespace at line 9 and col 4
Found new line at line 9 and col 5
Found keyword 'exit' at line 10 and col 1
[Line 10, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 10 and col 5
[Line 10, Col 5] Token(SEPARATOR): (
Found character = a at line 10 and col 6
Found character = b at line 10 and col 7
Found character = c at line 10 and col 8
[Line 10, Col 6] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 10 and col 9
[Line 10, Col 9] Token(SEPARATOR): )
Found Semicolon at line 10 and col 10
[Line 10, Col 10] Token(SEPARATOR): ;
Found whitespace at line 10 and col 11
Found whitespace at line 10 and col 12
Found new line at line 10 and col 13
Found keyword 'exit' at line 11 and col 1
[Line 11, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 11 and col 5
[Line 11, Col 5] Token(SEPARATOR): (
Found number = 4096 at line 11 and col 6
[Line 11, Col 6] Token(INT): 4096
Found whitespace at line 11 and col 12
Found new line at line 11 and col 13
Found CLOSED_PARENTHESIS ) at line 12 and col 1
[Line 12, Col 1] Token(SEPARATOR): )
Found Semicolon at line 12 and col 2
[Line 12, Col 2] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): abc
[Line 1, Col 9] Token(OPERATOR): =
[Line 1, Col 11] Token(INT): 12
[Line 1, Col 13] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): x
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 1
[Line 2, Col 10] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): +=
[Line 3, Col 6] Token(INT): 5
[Line 3, Col 7] Token(SEPARATOR): ;
[Line 4, Col 1] Token(KEYWORD): int
[Line 4, Col 5] Token(IDENTIFIER): y
[Line 4, Col 7] Token(OPERATOR): =
[Line 4, Col 9] Token(IDENTIFIER): x
[Line 4, Col 11] Token(OPERATOR): <<
[Line 4, Col 14] Token(INT): 1
[Line 4, Col 15] Token(SEPARATOR): ;
[Line 5, Col 1] Token(KEYWORD): int
[Line 5, Col 5] Token(IDENTIFIER): z
[Line 5, Col 7] Token(OPERATOR): =
[Line 5, Col 9] Token(INT): 1
[Line 5, Col 10] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): if
[Line 6, Col 4] Token(SEPARATOR): (
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
[Line 6, Col 13] Token(INT): 1
[Line 6, Col 14] Token(SEPARATOR): )
[Line 6, Col 16] Token(OPERATOR): ==
[Line 6, Col 19] Token(IDENTIFIER): z
[Line 6, Col 20] Token(SEPARATOR): )
[Line 6, Col 22] Token(SEPARATOR): {
[Line 7, Col 5] Token(IDENTIFIER): abc
[Line 7, Col 9] Token(OPERATOR): <<=
[Line 7, Col 13] Token(INT): 1
[Line 7, Col 14] Token(SEPARATOR): ;
[Line 8, Col 5] Token(KEYWORD): exit
[Line 8, Col 9] Token(SEPARATOR): (
[Line 8, Col 10] Token(IDENTIFIER): abc
[Line 8, Col 13] Token(SEPARATOR): )
[Line 8, Col 14] Token(SEPARATOR): ;
[Line 9, Col 1] Token(SEPARATOR): }
[Line 10, Col 1] Token(KEYWORD): exit
[Line 10, Col 5] Token(SEPARATOR): (
[Line 10, Col 6] Token(IDENTIFIER): abc
[Line 10, Col 9] Token(SEPARATOR): )
[Line 10, Col 10] Token(SEPARATOR): ;
[Line 11, Col 1] Token(KEYWORD): exit
[Line 11, Col 5] Token(SEPARATOR): (
[Line 11, Col 6] Token(INT): 4096
[Line 12, Col 1] Token(SEPARATOR): )
[Line 12, Col 2] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x59e51d18a9d0, current now = 0x59e51d18a9d0
DEBUG LINK: linked stmt=0x59e51d18aa70, current now = 0x59e51d18aa70
DEBUG LINK: linked stmt=0x59e51d18ab90, current now = 0x59e51d18ab90
DEBUG LINK: linked stmt=0x59e51d18ac60, current now = 0x59e51d18ac60
DEBUG LINK: linked stmt=0x59e51d18ac30, current now = 0x59e51d18ac30
After parse_expression - condition: Node type 0, int_val=0
Condition parsed. Current token: )
Then block parsed. Current token: exit
DEBUG IF_SUBTREE: if_node=0x59e51d18b0c0, cond=0x59e51d18add0, then_block=0x59e51d18ad70, then_block->right=(nil)
DEBUG LINK: linked stmt=0x59e51d18b0c0, current now = 0x59e51d18b0c0
DEBUG LINK: linked stmt=0x59e51d18b140, current now = 0x59e51d18b140
DEBUG LINK: linked stmt=0x59e51d18b170, current now = 0x59e51d18b170

--- Syntax Tree ---
PROGRAM
  VAR_DECL: abc
    LITERAL_INT: 12
  VAR_DECL: x
    LITERAL_INT: 1
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 12
  VAR_DECL: z
    LITERAL_INT: 1
  IF_STATEMENT
    CONDITION:
      LITERAL_INT: 0
      BLOCK {
        ASSIGNMENT: =
          IDENTIFIER: abc
        EXIT_CALL
          LITERAL_INT: 12
      } // END BLOCK
  EXIT_CALL
    LITERAL_INT: 12
  EXIT_CALL
    LITERAL_INT: 4096
Compilation successful. Output: generated

Exiting
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$ ./build/main test8.tc
Found keyword 'int' at line 1 and col 1
[Line 1, Col 1] Token(KEYWORD): int
Found whitespace at line 1 and col 4
Found character = a at line 1 and col 5
Found character = b at line 1 and col 6
Found character = c at line 1 and col 7
[Line 1, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 1 and col 8
[Line 1, Col 9] Token(OPERATOR): =
Found whitespace at line 1 and col 10
Found number = 12 at line 1 and col 11
[Line 1, Col 11] Token(INT): 12
Found Semicolon at line 1 and col 13
[Line 1, Col 13] Token(SEPARATOR): ;
Found whitespace at line 1 and col 14
Found new line at line 1 and col 15
Found keyword 'int' at line 2 and col 1
[Line 2, Col 1] Token(KEYWORD): int
Found whitespace at line 2 and col 4
Found character = x at line 2 and col 5
[Line 2, Col 5] Token(IDENTIFIER): x
Found whitespace at line 2 and col 6
[Line 2, Col 7] Token(OPERATOR): =
Found whitespace at line 2 and col 8
Found number = 1 at line 2 and col 9
[Line 2, Col 9] Token(INT): 1
Found Semicolon at line 2 and col 10
[Line 2, Col 10] Token(SEPARATOR): ;
Found whitespace at line 2 and col 11
Found new line at line 2 and col 12
Found character = x at line 3 and col 1
[Line 3, Col 1] Token(IDENTIFIER): x
Found whitespace at line 3 and col 2
[Line 3, Col 3] Token(OPERATOR): +=
Found whitespace at line 3 and col 5
Found number = 5 at line 3 and col 6
[Line 3, Col 6] Token(INT): 5
Found Semicolon at line 3 and col 7
[Line 3, Col 7] Token(SEPARATOR): ;
Found whitespace at line 3 and col 8
Found new line at line 3 and col 9
Found keyword 'int' at line 4 and col 1
[Line 4, Col 1] Token(KEYWORD): int
Found whitespace at line 4 and col 4
Found character = y at line 4 and col 5
[Line 4, Col 5] Token(IDENTIFIER): y
Found whitespace at line 4 and col 6
[Line 4, Col 7] Token(OPERATOR): =
Found whitespace at line 4 and col 8
Found character = x at line 4 and col 9
[Line 4, Col 9] Token(IDENTIFIER): x
Found whitespace at line 4 and col 10
[Line 4, Col 11] Token(OPERATOR): <<
Found whitespace at line 4 and col 13
Found number = 1 at line 4 and col 14
[Line 4, Col 14] Token(INT): 1
Found Semicolon at line 4 and col 15
[Line 4, Col 15] Token(SEPARATOR): ;
Found whitespace at line 4 and col 16
Found new line at line 4 and col 17
Found keyword 'int' at line 5 and col 1
[Line 5, Col 1] Token(KEYWORD): int
Found whitespace at line 5 and col 4
Found character = z at line 5 and col 5
[Line 5, Col 5] Token(IDENTIFIER): z
Found whitespace at line 5 and col 6
[Line 5, Col 7] Token(OPERATOR): =
Found whitespace at line 5 and col 8
Found number = 1 at line 5 and col 9
[Line 5, Col 9] Token(INT): 1
Found Semicolon at line 5 and col 10
[Line 5, Col 10] Token(SEPARATOR): ;
Found whitespace at line 5 and col 11
Found new line at line 5 and col 12
Found keyword 'if' at line 6 and col 1
[Line 6, Col 1] Token(KEYWORD): if
Found whitespace at line 6 and col 3
Found OPEN_PARENTHESIS ( at line 6 and col 4
[Line 6, Col 4] Token(SEPARATOR): (
Found OPEN_PARENTHESIS ( at line 6 and col 5
[Line 6, Col 5] Token(SEPARATOR): (
Found character = y at line 6 and col 6
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
Found number = 5 at line 6 and col 8
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
Found number = 1 at line 6 and col 11
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
Found number = 1 at line 6 and col 13
[Line 6, Col 13] Token(INT): 1
Found CLOSED_PARENTHESIS ) at line 6 and col 14
[Line 6, Col 14] Token(SEPARATOR): )
Found whitespace at line 6 and col 15
[Line 6, Col 16] Token(OPERATOR): -
Found whitespace at line 6 and col 17
Found number = 6 at line 6 and col 18
[Line 6, Col 18] Token(INT): 6
Found whitespace at line 6 and col 19
[Line 6, Col 20] Token(OPERATOR): ==
Found whitespace at line 6 and col 22
Found character = z at line 6 and col 23
[Line 6, Col 23] Token(IDENTIFIER): z
Found CLOSED_PARENTHESIS ) at line 6 and col 24
[Line 6, Col 24] Token(SEPARATOR): )
Found whitespace at line 6 and col 25
Found OPEN_PARENTHESIS { at line 6 and col 26
[Line 6, Col 26] Token(SEPARATOR): {
Found whitespace at line 6 and col 27
Found new line at line 6 and col 28
Found whitespace at line 7 and col 1
Found whitespace at line 7 and col 2
Found whitespace at line 7 and col 3
Found whitespace at line 7 and col 4
Found character = a at line 7 and col 5
Found character = b at line 7 and col 6
Found character = c at line 7 and col 7
[Line 7, Col 5] Token(IDENTIFIER): abc
Found whitespace at line 7 and col 8
[Line 7, Col 9] Token(OPERATOR): >>=
Found whitespace at line 7 and col 12
Found number = 1 at line 7 and col 13
[Line 7, Col 13] Token(INT): 1
Found Semicolon at line 7 and col 14
[Line 7, Col 14] Token(SEPARATOR): ;
Found whitespace at line 7 and col 15
Found new line at line 7 and col 16
Found whitespace at line 8 and col 1
Found whitespace at line 8 and col 2
Found whitespace at line 8 and col 3
Found whitespace at line 8 and col 4
Found keyword 'exit' at line 8 and col 5
[Line 8, Col 5] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 8 and col 9
[Line 8, Col 9] Token(SEPARATOR): (
Found character = a at line 8 and col 10
Found character = b at line 8 and col 11
Found character = c at line 8 and col 12
[Line 8, Col 10] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 8 and col 13
[Line 8, Col 13] Token(SEPARATOR): )
Found Semicolon at line 8 and col 14
[Line 8, Col 14] Token(SEPARATOR): ;
Found whitespace at line 8 and col 15
Found whitespace at line 8 and col 16
Found new line at line 8 and col 17
Found CLOSED_PARENTHESIS } at line 9 and col 1
[Line 9, Col 1] Token(SEPARATOR): }
Found whitespace at line 9 and col 2
Found whitespace at line 9 and col 3
Found whitespace at line 9 and col 4
Found new line at line 9 and col 5
Found keyword 'exit' at line 10 and col 1
[Line 10, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 10 and col 5
[Line 10, Col 5] Token(SEPARATOR): (
Found character = a at line 10 and col 6
Found character = b at line 10 and col 7
Found character = c at line 10 and col 8
[Line 10, Col 6] Token(IDENTIFIER): abc
Found CLOSED_PARENTHESIS ) at line 10 and col 9
[Line 10, Col 9] Token(SEPARATOR): )
Found Semicolon at line 10 and col 10
[Line 10, Col 10] Token(SEPARATOR): ;
Found whitespace at line 10 and col 11
Found whitespace at line 10 and col 12
Found new line at line 10 and col 13
Found keyword 'exit' at line 11 and col 1
[Line 11, Col 1] Token(KEYWORD): exit
Found OPEN_PARENTHESIS ( at line 11 and col 5
[Line 11, Col 5] Token(SEPARATOR): (
Found number = 4096 at line 11 and col 6
[Line 11, Col 6] Token(INT): 4096
Found whitespace at line 11 and col 12
Found new line at line 11 and col 13
Found CLOSED_PARENTHESIS ) at line 12 and col 1
[Line 12, Col 1] Token(SEPARATOR): )
Found Semicolon at line 12 and col 2
[Line 12, Col 2] Token(SEPARATOR): ;

--- All Tokens ---
[Line 1, Col 1] Token(KEYWORD): int
[Line 1, Col 5] Token(IDENTIFIER): abc
[Line 1, Col 9] Token(OPERATOR): =
[Line 1, Col 11] Token(INT): 12
[Line 1, Col 13] Token(SEPARATOR): ;
[Line 2, Col 1] Token(KEYWORD): int
[Line 2, Col 5] Token(IDENTIFIER): x
[Line 2, Col 7] Token(OPERATOR): =
[Line 2, Col 9] Token(INT): 1
[Line 2, Col 10] Token(SEPARATOR): ;
[Line 3, Col 1] Token(IDENTIFIER): x
[Line 3, Col 3] Token(OPERATOR): +=
[Line 3, Col 6] Token(INT): 5
[Line 3, Col 7] Token(SEPARATOR): ;
[Line 4, Col 1] Token(KEYWORD): int
[Line 4, Col 5] Token(IDENTIFIER): y
[Line 4, Col 7] Token(OPERATOR): =
[Line 4, Col 9] Token(IDENTIFIER): x
[Line 4, Col 11] Token(OPERATOR): <<
[Line 4, Col 14] Token(INT): 1
[Line 4, Col 15] Token(SEPARATOR): ;
[Line 5, Col 1] Token(KEYWORD): int
[Line 5, Col 5] Token(IDENTIFIER): z
[Line 5, Col 7] Token(OPERATOR): =
[Line 5, Col 9] Token(INT): 1
[Line 5, Col 10] Token(SEPARATOR): ;
[Line 6, Col 1] Token(KEYWORD): if
[Line 6, Col 4] Token(SEPARATOR): (
[Line 6, Col 5] Token(SEPARATOR): (
[Line 6, Col 6] Token(IDENTIFIER): y
[Line 6, Col 7] Token(OPERATOR): -
[Line 6, Col 8] Token(INT): 5
[Line 6, Col 9] Token(OPERATOR): <<
[Line 6, Col 11] Token(INT): 1
[Line 6, Col 12] Token(OPERATOR): -
[Line 6, Col 13] Token(INT): 1
[Line 6, Col 14] Token(SEPARATOR): )
[Line 6, Col 16] Token(OPERATOR): -
[Line 6, Col 18] Token(INT): 6
[Line 6, Col 20] Token(OPERATOR): ==
[Line 6, Col 23] Token(IDENTIFIER): z
[Line 6, Col 24] Token(SEPARATOR): )
[Line 6, Col 26] Token(SEPARATOR): {
[Line 7, Col 5] Token(IDENTIFIER): abc
[Line 7, Col 9] Token(OPERATOR): >>=
[Line 7, Col 13] Token(INT): 1
[Line 7, Col 14] Token(SEPARATOR): ;
[Line 8, Col 5] Token(KEYWORD): exit
[Line 8, Col 9] Token(SEPARATOR): (
[Line 8, Col 10] Token(IDENTIFIER): abc
[Line 8, Col 13] Token(SEPARATOR): )
[Line 8, Col 14] Token(SEPARATOR): ;
[Line 9, Col 1] Token(SEPARATOR): }
[Line 10, Col 1] Token(KEYWORD): exit
[Line 10, Col 5] Token(SEPARATOR): (
[Line 10, Col 6] Token(IDENTIFIER): abc
[Line 10, Col 9] Token(SEPARATOR): )
[Line 10, Col 10] Token(SEPARATOR): ;
[Line 11, Col 1] Token(KEYWORD): exit
[Line 11, Col 5] Token(SEPARATOR): (
[Line 11, Col 6] Token(INT): 4096
[Line 12, Col 1] Token(SEPARATOR): )
[Line 12, Col 2] Token(SEPARATOR): ;
DEBUG LINK: linked stmt=0x6125bbd839f0, current now = 0x6125bbd839f0
DEBUG LINK: linked stmt=0x6125bbd83a90, current now = 0x6125bbd83a90
DEBUG LINK: linked stmt=0x6125bbd83bb0, current now = 0x6125bbd83bb0
DEBUG LINK: linked stmt=0x6125bbd83c80, current now = 0x6125bbd83c80
DEBUG LINK: linked stmt=0x6125bbd83c50, current now = 0x6125bbd83c50
After parse_expression - condition: Node type 0, int_val=1
Condition parsed. Current token: )
Then block parsed. Current token: exit
DEBUG IF_SUBTREE: if_node=0x6125bbd840e0, cond=0x6125bbd83d40, then_block=0x6125bbd83e20, then_block->right=(nil)
DEBUG LINK: linked stmt=0x6125bbd840e0, current now = 0x6125bbd840e0
DEBUG LINK: linked stmt=0x6125bbd84160, current now = 0x6125bbd84160
DEBUG LINK: linked stmt=0x6125bbd84190, current now = 0x6125bbd84190

--- Syntax Tree ---
PROGRAM
  VAR_DECL: abc
    LITERAL_INT: 12
  VAR_DECL: x
    LITERAL_INT: 1
  ASSIGNMENT: =
    IDENTIFIER: x
  VAR_DECL: y
    LITERAL_INT: 12
  VAR_DECL: z
    LITERAL_INT: 1
  IF_STATEMENT
    CONDITION:
      LITERAL_INT: 1
      BLOCK {
        ASSIGNMENT: =
          IDENTIFIER: abc
        EXIT_CALL
          LITERAL_INT: 6
      } // END BLOCK
  EXIT_CALL
    LITERAL_INT: 6
  EXIT_CALL
    LITERAL_INT: 4096
Compilation successful. Output: generated

Exiting
acp-pradhyuman@b3170:/mnt/d/Desktop/immense/OS/compiler_0$